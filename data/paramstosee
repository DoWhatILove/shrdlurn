token :: (lambda s2 (call setIntersection (call getRowTop (number 0)) (var s2))) <==> tp	3.239563689906999
token :: (number 0 COLOR) <==> cy	2.022962316564551
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> change	1.9126500448614456
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> change	1.8735890483580047
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> cy	1.7471560302257223
token :: (call getRowTop (number 0)) <==> tp	1.744514956606906
token :: (number 0) <==> tp	1.744514956606906
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> cy	1.7271399288820637
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> br	1.6542930765770263
token :: (lambda s2 (call setIntersection (call getColor (number 0 COLOR)) (var s2))) <==> cy	1.6319994254457741
token :: (number 0) <==> top	1.6198649589377616
token :: (call getRowTop (number 0)) <==> top	1.6198649589377616
token :: (lambda s2 (call setIntersection (call getRowTop (number 0)) (var s2))) <==> cy	1.4091955694014242
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> rm	1.2883187705459394
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> rm	1.2883187705459394
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> rm	1.2411029721920452
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> tp	1.2329307967135286
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> tp	1.2329307967135286
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> tp	1.232451522356458
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> tp	1.2310725889278271
token :: (call getColor (number 0 COLOR)) <==> cy	1.1990131074694876
token :: (lambda s2 (call setIntersection (call getColor (number 1 COLOR)) (var s2))) <==> kp	1.1650357583300344
token :: (lambda s2 (call setIntersection (call getRowTop (number 0)) (var s2))) <==> br	1.111515427724991
token :: (call wallToString (call keepSet (call getColor (number 1 COLOR)))) <==> kp	1.104453763535316
token :: (call keepSet (call getColor (number 1 COLOR))) <==> kp	1.104453763535316
token :: (lambda s2 (call setUnion (call getColor (number 0 COLOR)) (var s2))) <==> cy	1.0837479422353473
token :: (lambda s2 (call setIntersection (call getColor (number 1 COLOR)) (var s2))) <==> br	1.0547022297077286
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> rm	1.0121094293076904
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> rm	1.0121094293076904
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> rm	1.0108999905967688
token :: (lambda s2 (call setIntersection (call getRowTop (number 0)) (var s2))) <==> change	0.9512876563806585
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> rm	0.9168840180949294
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> kp	0.885409760739733
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> kp	0.885409760739733
token :: (call removeSet (call getColor (number 1 COLOR))) <==> rm	0.8800961116422813
token :: (call wallToString (call removeSet (call getColor (number 1 COLOR)))) <==> rm	0.8800961116422813
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> rm	0.8109462549616092
token :: (lambda s2 (call setIntersection (call getRowTop (number 0)) (var s2))) <==> top	0.8006530519602406
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> kp	0.7824292949277284
token :: (number 0 COLOR) <==> change	0.7591203658037772
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> cy	0.7392257331637057
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> cy	0.7362751127341467
token :: (lambda s2 (call setIntersection (call getColor (number 1 COLOR)) (var s2))) <==> rm	0.7246987363973503
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> change	0.7210198486507813
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> change	0.7210198486507813
token :: (lambda s2 (call setUnion (call getColor (number 0 COLOR)) (var s2))) <==> change	0.7097711544326658
token :: (number 1 COLOR) <==> br	0.7055879576885811
token :: (call getColor (number 1 COLOR)) <==> br	0.7021007379403261
token :: (lambda s2 (call setUnion (call getColor (number 1 COLOR)) (var s2))) <==> change	0.6921347074858484
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> change	0.6875968177103735
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> change	0.6856293348991335
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> cy	0.6430705341439173
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> cy	0.6430705341439173
token :: (lambda s2 (call setUnion (call getColor (number 1 COLOR)) (var s2))) <==> br	0.6137493373295894
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> br	0.6003544630203974
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> br	0.5715425022368762
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> br	0.5611088475892037
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> change	0.4757582003314882
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> change	0.4757582003314882
token :: (lambda s2 (call setIntersection (call getColor (number 0 COLOR)) (var s2))) <==> change	0.47377620217374905
token :: (call getColor (number 1 COLOR)) <==> change	0.4427661138239602
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> cy	0.42343098926929207
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> cy	0.42343098926929207
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR)) <==> change	0.3984833519692814
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR))) <==> change	0.3984833519692814
token :: (call getColor (number 1 COLOR)) <==> rm	0.3940615960761167
token :: (lambda c (call changeSetColor (call getColor (number 0 COLOR)) (var c))) <==> change	0.3841653437662049
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> tp	0.3604041809638374
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> tp	0.3604041809638374
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> tp	0.3597971504920346
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> tp	0.35886206635008483
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> kp	0.3041691391952584
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> kp	0.3041691391952584
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> tp	0.2902336299642885
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> tp	0.2902336299642885
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> tp	0.2902335801236107
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> tp	0.2902312574622813
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> cy	0.28363743429985433
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> cy	0.28363743429985433
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> tp	0.26481867264799824
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> tp	0.26481867264799824
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> tp	0.2648186716889377
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> tp	0.2648184126513749
token :: (lambda s2 (call setIntersection (call getColor (number 1 COLOR)) (var s2))) <==> tp	0.2648184106556442
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> change	0.24160855273028428
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> change	0.24160855273028428
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> change	0.2414845447409546
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> change	0.2409893863086505
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> cy	0.24061899403450424
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> cy	0.24061899403450424
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> cy	0.23980201457977543
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> change	0.22694086133197858
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> change	0.22694086133197858
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> br	0.22422603317532458
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> br	0.22422603317532458
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> br	0.21520183000135068
token :: (number 1 COLOR) <==> change	0.21365133692807928
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> cy	0.21321150614306011
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> br	0.21238555821863317
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> br	0.21238555821863317
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> cy	0.1937789079661837
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> rm	0.18169051734288297
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> rm	0.18169051734288297
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> top	0.17413613571426714
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> kp	0.17148162297350686
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> kp	0.17148162297350686
token :: (number 0) <==> br	0.15569635601582021
token :: (call getRowTop (number 0)) <==> br	0.15569635601582021
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR))) <==> cy	0.15146624005806375
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR)) <==> cy	0.15146624005806375
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> br	0.1502318985008097
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> br	0.1502318985008097
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> change	0.14449728667136463
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> change	0.14449728667136463
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> change	0.13628988382037663
token :: (call keepSet (call getColor (number 1 COLOR))) <==> br	0.13440463212228732
token :: (call wallToString (call keepSet (call getColor (number 1 COLOR)))) <==> br	0.13440463212228732
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> cy	0.12881798716761575
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> cy	0.12881798716761575
token :: (lambda s2 (call setUnion (call getColor (number 1 COLOR)) (var s2))) <==> cy	0.12394054645930012
token :: (lambda s2 (call setIntersection (call getColor (number 0 COLOR)) (var s2))) <==> tp	0.1208089688005702
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> change	0.1200233987963082
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> kp	0.112088388532668
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> kp	0.112088388532668
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> kp	0.1097120768247799
token :: (lambda c (call changeSetColor (call getColor (number 0 COLOR)) (var c))) <==> cy	0.102961979964891
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> cy	0.10237745395641806
token :: (lambda s2 (call setIntersection (call getColor (number 1 COLOR)) (var s2))) <==> top	0.0815362079326224
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> br	0.07869781855309943
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> rm	0.07804480548945636
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> rm	0.07804480548945636
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> change	0.05221172146723413
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> change	0.05221172146723413
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> cy	0.04688615542012294
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> cy	0.04688615542012294
token :: (call removeSet (call getColor (number 0 COLOR))) <==> rm	0.046590314726978735
token :: (call wallToString (call removeSet (call getColor (number 0 COLOR)))) <==> rm	0.046590314726978735
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> change	0.03669798974624766
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> change	0.03669798974624766
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> change	0.034109073460140374
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> change	0.028593224308873115
token :: (number 0) <==> change	0.002406042877922774
token :: (call getRowTop (number 0)) <==> change	0.002406042877922774
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> cy	-0.002387773275915653
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> cy	-0.002387773275915653
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> cy	-0.014348858903461058
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> br	-0.01485653119221652
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> br	-0.01485653119221652
token :: (lambda s2 (call setIntersection (call getColor (number 0 COLOR)) (var s2))) <==> kp	-0.03202610516369798
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> cy	-0.036760829288728654
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> cy	-0.036760829288728654
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> br	-0.039095447164830516
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> br	-0.039095447164830516
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> rm	-0.0609668100245116
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> rm	-0.0609668100245116
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> change	-0.09716270853943205
token :: (call removeSet (call getColor (number 1 COLOR))) <==> br	-0.10462928719121196
token :: (call wallToString (call removeSet (call getColor (number 1 COLOR)))) <==> br	-0.10462928719121196
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> cy	-0.10522456142487378
token :: (call wallToString (call removeSet (call getColor (number 0 COLOR)))) <==> cy	-0.13860784281523944
token :: (call removeSet (call getColor (number 0 COLOR))) <==> cy	-0.13860784281523944
token :: (call getRowTop (number 0)) <==> kp	-0.1454412399773838
token :: (number 0) <==> kp	-0.1454412399773838
token :: (lambda s2 (call setUnion (call getColor (number 1 COLOR)) (var s2))) <==> kp	-0.1556142971803986
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> br	-0.15815283362069088
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> br	-0.15815283362069088
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR))) <==> br	-0.18788741488803826
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR)) <==> br	-0.18788741488803826
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> rm	-0.18814916397318213
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> rm	-0.18814916397318213
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> cy	-0.20434929987531616
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> cy	-0.20434929987531616
token :: (lambda c (call changeSetColor (call getColor (number 0 COLOR)) (var c))) <==> br	-0.21341563679286157
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> br	-0.22070328033908995
token :: (call keepSet (call getRowTop (number 0))) <==> kp	-0.22265430638824915
token :: (call wallToString (call keepSet (call getRowTop (number 0)))) <==> kp	-0.22265430638824915
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> kp	-0.24014614869182405
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> top	-0.24756642174953722
token :: (call getColor (number 0 COLOR)) <==> change	-0.2479938713836116
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> br	-0.24804385796831
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> br	-0.24804385796831
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> br	-0.2731069038893247
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> br	-0.2731069038893247
token :: (call getColor (number 1 COLOR)) <==> kp	-0.2785258909947806
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> change	-0.27944388084787336
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> change	-0.27944388084787336
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> cy	-0.28065143566260425
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> cy	-0.28065143566260425
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> br	-0.29279042638518493
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> br	-0.29279042638518493
token :: (lambda s2 (call setIntersection (call getRowTop (number 0)) (var s2))) <==> rm	-0.3006290114671043
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> br	-0.3025651746912524
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> br	-0.3025651746912524
token :: (lambda s2 (call setIntersection (call getColor (number 0 COLOR)) (var s2))) <==> top	-0.3359259890612335
token :: (lambda s2 (call setIntersection (call getRowTop (number 0)) (var s2))) <==> kp	-0.35703629226112976
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> br	-0.36815121054501193
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> br	-0.36815121054501193
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> change	-0.37087600346393285
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> br	-0.380871139979043
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> cy	-0.3831735525676589
token :: (number 0 COLOR) <==> br	-0.4115474215599877
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> top	-0.43736692204069993
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> top	-0.43736692204069993
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> change	-0.43878487518164977
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> rm	-0.4428540267042499
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> rm	-0.4428540267042499
token :: (lambda s2 (call setUnion (call getColor (number 0 COLOR)) (var s2))) <==> br	-0.44335068629812097
token :: (number 0) <==> cy	-0.450526867218553
token :: (call getRowTop (number 0)) <==> cy	-0.450526867218553
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> top	-0.45057089211996765
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> top	-0.45057089211996765
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> top	-0.4597552526356353
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> change	-0.4714170133024027
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> cy	-0.5056847963651842
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> cy	-0.5056847963651842
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> br	-0.5115413918810405
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> br	-0.5115413918810405
token :: (call wallToString (call removeSet (call getRowTop (number 0)))) <==> rm	-0.5134279336801583
token :: (call removeSet (call getRowTop (number 0))) <==> rm	-0.5134279336801583
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> br	-0.5162457149483268
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> br	-0.5305841099364839
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> br	-0.5329775916643622
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> cy	-0.5435342709564978
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> br	-0.5447166000630034
token :: (call getRowTop (number 0)) <==> rm	-0.5568498173454732
token :: (number 0) <==> rm	-0.5568498173454732
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> kp	-0.5744699625185683
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> br	-0.5763486708364494
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> cy	-0.5961391223930735
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> cy	-0.5961391223930735
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> change	-0.6093252722428937
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> change	-0.6093252722428937
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> br	-0.6170381030736096
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> kp	-0.6512329325042628
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> kp	-0.6512329325042628
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> cy	-0.6544899155260073
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> cy	-0.6544899155260073
token :: (lambda s2 (call setUnion (call getColor (number 0 COLOR)) (var s2))) <==> kp	-0.6598661732952061
token :: (lambda s2 (call setIntersection (call getColor (number 0 COLOR)) (var s2))) <==> br	-0.6769125260338074
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> cy	-0.6811675616314479
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> cy	-0.6811675616314479
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> kp	-0.6821560074434075
token :: (call getColor (number 0 COLOR)) <==> kp	-0.6998510359074531
token :: (call keepSet (call getColor (number 0 COLOR))) <==> cy	-0.7052445846058502
token :: (call wallToString (call keepSet (call getColor (number 0 COLOR)))) <==> cy	-0.7052445846058502
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> cy	-0.7114707044808718
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> cy	-0.7157528183052647
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> cy	-0.7157528183052647
token :: (call getColor (number 1 COLOR)) <==> tp	-0.7444392425836723
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> top	-0.7459121175997439
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> cy	-0.7504111237006894
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> br	-0.7674653209425918
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> br	-0.7674653209425918
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> br	-0.7732241068815181
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> br	-0.7754614232421271
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> br	-0.7754614232421271
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> br	-0.7892734190572133
token :: (number 0 COLOR) <==> kp	-0.7983977962031754
token :: (call getColor (number 0 COLOR)) <==> top	-0.8233529020530548
token :: (number 0 COLOR) <==> top	-0.8236395782682391
token :: (lambda s2 (call setIntersection (call getColor (number 0 COLOR)) (var s2))) <==> rm	-0.825872778342045
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> kp	-0.8342359370514018
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> kp	-0.8342359370514018
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> br	-0.8546174201294943
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> br	-0.8546174201294943
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> kp	-0.8582386534014657
token :: (number 1 COLOR) <==> kp	-0.8742368842843422
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> top	-0.8746874272090153
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> top	-0.8746874272090153
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> br	-0.8884277702514194
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> br	-0.8884277702514194
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> change	-0.8886702118078086
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> change	-0.8886702118078086
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> cy	-0.8893562202876434
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> cy	-0.8893562202876434
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> change	-0.8895794411748786
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> cy	-0.8915691722912217
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> change	-0.8919314908281266
token :: (lambda s2 (call setUnion (call getColor (number 0 COLOR)) (var s2))) <==> rm	-0.893253446845247
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> br	-0.9055751968387997
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> br	-0.9099405406104838
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> br	-0.9099405406104838
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> br	-0.9172090110423667
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> top	-0.9350662941241755
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> top	-0.9350662941241755
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> cy	-0.9378236781652215
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> cy	-0.9378236781652215
token :: (call getColor (number 0 COLOR)) <==> rm	-0.9491365171179039
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR))) <==> change	-0.9727579310633939
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR)) <==> change	-0.9727579310633939
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR)) <==> cy	-0.9807672426134685
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR))) <==> cy	-0.9807672426134685
token :: (lambda c (call changeSetColor (call getColor (number 1 COLOR)) (var c))) <==> change	-0.9863766702180083
token :: (lambda c (call changeSetColor (call getColor (number 1 COLOR)) (var c))) <==> cy	-0.9909499775156154
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> rm	-0.9966046201684368
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> rm	-0.9966046201684368
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> change	-0.9968229256631786
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> change	-0.9968229256631786
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> cy	-0.9975291616675923
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> cy	-0.9975291616675923
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> change	-0.9984115740840993
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> cy	-0.9988239899549137
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> change	-0.9992248549717015
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> change	-0.9999012066532332
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> change	-0.9999012066532332
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> change	-0.999950619299603
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> change	-0.9999776027082088
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> change	-1.0000000000000981
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> change	-1.0000000000000981
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> change	-1.0000000000000981
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> change	-1.0000000000000981
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> change	-1.0000000000001708
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> change	-1.0000000000001708
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> change	-1.000000000000243
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> change	-1.000000000000243
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> change	-1.000000000000243
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> change	-1.000000000000243
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) <==> change	-1.0000000000008311
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) <==> change	-1.0000000000008311
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> change	-1.0000000000014913
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> change	-1.0000000000014913
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> change	-1.0000000000014913
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> change	-1.0000000000014913
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> change	-1.0000000000014913
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> change	-1.0000000000014913
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> change	-1.0000000000014913
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> change	-1.0000000000014913
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> change	-1.0000000000131726
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> change	-1.0000000000131726
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> change	-1.0000000000131726
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> change	-1.0000000000131726
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> change	-1.0000000000266354
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> change	-1.0000000000266354
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> change	-1.0000000000400973
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> change	-1.0000000000400973
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> change	-1.0000000000400973
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> change	-1.0000000000400973
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> change	-1.0000000000692566
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> change	-1.0000000000692566
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> change	-1.000000000103302
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> change	-1.000000000103302
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> change	-1.000000000103302
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> change	-1.000000000103302
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> change	-1.0000000001247737
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> change	-1.0000000001247737
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> change	-1.0000000001364096
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> change	-1.0000000001364096
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> change	-1.000000000141559
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> change	-1.0000000001585503
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> change	-1.0000000001585503
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> change	-1.0000000001585503
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> change	-1.0000000001585503
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> change	-1.0000000001797325
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> change	-1.0000000001797325
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> change	-1.0000000002138623
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> change	-1.0000000002138623
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> change	-1.0000000002229137
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> change	-1.0000000002229137
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> change	-1.0000000002229137
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> change	-1.0000000002229137
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> change	-1.0000000002229137
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> change	-1.0000000002229137
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> change	-1.0000000002229137
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> change	-1.0000000002229137
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> change	-1.0000000002379457
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> change	-1.0000000002561618
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> change	-1.0000000002561618
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> change	-1.0000000002561618
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> change	-1.0000000002561618
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> change	-1.000000000280599
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> change	-1.000000000280599
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> change	-1.0000000003394816
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> change	-1.0000000003394816
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> change	-1.0000000004026472
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> change	-1.0000000004026472
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> change	-1.0000000004026472
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> change	-1.0000000004026472
token :: (lambda s2 (call setUnion (call getRowTop (number 1)) (var s2))) <==> change	-1.000000000592877
token :: (lambda s2 (call setIntersection (call getRowTop (number 1)) (var s2))) <==> change	-1.000000000592877
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> change	-1.000000000676463
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> change	-1.0000000008233334
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> change	-1.0000000008233334
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) <==> change	-1.0000000012046641
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> change	-1.0000000012113666
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> change	-1.0000000012113666
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> change	-1.0000000012113666
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> change	-1.0000000012113666
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) <==> change	-1.0000000014225716
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) <==> change	-1.0000000014225716
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> change	-1.0000000014669344
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> change	-1.0000000014669344
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> change	-1.0000000014669344
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> change	-1.0000000014669344
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> change	-1.0000000014669344
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> change	-1.0000000014669344
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> change	-1.0000000014669344
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> change	-1.0000000014669344
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> change	-1.0000000016511346
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> change	-1.0000000016511346
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> change	-1.0000000021713829
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> change	-1.0000000021713829
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> change	-1.0000000021713829
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> change	-1.0000000021713829
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> change	-1.0000000025645437
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> change	-1.0000000025645437
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> change	-1.0000000025645437
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> change	-1.0000000025645437
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> change	-1.0000000025645437
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> change	-1.0000000025645437
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> change	-1.0000000025645437
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> change	-1.0000000025645437
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> change	-1.0000000034574124
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> change	-1.000000003670558
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> change	-1.000000003670558
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> change	-1.0000000052636897
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> change	-1.0000000052636897
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> change	-1.0000000091598018
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> change	-1.0000000136717044
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> change	-1.0000000146490453
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> change	-1.0000000146490453
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR))) <==> change	-1.0000000159019682
token :: (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR)) <==> change	-1.0000000159019682
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> change	-1.0000000181776656
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> change	-1.0000000181776656
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> change	-1.0000000238859956
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> change	-1.0000000238859956
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> change	-1.0000000238859956
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> change	-1.0000000238859956
token :: (lambda c (call changeSetColor (call getRowTop (number 1)) (var c))) <==> change	-1.0000000277741439
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> change	-1.000000031946131
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> change	-1.000000031946131
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> change	-1.0000000341974231
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> change	-1.0000000374935019
token :: (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR)) <==> change	-1.0000000396463202
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR))) <==> change	-1.0000000396463202
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> change	-1.0000000502171809
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> change	-1.0000000502171809
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> change	-1.0000000569177943
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> change	-1.0000000569177943
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> change	-1.0000000599835306
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> change	-1.0000000599835306
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> change	-1.0000000658272035
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> change	-1.0000000658272035
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> change	-1.0000000658272035
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> change	-1.0000000658272035
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> change	-1.0000000694883535
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> change	-1.0000000694883535
token :: (call getRowTop (number 1)) <==> change	-1.0000000701311915
token :: (number 1) <==> change	-1.0000000701311915
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> change	-1.0000000900979222
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> cy	-1.0000000938212976
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> cy	-1.0000000938212976
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> cy	-1.0000000938212976
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> cy	-1.0000000938212976
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> change	-1.0000001107074918
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> change	-1.0000001107074918
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> change	-1.0000001161853687
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> change	-1.0000001299712755
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> change	-1.0000001299712755
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> change	-1.0000001324188452
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> change	-1.0000001346799778
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> change	-1.0000001346799778
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> change	-1.0000001720591727
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> change	-1.0000001723872078
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> change	-1.0000001723872078
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> change	-1.0000002079198944
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> change	-1.0000002079198944
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> change	-1.000000216997132
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> change	-1.0000002313117942
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> change	-1.0000002313117942
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> change	-1.0000002413984153
token :: (call removeSet (call getRowTop (number 1))) <==> change	-1.0000002468322031
token :: (call wallToString (call removeSet (call getRowTop (number 1)))) <==> change	-1.0000002468322031
token :: (call wallToString (call keepSet (call getRowTop (number 1)))) <==> change	-1.0000002468322031
token :: (call keepSet (call getRowTop (number 1))) <==> change	-1.0000002468322031
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> change	-1.0000003040229906
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> change	-1.0000003040229906
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> change	-1.0000003099209225
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> change	-1.0000003099209225
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> change	-1.0000003099209225
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> change	-1.0000003099209225
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> change	-1.0000003481168536
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> change	-1.0000003481168536
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> change	-1.000000400542648
token :: (lambda s2 (call setUnion (call getRowTop (number 0)) (var s2))) <==> change	-1.0000004740024562
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> change	-1.0000005662959275
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) <==> change	-1.0000005965934269
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) <==> change	-1.0000006055324726
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> cy	-1.000000634318496
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> cy	-1.000000634318496
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> cy	-1.000000634318496
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> cy	-1.000000634318496
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> change	-1.0000006655891727
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> change	-1.0000006655891727
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> change	-1.0000007109873725
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> change	-1.0000007109873725
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> change	-1.0000007109873725
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> change	-1.0000007109873725
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> cy	-1.0000007367785024
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> cy	-1.0000007367785024
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> change	-1.000001000173011
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> change	-1.000001000173011
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> change	-1.000001000173011
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> change	-1.000001000173011
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> change	-1.0000010770014847
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> change	-1.0000010770014847
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> change	-1.0000010770014847
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> change	-1.0000010770014847
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> change	-1.000001117213514
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> change	-1.0000012737438853
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> change	-1.0000012737438853
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> cy	-1.000001379735707
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> cy	-1.000001379735707
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> cy	-1.000001379735707
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> cy	-1.000001379735707
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> change	-1.0000015806778388
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> change	-1.0000015806778388
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR))) <==> change	-1.0000018432318138
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR)) <==> change	-1.0000018432318138
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> change	-1.000001932072947
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> change	-1.000001932072947
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> cy	-1.0000019739543582
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> cy	-1.0000019739543582
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> change	-1.0000020174298947
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> change	-1.0000020174298947
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> change	-1.0000020174298947
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> change	-1.0000020174298947
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> tp	-1.0000021947217466
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> tp	-1.0000021947217466
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> tp	-1.0000022119226675
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> change	-1.0000027020849505
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> change	-1.0000027020849505
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> cy	-1.0000030825310369
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> cy	-1.0000030825310369
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) <==> cy	-1.0000030971450298
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) <==> cy	-1.0000030971450298
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> change	-1.0000032614851158
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> change	-1.000003470732151
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> change	-1.000003470732151
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> change	-1.0000036263290522
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> change	-1.0000036263290522
token :: (call wallToString (call keepSet (call getRowTop (number 0)))) <==> change	-1.0000044559979475
token :: (call keepSet (call getRowTop (number 0))) <==> change	-1.0000044559979475
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> change	-1.0000045908972848
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> change	-1.0000045908972848
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> change	-1.000004644233004
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> change	-1.000004644233004
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> cy	-1.0000053105383566
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> cy	-1.0000053105383566
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> cy	-1.0000053105383566
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> cy	-1.0000053105383566
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> cy	-1.000005435269066
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> cy	-1.0000054575115578
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> cy	-1.0000054575115578
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> cy	-1.0000054575115578
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> cy	-1.0000054575115578
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> cy	-1.0000054575115578
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> cy	-1.0000054575115578
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> cy	-1.0000054575115578
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> cy	-1.0000054575115578
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> cy	-1.0000054656602715
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> cy	-1.0000054656602715
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> cy	-1.000005530743578
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> cy	-1.000005530743578
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> cy	-1.000005530743578
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> cy	-1.000005530743578
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> change	-1.0000056592101068
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> change	-1.0000056592101068
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> change	-1.0000059334582558
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> change	-1.0000062077064062
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> change	-1.0000062077064062
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> change	-1.0000064701487177
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> change	-1.0000064701487177
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> tp	-1.0000077324467556
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> top	-1.0000086314765522
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> top	-1.0000086314765522
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> cy	-1.000008896583773
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> cy	-1.000008896583773
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> change	-1.0000093126299336
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> cy	-1.0000096547008204
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> cy	-1.0000096547008204
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> change	-1.0000105915161925
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> change	-1.0000105915161925
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> cy	-1.0000112358260917
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> cy	-1.0000112358260917
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> cy	-1.0000114220107312
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> cy	-1.0000114220107312
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> change	-1.00001398102686
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> change	-1.00001398102686
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> cy	-1.0000153444450872
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> cy	-1.0000153444450872
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> cy	-1.0000153444450872
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> cy	-1.0000153444450872
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> tp	-1.0000164149474935
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> tp	-1.0000164149474935
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> change	-1.000016620511736
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> tp	-1.0000166225233282
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> change	-1.000016716116678
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> change	-1.000016716116678
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> cy	-1.0000171026806637
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> cy	-1.0000171026806637
token :: (call wallToString (call removeSet (call getRowTop (number 0)))) <==> change	-1.000019302529069
token :: (call removeSet (call getRowTop (number 0))) <==> change	-1.000019302529069
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> cy	-1.0000193891211457
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> cy	-1.0000193891211457
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> cy	-1.0000193891211457
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> cy	-1.0000193891211457
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> cy	-1.0000193891211457
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> cy	-1.0000193891211457
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> cy	-1.0000193891211457
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> cy	-1.0000193891211457
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> top	-1.0000200144910871
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR))) <==> change	-1.0000223756811641
token :: (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR)) <==> change	-1.0000223756811641
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> change	-1.0000248870709705
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> change	-1.0000253032086979
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> cy	-1.0000257605488998
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> change	-1.00002997953835
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> change	-1.00002997953835
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> change	-1.00002997953835
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> change	-1.00002997953835
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> cy	-1.0000320100514037
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> cy	-1.0000322258045717
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> cy	-1.0000322258045717
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> change	-1.000034070900923
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> change	-1.000034070900923
token :: (call wallToString (call keepSet (call getColor (number 1 COLOR)))) <==> change	-1.0000380620344813
token :: (call keepSet (call getColor (number 1 COLOR))) <==> change	-1.0000380620344813
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> change	-1.00003918262574
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> change	-1.00003918262574
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> change	-1.000044672959126
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> change	-1.000044672959126
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> change	-1.000044672959126
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> change	-1.000044672959126
token :: (lambda c (call changeSetColor (call getRowTop (number 0)) (var c))) <==> change	-1.0000451646396866
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> change	-1.0000451925678107
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> cy	-1.000046085828721
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> cy	-1.000046085828721
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> cy	-1.000046085828721
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> cy	-1.000046085828721
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) <==> change	-1.0000506999586665
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> cy	-1.0000585544424951
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> cy	-1.0000585544424951
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> cy	-1.0000591410707487
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> cy	-1.0000591410707487
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> cy	-1.0000591410707487
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> cy	-1.0000591410707487
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> change	-1.0000595578221996
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> change	-1.0000595578221996
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> cy	-1.0000620584383304
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) <==> cy	-1.000062083346362
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) <==> cy	-1.0000657732075113
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) <==> cy	-1.0000657732075113
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> cy	-1.0000671168147486
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> cy	-1.0000671168147486
token :: (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR)) <==> change	-1.000067953598171
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR))) <==> change	-1.000067953598171
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> cy	-1.000067958711952
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> br	-1.0000714175046495
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> br	-1.0000714175046495
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> br	-1.0000714175046495
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> br	-1.0000714175046495
token :: (call removeSet (call getColor (number 1 COLOR))) <==> change	-1.0000733710797653
token :: (call wallToString (call removeSet (call getColor (number 1 COLOR)))) <==> change	-1.0000733710797653
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> change	-1.000081072505545
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> change	-1.000081072505545
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> change	-1.000081072505545
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> change	-1.000081072505545
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> cy	-1.000087227671683
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> cy	-1.0000914469649071
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> cy	-1.0000914469649071
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> cy	-1.000091555728011
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> cy	-1.000091555728011
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> cy	-1.0000921566412881
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> cy	-1.0000921566412881
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> cy	-1.0000921566412881
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> cy	-1.0000921566412881
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> cy	-1.0000993206104165
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> cy	-1.0000993206104165
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> cy	-1.0000993206104165
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> cy	-1.0000993206104165
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> cy	-1.0000993206104165
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> cy	-1.0000993206104165
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> cy	-1.0000993206104165
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> cy	-1.0000993206104165
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> cy	-1.0001073385280115
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> cy	-1.0001073385280115
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> br	-1.0001073775995613
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> br	-1.0001073775995613
token :: (lambda s2 (call setUnion (call getRowTop (number 1)) (var s2))) <==> cy	-1.0001092048400282
token :: (lambda s2 (call setIntersection (call getRowTop (number 1)) (var s2))) <==> cy	-1.0001092048400282
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> cy	-1.0001126948655839
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> cy	-1.0001126948655839
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> tp	-1.0001130011137371
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> cy	-1.0001188265983767
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> cy	-1.0001188265983767
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> cy	-1.000122697384469
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> cy	-1.000122697384469
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> cy	-1.0001262627225354
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> cy	-1.0001262627225354
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> cy	-1.0001360650120337
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> cy	-1.0001360650120337
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> br	-1.0001433376940603
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> br	-1.0001433376940603
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> br	-1.0001433376940603
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> br	-1.0001433376940603
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) <==> br	-1.0001446835415542
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) <==> br	-1.0001446835415542
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> change	-1.0001514450143523
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> change	-1.0001514450143523
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> cy	-1.0001623791387246
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> top	-1.0001659053267589
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> top	-1.0001659053267589
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> cy	-1.0001674685096025
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> cy	-1.000167767010662
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> cy	-1.000167767010662
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> cy	-1.000167767010662
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> cy	-1.000167767010662
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> br	-1.0001819894829498
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> br	-1.0001819894829498
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> br	-1.0001819894829498
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> br	-1.0001819894829498
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> br	-1.0001819894829498
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> br	-1.0001819894829498
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> br	-1.0001819894829498
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> br	-1.0001819894829498
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> cy	-1.0002084507377877
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> cy	-1.000229901793071
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> cy	-1.000229901793071
token :: (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR)) <==> cy	-1.0002428055028774
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR))) <==> cy	-1.0002428055028774
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> cy	-1.0002728785794692
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> cy	-1.0002728785794692
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> cy	-1.0002728785794692
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> cy	-1.0002728785794692
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR))) <==> change	-1.0002784198045083
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR)) <==> change	-1.0002784198045083
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> cy	-1.0002858927975553
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> cy	-1.0002858927975553
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> cy	-1.000307655593972
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> cy	-1.000307655593972
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> rm	-1.000345133121965
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> rm	-1.000345133121965
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> rm	-1.000345133121965
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> rm	-1.000345133121965
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> cy	-1.0003489427549677
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> cy	-1.0003489427549677
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> cy	-1.0003489427549677
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> cy	-1.0003489427549677
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> cy	-1.000356713178081
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> cy	-1.000356713178081
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> top	-1.0003904549253912
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> top	-1.0003904549253912
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> rm	-1.0004044444997908
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> rm	-1.0004044444997908
token :: (call wallToString (call keepSet (call getColor (number 0 COLOR)))) <==> change	-1.0004106770648196
token :: (call keepSet (call getColor (number 0 COLOR))) <==> change	-1.0004106770648196
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> br	-1.0004317595389145
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> br	-1.0004317595389145
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> br	-1.0004317595389145
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> br	-1.0004317595389145
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> br	-1.0004318704865929
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> br	-1.0004318704865929
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) <==> cy	-1.000472772725711
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> cy	-1.000515220734844
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> rm	-1.0005286676349523
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> rm	-1.0005286676349523
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> rm	-1.0005286676349523
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> rm	-1.0005286676349523
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> cy	-1.0005369867174345
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> cy	-1.0006218706155836
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> cy	-1.0006218706155836
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> cy	-1.0006218706155836
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> cy	-1.0006218706155836
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> cy	-1.0006218706155836
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> cy	-1.0006218706155836
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> cy	-1.0006218706155836
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> cy	-1.0006218706155836
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> br	-1.0006330343353955
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> br	-1.0006330343353955
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> br	-1.0006330343353955
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> br	-1.0006330343353955
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> br	-1.0006513069651666
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> br	-1.0006513069651666
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> br	-1.0006514466813845
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> br	-1.0006631298332325
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> br	-1.0006631298332325
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> br	-1.0006631298332325
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> br	-1.0006631298332325
token :: (call getRowTop (number 1)) <==> cy	-1.000754924861976
token :: (number 1) <==> cy	-1.000754924861976
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> cy	-1.0007631639471248
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> cy	-1.0007631639471248
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> br	-1.0007648899300967
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> br	-1.0007648899300967
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> cy	-1.0007831662821232
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> cy	-1.0007831662821232
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> cy	-1.0007831662821232
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> cy	-1.0007831662821232
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> change	-1.0008373462934885
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> change	-1.0008373462934885
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> change	-1.0008607012321478
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> change	-1.0008607012321478
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> change	-1.0008696567197237
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> change	-1.0008696567197237
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> br	-1.0008708542975564
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> br	-1.0008708542975564
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> br	-1.0008708542975564
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> br	-1.0008708542975564
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> br	-1.0008710227822981
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> br	-1.0008710227822981
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) <==> br	-1.000895583593082
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) <==> br	-1.000895583593082
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) <==> br	-1.0008985646962236
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> cy	-1.0009056675037917
token :: (lambda s2 (call setUnion (call getRowTop (number 1)) (var s2))) <==> br	-1.0009071203345685
token :: (lambda s2 (call setIntersection (call getRowTop (number 1)) (var s2))) <==> br	-1.0009071203345685
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> cy	-1.0009077439232787
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> cy	-1.0009077439232787
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> change	-1.0009224885445658
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> change	-1.0009224885445658
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> change	-1.0009224885445658
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> change	-1.0009224885445658
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> cy	-1.000931956107151
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> br	-1.0009524562432595
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> br	-1.0009524562432595
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> br	-1.000975405331978
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> br	-1.000975405331978
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> cy	-1.0009825264239307
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> cy	-1.0009825264239307
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> tp	-1.0009855990202055
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> tp	-1.0009855990202055
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> cy	-1.001013955644042
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> top	-1.0011000658874005
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR)) <==> cy	-1.001138122516114
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR))) <==> cy	-1.001138122516114
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> br	-1.001139860077958
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> br	-1.001139860077958
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> br	-1.001139860077958
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> br	-1.001139860077958
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> br	-1.001139860077958
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> br	-1.001139860077958
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> br	-1.001139860077958
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> br	-1.001139860077958
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> br	-1.0011456825667342
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> br	-1.0011456825667342
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> br	-1.0011456825667342
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> br	-1.0011456825667342
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> br	-1.0011524996450483
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> rm	-1.0011654448684606
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> br	-1.0012718778620153
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> br	-1.0012718778620153
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> br	-1.0012718778620153
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> br	-1.0012718778620153
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> br	-1.001287680560328
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> br	-1.001287680560328
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> br	-1.001287680560328
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> br	-1.001287680560328
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> br	-1.0012899147463459
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> br	-1.0012899147463459
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> br	-1.0012982984975005
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> br	-1.0012982984975005
token :: (call wallToString (call removeSet (call getColor (number 0 COLOR)))) <==> change	-1.001380363004797
token :: (call removeSet (call getColor (number 0 COLOR))) <==> change	-1.001380363004797
token :: (lambda s2 (call setUnion (call getColor (number 1 COLOR)) (var s2))) <==> top	-1.001520427597839
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> cy	-1.0015254419169053
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> cy	-1.0015254419169053
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> br	-1.001540108846015
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> br	-1.001540108846015
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> rm	-1.0016189538031737
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> rm	-1.0016189538031737
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> br	-1.001621191273226
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> br	-1.001621191273226
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> br	-1.001621191273226
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> br	-1.001621191273226
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> br	-1.001621191273226
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> br	-1.001621191273226
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> br	-1.001621191273226
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> br	-1.001621191273226
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> br	-1.0016273728258693
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> br	-1.0016273728258693
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> br	-1.0016273728258693
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> br	-1.0016273728258693
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> br	-1.0016273728258693
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> br	-1.0016273728258693
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> br	-1.0016273728258693
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> br	-1.0016273728258693
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) <==> br	-1.0016526033638093
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> cy	-1.0017278456562129
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> cy	-1.0017278456562129
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> rm	-1.0017570600369918
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> rm	-1.0017570600369918
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> rm	-1.0017570600369918
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> rm	-1.0017570600369918
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> cy	-1.0017980090078844
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> cy	-1.0017980090078844
token :: (lambda c (call changeSetColor (call getRowTop (number 1)) (var c))) <==> cy	-1.0018396077165002
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> cy	-1.0018483323854683
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> cy	-1.0018483323854683
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> top	-1.0019021488951485
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> top	-1.0019021488951485
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> rm	-1.0019035030676304
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> rm	-1.0019035030676304
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> cy	-1.0019172715251559
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> cy	-1.0019172715251559
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> cy	-1.0020605507363196
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> br	-1.0020729055520392
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> br	-1.0020729055520392
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> br	-1.0021527062016382
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> br	-1.0021527062016382
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> br	-1.0021527062016382
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> br	-1.0021527062016382
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> change	-1.0021855929089805
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> change	-1.0021855929089805
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> change	-1.0021855929089805
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> change	-1.0021855929089805
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> br	-1.0022809766702272
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> br	-1.0022809766702272
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> change	-1.0024876911164975
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> change	-1.0024876911164975
token :: (call getRowTop (number 1)) <==> br	-1.0025160391393833
token :: (number 1) <==> br	-1.0025160391393833
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> change	-1.0025193549633213
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> change	-1.0025193549633213
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> rm	-1.0027029886630434
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> rm	-1.0027029886630434
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> br	-1.0027898436637086
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> br	-1.0027898436637086
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> br	-1.0027926317219515
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> br	-1.0027926317219515
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> br	-1.0029378686790944
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> cy	-1.002988550061049
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> br	-1.0032521165910036
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> cy	-1.0032743743061994
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> kp	-1.0032943721901812
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> kp	-1.0032943721901812
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> cy	-1.0033006830378899
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> cy	-1.0033006830378899
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR))) <==> cy	-1.0034364074113047
token :: (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR)) <==> cy	-1.0034364074113047
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> cy	-1.0035491371429588
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> cy	-1.0035841124751994
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> cy	-1.0035841124751994
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> cy	-1.0035841124751994
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> cy	-1.0035841124751994
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> rm	-1.0036478377482785
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> rm	-1.0036478377482785
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> cy	-1.0036586024627587
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> br	-1.0037866436927254
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> br	-1.0037866436927254
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> br	-1.0038028260602445
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> br	-1.0038028260602445
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> rm	-1.0038218572985358
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> rm	-1.0038218572985358
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> rm	-1.0038218572985358
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> rm	-1.0038218572985358
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> br	-1.0038328751471597
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> br	-1.003867972441048
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> br	-1.003867972441048
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR))) <==> br	-1.0039159791793004
token :: (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR)) <==> br	-1.0039159791793004
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> cy	-1.0041152282580914
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> cy	-1.0041152282580914
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> br	-1.00415901046273
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> cy	-1.0041663601788913
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> br	-1.0042067020357515
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> br	-1.004223248379212
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> br	-1.004223248379212
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> br	-1.0042568205770628
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> rm	-1.004262870121829
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> rm	-1.004262870121829
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> rm	-1.0046605495461862
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> rm	-1.0046605495461862
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> br	-1.0047278733177032
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> br	-1.0047278733177032
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> br	-1.0047278733177032
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> br	-1.0047278733177032
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> br	-1.0047814765973895
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> br	-1.0047814765973895
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> change	-1.0049168977984906
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> change	-1.0049168977984906
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> br	-1.0049896403902754
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> br	-1.0049896403902754
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> cy	-1.0050451304222137
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> cy	-1.0050451304222137
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> cy	-1.0050451304222137
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> cy	-1.0050451304222137
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> cy	-1.005180990635536
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> cy	-1.005180990635536
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> rm	-1.005195755119527
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> rm	-1.005195755119527
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> br	-1.0052615128205717
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> br	-1.0052615128205717
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> br	-1.0052615128205717
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> br	-1.0052615128205717
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> top	-1.0054699557948694
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> rm	-1.0054763378161122
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> rm	-1.0054763378161122
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> br	-1.0055281552884447
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> br	-1.0055281552884447
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> br	-1.0056207474129213
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> br	-1.0056207474129213
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> cy	-1.005643068193974
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> cy	-1.005643068193974
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> cy	-1.005643068193974
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> cy	-1.005643068193974
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> br	-1.0056920713118784
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> br	-1.005824640133214
token :: (lambda c (call changeSetColor (call getRowTop (number 1)) (var c))) <==> br	-1.005887004809674
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> rm	-1.0060182487401308
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> rm	-1.0060182487401308
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> rm	-1.0060182487401308
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> rm	-1.0060182487401308
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> rm	-1.0060677640380586
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> br	-1.006121413848938
token :: (lambda s2 (call setUnion (call getRowTop (number 0)) (var s2))) <==> cy	-1.0062821964093538
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> cy	-1.0063032296046666
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> cy	-1.0063032296046666
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> cy	-1.0063032296046666
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> cy	-1.0063032296046666
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> change	-1.0065915796234925
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> change	-1.0065915796234925
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> rm	-1.0067640632175932
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> cy	-1.0069935464701247
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> rm	-1.0071274921482365
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> br	-1.0072345775870726
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> cy	-1.0072461340524606
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> br	-1.0075157102886596
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> cy	-1.0075479955457058
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> cy	-1.0075479955457058
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> cy	-1.0075694523700511
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> cy	-1.0075694523700511
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> rm	-1.0075863578418742
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> rm	-1.0075863578418742
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> br	-1.0075974375124477
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> br	-1.0075974375124477
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> br	-1.0076981133642264
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> br	-1.0077812417994714
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> br	-1.0077812417994714
token :: (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR)) <==> br	-1.0078579629798985
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR))) <==> br	-1.0078579629798985
token :: (call getColor (number 0 COLOR)) <==> br	-1.0079419671863645
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> br	-1.0080360812486113
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> br	-1.0080360812486113
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> br	-1.0080360812486113
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> br	-1.0080360812486113
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR)) <==> br	-1.0083763671439867
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR))) <==> br	-1.0083763671439867
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> top	-1.0085676592423436
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> top	-1.0085676592423436
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> br	-1.0087495083278346
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> tp	-1.0087710807852295
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> tp	-1.0087710807852295
token :: (call keepSet (call getRowTop (number 1))) <==> cy	-1.0090916531655112
token :: (call wallToString (call keepSet (call getRowTop (number 1)))) <==> cy	-1.0090916531655112
token :: (call wallToString (call removeSet (call getRowTop (number 1)))) <==> cy	-1.0090916531655112
token :: (call removeSet (call getRowTop (number 1))) <==> cy	-1.0090916531655112
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> rm	-1.009612714996785
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> rm	-1.009612714996785
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> br	-1.0096875577959212
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> br	-1.0096875577959212
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> br	-1.0097040656686687
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> br	-1.0097040656686687
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> br	-1.0097040656686687
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> br	-1.0097040656686687
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> rm	-1.0097143835017617
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> rm	-1.0097143835017617
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> cy	-1.009820692920706
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> cy	-1.009820692920706
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> cy	-1.009820692920706
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> cy	-1.009820692920706
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> br	-1.0100416383312627
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> br	-1.0100416383312627
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> rm	-1.0100605027154101
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> rm	-1.0100605027154101
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> rm	-1.0100605027154101
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> rm	-1.0100605027154101
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> br	-1.010161638705344
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> rm	-1.0102840962536865
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> rm	-1.0104635955914778
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> rm	-1.0104635955914778
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> rm	-1.010506162922046
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> rm	-1.010506162922046
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> cy	-1.0105722722051163
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> cy	-1.0105722722051163
token :: (call keepSet (call getRowTop (number 1))) <==> br	-1.0107161283465638
token :: (call wallToString (call removeSet (call getRowTop (number 1)))) <==> br	-1.0107161283465638
token :: (call wallToString (call keepSet (call getRowTop (number 1)))) <==> br	-1.0107161283465638
token :: (call removeSet (call getRowTop (number 1))) <==> br	-1.0107161283465638
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> br	-1.0116742476652536
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> br	-1.0116742476652536
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> br	-1.0116742476652536
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> br	-1.0116742476652536
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> br	-1.0119960801829873
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> br	-1.0119960801829873
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> rm	-1.0120777012372821
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> cy	-1.0125093228778024
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> cy	-1.0125093228778024
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> cy	-1.012643724996597
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> cy	-1.012643724996597
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> br	-1.012807360201326
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> br	-1.012807360201326
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> br	-1.012807360201326
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> br	-1.012807360201326
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> rm	-1.0129459556699765
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> rm	-1.0129459556699765
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> rm	-1.0133796114427394
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> rm	-1.0133796114427394
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> rm	-1.0133796114427394
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> rm	-1.0133796114427394
token :: (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR)) <==> cy	-1.0137029853517519
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR))) <==> cy	-1.0137029853517519
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> rm	-1.013784768113271
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> rm	-1.013784768113271
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> rm	-1.0138952613139378
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> rm	-1.0138952613139378
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> rm	-1.0143196077921566
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> rm	-1.0143196077921566
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> rm	-1.0143196077921566
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> rm	-1.0143196077921566
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> rm	-1.0143196077921566
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> rm	-1.0143196077921566
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> rm	-1.0143196077921566
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> rm	-1.0143196077921566
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> top	-1.0145339788843049
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> rm	-1.0146524634799128
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> rm	-1.0146524634799128
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> rm	-1.0151308650637858
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> rm	-1.0157346533012115
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> rm	-1.0157346533012115
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> rm	-1.0159152550505985
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> rm	-1.0160907268901904
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) <==> rm	-1.0163205762424001
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) <==> rm	-1.0163205762424001
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> rm	-1.0166562709463667
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> rm	-1.0166562709463667
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> kp	-1.0176550370151218
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> kp	-1.0176550370151218
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> br	-1.0177023354099564
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> br	-1.0177023354099564
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) <==> cy	-1.0179037954756285
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> br	-1.0179188858810388
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> change	-1.0188709487566345
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> change	-1.0188709487566345
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> cy	-1.0189048154337141
token :: (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR)) <==> rm	-1.021253915151938
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR))) <==> rm	-1.021253915151938
token :: (lambda s2 (call setUnion (call getColor (number 1 COLOR)) (var s2))) <==> rm	-1.0224166543172775
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> rm	-1.023185979175216
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> rm	-1.023185979175216
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> rm	-1.023185979175216
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> rm	-1.023185979175216
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> rm	-1.023185979175216
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> rm	-1.023185979175216
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> rm	-1.023185979175216
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> rm	-1.023185979175216
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> br	-1.0238398458354232
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> br	-1.0238398458354232
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> br	-1.0241038870156636
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> br	-1.0243531785915214
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> br	-1.0243531785915214
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> cy	-1.0244287512161576
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> br	-1.025308698804753
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> rm	-1.0269696754758615
token :: (lambda c (call changeSetColor (call getRowTop (number 0)) (var c))) <==> cy	-1.0270016018936348
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR))) <==> br	-1.0281948570845092
token :: (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR)) <==> br	-1.0281948570845092
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> kp	-1.0286368552276024
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> br	-1.0302862053976138
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> br	-1.0302862053976138
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> br	-1.0302862053976138
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> br	-1.0302862053976138
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> br	-1.0303759093564395
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> br	-1.0303759093564395
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR)) <==> rm	-1.0310224110880122
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR))) <==> rm	-1.0310224110880122
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> rm	-1.031493216297177
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> rm	-1.031493216297177
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> rm	-1.0326302257524942
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> rm	-1.0326302257524942
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> br	-1.0329111584845465
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> br	-1.0329111584845465
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> br	-1.0332474525792792
token :: (number 0 COLOR) <==> rm	-1.034440203827903
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> cy	-1.0345008601214847
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> cy	-1.0345008601214847
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> rm	-1.034930761228748
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> rm	-1.034930761228748
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> rm	-1.0350373667202817
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> rm	-1.0350373667202817
token :: (number 0 COLOR) <==> tp	-1.0357043031089572
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> cy	-1.03648296398662
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> br	-1.0365939476038093
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> rm	-1.0380817872760204
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> rm	-1.0380817872760204
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> rm	-1.0380817872760204
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> rm	-1.0380817872760204
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> cy	-1.0392415660871055
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> cy	-1.0392415660871055
token :: (lambda c (call changeSetColor (call getColor (number 1 COLOR)) (var c))) <==> br	-1.0397752201307944
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR))) <==> cy	-1.0402957775622954
token :: (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR)) <==> cy	-1.0402957775622954
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> kp	-1.0404713634969676
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> kp	-1.0404713634969676
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> rm	-1.040686695840559
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> rm	-1.040686695840559
token :: (lambda c (call changeSetColor (call getRowTop (number 0)) (var c))) <==> br	-1.041030451867038
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> br	-1.0411804850653334
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> br	-1.0411804850653334
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> br	-1.0411804850653334
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> br	-1.0411804850653334
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> cy	-1.041604407266562
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> cy	-1.041604407266562
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> cy	-1.041604407266562
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> cy	-1.041604407266562
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> top	-1.044919218514925
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> top	-1.044919218514925
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> br	-1.0457405644200644
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> rm	-1.0461307052411744
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> rm	-1.0463664834634336
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> rm	-1.0463664834634336
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> br	-1.048818538335367
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> br	-1.048818538335367
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> br	-1.0499081822296905
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> br	-1.0511840891731083
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> br	-1.0511840891731083
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> cy	-1.0519556521098021
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> br	-1.052684340318667
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> br	-1.052684340318667
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> rm	-1.0531910813003669
token :: (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR)) <==> br	-1.053849295689039
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR))) <==> br	-1.053849295689039
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> cy	-1.0540526212304266
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> cy	-1.0540526212304266
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> cy	-1.0540526212304266
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> cy	-1.0540526212304266
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> kp	-1.0575651101413737
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> kp	-1.0575651101413737
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> kp	-1.0575651101413737
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> kp	-1.0575651101413737
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> cy	-1.0579985382054662
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> cy	-1.0579985382054662
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> cy	-1.0581008610365377
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> rm	-1.05942529960641
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> rm	-1.05942529960641
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> br	-1.060471900064359
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> br	-1.060471900064359
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) <==> rm	-1.0607635181420758
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> br	-1.0610730867930331
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> br	-1.0610730867930331
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> br	-1.0631981826115393
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> br	-1.0631981826115393
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> br	-1.0631981826115393
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> br	-1.0631981826115393
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> rm	-1.0643410046336919
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> rm	-1.0643410046336919
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> kp	-1.0649997797810509
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) <==> rm	-1.0652045814815148
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) <==> rm	-1.0652045814815148
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> change	-1.0655101416918298
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> change	-1.0655101416918298
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> br	-1.0659125714280109
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> tp	-1.0708087178426966
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> tp	-1.0708087178426966
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR)) <==> br	-1.07111278485169
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR))) <==> br	-1.07111278485169
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> tp	-1.074284769262107
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> tp	-1.074284769262107
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> rm	-1.0751115062595638
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> rm	-1.0751115062595638
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> rm	-1.0751115062595638
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> rm	-1.0751115062595638
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> rm	-1.076289102379846
token :: (call wallToString (call keepSet (call getRowTop (number 0)))) <==> top	-1.0792374841437835
token :: (call keepSet (call getRowTop (number 0))) <==> top	-1.0792374841437835
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> rm	-1.0795440790437096
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> rm	-1.0797434920369215
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> rm	-1.082165481400804
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> rm	-1.082165481400804
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> rm	-1.082165481400804
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> rm	-1.082165481400804
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> rm	-1.082655979555896
token :: (lambda s2 (call setIntersection (call getRowTop (number 1)) (var s2))) <==> rm	-1.08327641611811
token :: (lambda s2 (call setUnion (call getRowTop (number 1)) (var s2))) <==> rm	-1.08327641611811
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> kp	-1.0842148031654428
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> change	-1.0846496647599266
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> change	-1.0846496647599266
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> rm	-1.085561553583713
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> rm	-1.085561553583713
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> br	-1.0860288529452455
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> br	-1.0860288529452455
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> br	-1.0860288529452455
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> br	-1.0860288529452455
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> rm	-1.0869285646441655
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> rm	-1.087352745397213
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> rm	-1.0893921913858748
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> rm	-1.0893921913858748
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> rm	-1.0893921913858748
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> rm	-1.0893921913858748
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> kp	-1.090622493803485
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> kp	-1.090622493803485
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> kp	-1.090622493803485
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> kp	-1.090622493803485
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> cy	-1.091791137064475
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> cy	-1.091791137064475
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> kp	-1.0926831941924988
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> kp	-1.0926831941924988
token :: (lambda c (call changeSetColor (call getColor (number 1 COLOR)) (var c))) <==> rm	-1.093070973749389
token :: (call keepSet (call getColor (number 0 COLOR))) <==> br	-1.0946813698099733
token :: (call wallToString (call keepSet (call getColor (number 0 COLOR)))) <==> br	-1.0946813698099733
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> rm	-1.0954518538972398
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> rm	-1.0954518538972398
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> rm	-1.0954518538972398
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> rm	-1.0954518538972398
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> rm	-1.0954518538972398
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> rm	-1.0954518538972398
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> rm	-1.0954518538972398
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> rm	-1.0954518538972398
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> br	-1.097655057132993
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> change	-1.1002246159900704
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> change	-1.1002246159900704
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> rm	-1.1010979860932877
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> kp	-1.104588472298581
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> kp	-1.104588472298581
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> kp	-1.111093087881805
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> rm	-1.1174617999087675
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> rm	-1.1174617999087675
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> top	-1.1212930622536237
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> top	-1.1212930622536237
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> rm	-1.122558697484084
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> rm	-1.122558697484084
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> rm	-1.122558697484084
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> rm	-1.122558697484084
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> top	-1.1276102756924076
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> top	-1.1276102756924076
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> top	-1.1276102756924076
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> top	-1.1276102756924076
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> rm	-1.1294220090355447
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> rm	-1.1295309918706191
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> rm	-1.134368894634851
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> rm	-1.134368894634851
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> rm	-1.134368894634851
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> rm	-1.134368894634851
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> rm	-1.134612328967503
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> rm	-1.134612328967503
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> kp	-1.1350304632932442
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> kp	-1.1350304632932442
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> rm	-1.136658312112656
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> rm	-1.136658312112656
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> rm	-1.1390185319566606
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> cy	-1.1417605149111383
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> cy	-1.1417605149111383
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> br	-1.1425013360031153
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> br	-1.1425013360031153
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> br	-1.14281589956854
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> br	-1.14281589956854
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> rm	-1.145620194789219
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> rm	-1.145620194789219
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> rm	-1.151612308374552
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> rm	-1.151612308374552
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> kp	-1.1530806850856408
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> kp	-1.1530806850856408
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> kp	-1.1530806850856408
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> kp	-1.1530806850856408
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR))) <==> tp	-1.1606141468475353
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR)) <==> tp	-1.1606141468475353
token :: (lambda c (call changeSetColor (call getColor (number 0 COLOR)) (var c))) <==> tp	-1.1609125351720404
token :: (call wallToString (call removeSet (call getColor (number 0 COLOR)))) <==> br	-1.1649669773503242
token :: (call removeSet (call getColor (number 0 COLOR))) <==> br	-1.1649669773503242
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> cy	-1.1655060004091773
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> cy	-1.1655060004091773
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> cy	-1.1655060004091773
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> cy	-1.1655060004091773
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> cy	-1.1667076107835572
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> cy	-1.1667076107835572
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> rm	-1.167011446688785
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> rm	-1.167011446688785
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> rm	-1.167011446688785
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> rm	-1.167011446688785
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> top	-1.170470880845636
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> top	-1.170470880845636
token :: (lambda s2 (call setUnion (call getRowTop (number 0)) (var s2))) <==> br	-1.1719630743522291
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> rm	-1.1786002887108329
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> rm	-1.1786002887108329
token :: (number 1 COLOR) <==> cy	-1.1796031844379198
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> change	-1.180226354469728
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> change	-1.180226354469728
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> br	-1.1868567445466296
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> br	-1.1868567445466296
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> tp	-1.195393616031891
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> rm	-1.1958467386170921
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> rm	-1.1982091179558674
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> rm	-1.1982091179558674
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> rm	-1.1982091179558674
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> rm	-1.1982091179558674
token :: (lambda c (call changeSetColor (call getRowTop (number 1)) (var c))) <==> rm	-1.2040951219538825
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> top	-1.2061786960740097
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> top	-1.2061786960740097
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR)) <==> rm	-1.217614828614689
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR))) <==> rm	-1.217614828614689
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> rm	-1.2186649544057515
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> rm	-1.2186649544057515
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> rm	-1.2187497004716428
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> cy	-1.2249548817103166
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> cy	-1.2249548817103166
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> br	-1.2336707373007607
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> br	-1.2336707373007607
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> cy	-1.2349518615148765
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> cy	-1.2349518615148765
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> tp	-1.2359557257645153
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> tp	-1.2359557257645153
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> br	-1.2388911665277358
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> br	-1.2388911665277358
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> br	-1.2388911665277358
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> br	-1.2388911665277358
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> br	-1.2417574277634817
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> br	-1.2417574277634817
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR))) <==> br	-1.2423164442949814
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR)) <==> br	-1.2423164442949814
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> rm	-1.2434145212169403
token :: (call getRowTop (number 1)) <==> rm	-1.2442360617212602
token :: (number 1) <==> rm	-1.2442360617212602
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> br	-1.2473248225799338
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> br	-1.2473248225799338
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> rm	-1.2482007565479603
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> rm	-1.2482007565479603
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> rm	-1.2482007565479603
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> rm	-1.2482007565479603
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> rm	-1.2482007565479603
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> rm	-1.2482007565479603
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> rm	-1.2482007565479603
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> rm	-1.2482007565479603
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> top	-1.2505225470586903
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> change	-1.2547366402877713
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> change	-1.2547366402877713
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> kp	-1.257027370823775
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> kp	-1.257027370823775
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR))) <==> rm	-1.2574181305726133
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR)) <==> rm	-1.2574181305726133
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> cy	-1.2591107532766748
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> cy	-1.2591107532766748
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> br	-1.2654436850761672
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> br	-1.2654436850761672
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> rm	-1.2678338619866831
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR))) <==> rm	-1.2716623952230626
token :: (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR)) <==> rm	-1.2716623952230626
token :: (lambda c (call changeSetColor (call getColor (number 0 COLOR)) (var c))) <==> rm	-1.2796061320802816
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> kp	-1.2805194277173122
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> kp	-1.2805194277173122
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> rm	-1.2870608920446107
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> rm	-1.2870608920446107
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> kp	-1.288647355157242
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> kp	-1.288647355157242
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> rm	-1.2898113107311373
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> rm	-1.2898113107311373
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> br	-1.295616213598091
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> br	-1.295616213598091
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> tp	-1.298474580133154
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> tp	-1.298474580133154
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> tp	-1.298474580133154
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> tp	-1.298474580133154
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> kp	-1.3095679877529505
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> kp	-1.3095679877529505
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> br	-1.3097218670517852
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) <==> top	-1.3189587502756257
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> rm	-1.3270276925330886
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> rm	-1.3271000607789438
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> rm	-1.3271000607789438
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> rm	-1.3351874127598826
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> rm	-1.3351874127598826
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> rm	-1.3379846816369247
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> rm	-1.3419727754789084
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> rm	-1.3419727754789084
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> br	-1.3440308776921155
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> br	-1.3440308776921155
token :: (lambda s2 (call setIntersection (call getColor (number 1 COLOR)) (var s2))) <==> change	-1.347429069212395
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) <==> rm	-1.352419407137829
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> rm	-1.3572478432762305
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> rm	-1.3572478432762305
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> change	-1.3673286645884475
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> change	-1.3673286645884475
token :: (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> rm	-1.3678497800404983
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> top	-1.3690908009641751
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> top	-1.3690908009641751
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> top	-1.370943968904501
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> top	-1.371967853747599
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> top	-1.371967853747599
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> tp	-1.3722849955596155
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> tp	-1.3722849955596155
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> rm	-1.3760194632986251
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> rm	-1.3776241355876422
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> rm	-1.3776241355876422
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> rm	-1.3776241355876422
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> rm	-1.3776241355876422
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> rm	-1.3790375661643506
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> cy	-1.3816379252512039
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> cy	-1.3816379252512039
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> kp	-1.3861045219908263
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> top	-1.3979681906531403
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> rm	-1.3983700106912735
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> rm	-1.3983700106912735
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> kp	-1.4009597855187828
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> kp	-1.4038915607327758
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> br	-1.4093753977247128
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> br	-1.4093753977247128
token :: (call keepSet (call getColor (number 0 COLOR))) <==> kp	-1.419704016717944
token :: (call wallToString (call keepSet (call getColor (number 0 COLOR)))) <==> kp	-1.419704016717944
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> rm	-1.4260775743156437
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> rm	-1.4260775743156437
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> rm	-1.4260775743156437
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> rm	-1.4260775743156437
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> kp	-1.4285666314053675
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> kp	-1.4285666314053675
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> kp	-1.4285666314053675
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> kp	-1.4285666314053675
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> br	-1.4321451400607796
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> br	-1.4321451400607796
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> change	-1.4358725711571527
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> change	-1.4358725711571527
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> top	-1.4386020243983115
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> top	-1.4386020243983115
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> top	-1.4386020243983115
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> top	-1.4386020243983115
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> tp	-1.4402431569426901
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> tp	-1.4402431569426901
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> kp	-1.4440601158130446
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> kp	-1.4440601158130446
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> kp	-1.4539868235911673
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> kp	-1.4539868235911673
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> kp	-1.4539868235911673
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> kp	-1.4539868235911673
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> kp	-1.4556413028345756
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> kp	-1.4556413028345756
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) <==> kp	-1.4562052982621878
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> rm	-1.4658903946247261
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> rm	-1.4658903946247261
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> rm	-1.4658903946247261
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> rm	-1.4658903946247261
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> br	-1.4663757389103507
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> br	-1.4663757389103507
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> rm	-1.4666326451419163
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> top	-1.4797506315123243
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> top	-1.4797506315123243
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> rm	-1.4974098263114746
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> rm	-1.4994929357180502
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> rm	-1.4994929357180502
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> rm	-1.5066671584264097
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> rm	-1.5066671584264097
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> rm	-1.5066671584264097
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> rm	-1.5066671584264097
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> kp	-1.5078949882535135
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> kp	-1.5078949882535135
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> br	-1.5120232117160557
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> br	-1.5120232117160557
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> br	-1.5120232117160557
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> br	-1.5120232117160557
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> rm	-1.5143115834070946
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> rm	-1.5143115834070946
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> rm	-1.5143115834070946
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> rm	-1.5143115834070946
token :: (call getColor (number 1 COLOR)) <==> cy	-1.5148160954016547
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> br	-1.5172059517138208
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> br	-1.5172059517138208
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> br	-1.5308863637685266
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> br	-1.5308863637685266
token :: (call wallToString (call removeSet (call getRowTop (number 0)))) <==> top	-1.5327466324382355
token :: (call removeSet (call getRowTop (number 0))) <==> top	-1.5327466324382355
token :: (lambda c (call changeSetColor (call getRowTop (number 0)) (var c))) <==> rm	-1.5394572825548236
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR))) <==> rm	-1.5564654585512785
token :: (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR)) <==> rm	-1.5564654585512785
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> top	-1.5669859092198766
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> top	-1.5669859092198766
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> kp	-1.5802216581038526
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> kp	-1.5802216581038526
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> rm	-1.5827723187398302
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> rm	-1.5827723187398302
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> kp	-1.5837728681249352
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> kp	-1.5837728681249352
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> rm	-1.5873817385099218
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> rm	-1.5873817385099218
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) <==> br	-1.5945395308102805
token :: (lambda s2 (call setUnion (call getRowTop (number 0)) (var s2))) <==> rm	-1.601634707821347
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> kp	-1.6031058745190823
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> kp	-1.6031058745190823
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> br	-1.6064276760074818
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> br	-1.6064276760074818
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> rm	-1.6171906547931214
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> rm	-1.6171906547931214
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> kp	-1.632198242198229
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> kp	-1.632198242198229
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> tp	-1.635129847413528
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> tp	-1.635129847413528
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> tp	-1.6384058635496244
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> tp	-1.6384058635496244
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> kp	-1.6403276801005415
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> kp	-1.6403276801005415
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> rm	-1.6504109492018133
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> rm	-1.656119635487531
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> rm	-1.656119635487531
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> rm	-1.656119635487531
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> rm	-1.656119635487531
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) <==> top	-1.6598182948837417
token :: (lambda s2 (call setUnion (call getRowTop (number 0)) (var s2))) <==> top	-1.6611031031345154
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> rm	-1.667568475359926
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> rm	-1.667568475359926
token :: (call getColor (number 0 COLOR)) <==> tp	-1.6834134299962362
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> top	-1.6835204935047254
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> top	-1.6835204935047254
token :: (call wallToString (call keepSet (call getColor (number 1 COLOR)))) <==> rm	-1.6954380190840963
token :: (call keepSet (call getColor (number 1 COLOR))) <==> rm	-1.6954380190840963
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) <==> kp	-1.6980258281782343
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) <==> kp	-1.6980258281782343
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> tp	-1.7091553073035504
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> tp	-1.7091553073035504
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> tp	-1.7091553073035504
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> tp	-1.7091553073035504
token :: (call removeSet (call getColor (number 1 COLOR))) <==> cy	-1.7174860136646857
token :: (call wallToString (call removeSet (call getColor (number 1 COLOR)))) <==> cy	-1.7174860136646857
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> cy	-1.7259249952579045
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> cy	-1.7259249952579045
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> cy	-1.7259249952579045
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> cy	-1.7259249952579045
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR))) <==> cy	-1.7281602698805736
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR)) <==> cy	-1.7281602698805736
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> kp	-1.7366013771920097
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> kp	-1.7366013771920097
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> rm	-1.7473325938207063
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> rm	-1.7473325938207063
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> br	-1.7681594311680011
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> br	-1.7681594311680011
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> br	-1.769392674005611
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> br	-1.769392674005611
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> kp	-1.7907661482547481
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> kp	-1.7907661482547481
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> kp	-1.7907661482547481
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> kp	-1.7907661482547481
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> rm	-1.7932334213646222
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> rm	-1.7943078816486033
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> br	-1.7944073910518077
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> br	-1.7944073910518077
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR))) <==> kp	-1.7988272771287073
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR)) <==> kp	-1.7988272771287073
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> top	-1.8143465845429918
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> kp	-1.8160245740961702
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> kp	-1.8174617582730235
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> tp	-1.8205559909165199
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> tp	-1.8205559909165199
token :: (call wallToString (call keepSet (call getRowTop (number 1)))) <==> rm	-1.821699046703847
token :: (call keepSet (call getRowTop (number 1))) <==> rm	-1.821699046703847
token :: (call wallToString (call removeSet (call getRowTop (number 1)))) <==> rm	-1.821699046703847
token :: (call removeSet (call getRowTop (number 1))) <==> rm	-1.821699046703847
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> rm	-1.8257470927310426
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> rm	-1.8257470927310426
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> rm	-1.8257470927310426
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> rm	-1.8257470927310426
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) <==> rm	-1.8278240958097554
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> cy	-1.8345652280900464
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> cy	-1.8345652280900464
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> tp	-1.8500697409909956
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> tp	-1.8500697409909956
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> rm	-1.852649766987671
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> kp	-1.8561554062000531
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> kp	-1.861820338902353
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> kp	-1.861820338902353
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> kp	-1.861820338902353
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> kp	-1.861820338902353
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> kp	-1.861820338902353
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> kp	-1.861820338902353
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> kp	-1.861820338902353
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> kp	-1.861820338902353
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> kp	-1.864453155456421
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> tp	-1.875166285425718
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> kp	-1.8943964755521308
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) <==> rm	-1.9003340703953875
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> kp	-1.9154437991076294
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> kp	-1.9154437991076294
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> kp	-1.9154437991076294
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> kp	-1.9154437991076294
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> kp	-1.9154437991076294
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> kp	-1.9154437991076294
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> kp	-1.9154437991076294
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> kp	-1.9154437991076294
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> tp	-1.915491317719958
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> tp	-1.915491317719958
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> tp	-1.915491317719958
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> tp	-1.915491317719958
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> kp	-1.916536376443371
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> kp	-1.916536376443371
token :: (lambda c (call changeSetColor (call getColor (number 0 COLOR)) (var c))) <==> kp	-1.9173991538816602
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR)) <==> top	-1.9177110060806313
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR))) <==> top	-1.9177110060806313
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> kp	-1.9207172540050876
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> kp	-1.92466452694734
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> kp	-1.92466452694734
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> tp	-1.925675624231895
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> tp	-1.925675624231895
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> tp	-1.925675624231895
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> tp	-1.925675624231895
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> top	-1.9265686895739935
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> top	-1.9265686895739935
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> top	-1.9265686895739935
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> top	-1.9265686895739935
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> tp	-1.9287377015516753
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> tp	-1.9287377015516753
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> tp	-1.9287377015516753
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> tp	-1.9287377015516753
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> top	-1.9344191377684674
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> top	-1.9344191377684674
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> kp	-1.9395580636308318
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> kp	-1.9395580636308318
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> kp	-1.9432261526190628
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> kp	-1.9432261526190628
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> br	-1.9490884731872142
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> br	-1.9490884731872142
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> top	-1.9502195125128914
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> top	-1.9502195125128914
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR))) <==> top	-1.9502195125128914
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 1 COLOR)) <==> top	-1.9502195125128914
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> kp	-1.9515441586386852
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> kp	-1.9515441586386852
token :: (lambda s2 (call setUnion (call getColor (number 0 COLOR)) (var s2))) <==> tp	-1.9536390318160493
token :: (lambda s2 (call setIntersection (call getRowTop (number 1)) (var s2))) <==> kp	-1.9622518288987323
token :: (lambda s2 (call setUnion (call getRowTop (number 1)) (var s2))) <==> kp	-1.9622518288987323
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> tp	-1.9645125228993254
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> tp	-1.9645125228993254
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> tp	-1.9683485637705447
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> tp	-1.9683485637705447
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> kp	-1.9688993771651853
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> kp	-1.9688993771651853
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> kp	-1.9688993771651853
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> kp	-1.9688993771651853
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> kp	-1.975384098041207
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> kp	-1.975384098041207
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> tp	-1.982876451341901
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> tp	-1.982876451341901
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> kp	-1.9837879016600224
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> kp	-1.9837879016600224
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> kp	-1.9837879016600224
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> kp	-1.9837879016600224
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> kp	-1.9837879016600224
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> kp	-1.9837879016600224
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> kp	-1.9837879016600224
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> kp	-1.9837879016600224
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> top	-1.9862748410850395
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> top	-1.9862748410850395
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> tp	-1.9871623864329093
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> tp	-1.9871623864329093
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> kp	-1.990846225886933
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> tp	-1.9915043056765076
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> tp	-1.9915043056765076
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> tp	-1.9915043056765076
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> tp	-1.9915043056765076
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> top	-1.9923259161254445
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> top	-1.9923259161254445
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> top	-1.9933560392545975
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> top	-1.9933560392545975
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> kp	-1.9938057812454786
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> tp	-1.994975904053199
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> tp	-1.9963130080243146
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> tp	-1.9963130080243146
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> tp	-1.9963236241888014
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (var c))) <==> tp	-1.9963236241888014
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> top	-1.9963238640902126
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> top	-1.9963238640902126
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> tp	-1.996692672646211
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> tp	-1.996692672646211
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> rm	-1.997048834135055
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> rm	-1.997048834135055
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> tp	-1.9970917140567395
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> tp	-1.9970926522557868
token :: (lambda s2 (call setUnion (call getColor (number 1 COLOR)) (var s2))) <==> tp	-1.997092678988713
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR))) <==> rm	-1.9978536808277754
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR)) <==> rm	-1.9978536808277754
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> rm	-1.9980651442020998
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> tp	-1.9986610043427409
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> tp	-1.9990610557015331
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> tp	-1.9990610557015331
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> rm	-1.9997250648763032
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> rm	-1.9997250648763032
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> tp	-2.0000000109089937
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> tp	-2.0000000109089937
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> tp	-2.0000121878382253
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> tp	-2.0000121878382253
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> tp	-2.0000121878382253
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> tp	-2.0000121878382253
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> tp	-2.000102476668351
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> tp	-2.000102476668351
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> tp	-2.000102476668351
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> tp	-2.000102476668351
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> tp	-2.000102476668351
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> tp	-2.000102476668351
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> tp	-2.000102476668351
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> tp	-2.000102476668351
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> rm	-2.000106151844369
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> tp	-2.0001313767380324
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> tp	-2.000151713973906
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> tp	-2.000151713973906
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> tp	-2.0001929998384176
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> tp	-2.0001929998384176
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> tp	-2.000445597563965
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> tp	-2.000445597563965
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> tp	-2.000677213081833
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> tp	-2.0006822572654537
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> tp	-2.000689761790584
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> tp	-2.000689761790584
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> tp	-2.000689761790584
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> tp	-2.000689761790584
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> tp	-2.0007228311690746
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> tp	-2.0007228311690746
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> tp	-2.0007228311690746
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> tp	-2.0007228311690746
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> tp	-2.0007717976855854
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> tp	-2.0007717976855854
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> tp	-2.0007717976855854
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> tp	-2.0007717976855854
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> top	-2.001112864195985
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> top	-2.001112864195985
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> top	-2.001112864195985
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> top	-2.001112864195985
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> kp	-2.0012057515462374
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> kp	-2.0012057515462374
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) <==> tp	-2.001636217869772
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) <==> tp	-2.001636217869772
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> tp	-2.0017379913948834
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> tp	-2.0017379913948834
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> tp	-2.0017379913948834
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> tp	-2.0017379913948834
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> tp	-2.0017379913948834
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> tp	-2.0017379913948834
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> tp	-2.0017379913948834
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> tp	-2.0017379913948834
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> cy	-2.0018297542519923
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> cy	-2.0018297542519923
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> top	-2.0019732388317983
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> top	-2.0019732388317983
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> kp	-2.0021491821560455
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> tp	-2.002429921300986
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> tp	-2.002429921300986
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> kp	-2.0025176762218315
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> kp	-2.0025176762218315
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> tp	-2.0028075612426934
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> tp	-2.0028075612426934
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> tp	-2.0033644979077327
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> tp	-2.0033644979077327
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> cy	-2.0034547418072797
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> cy	-2.0034547418072797
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> rm	-2.003821666473054
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> rm	-2.003821666473054
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> top	-2.0045202687942756
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> top	-2.0045202687942756
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> tp	-2.0051325967206974
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> tp	-2.0051325967206974
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> rm	-2.0064948684983572
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> rm	-2.0064948684983572
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> tp	-2.006527139709004
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> tp	-2.006527139709004
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> tp	-2.006527139709004
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> tp	-2.006527139709004
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> tp	-2.007424512502854
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> tp	-2.007575281501732
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> tp	-2.007575281501732
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> tp	-2.007575281501732
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> tp	-2.007575281501732
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> kp	-2.009084337249538
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> top	-2.0093222576601097
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> tp	-2.0103207228770845
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> top	-2.0106991658513453
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> top	-2.0106991658513453
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> top	-2.0106991658513453
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> top	-2.0106991658513453
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> tp	-2.0110708506819677
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> tp	-2.0110708506819677
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> tp	-2.0120317318345022
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> tp	-2.0120317318345022
token :: (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR)) <==> tp	-2.0120812123472422
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR))) <==> tp	-2.0120812123472422
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> top	-2.012662047554156
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> top	-2.012662047554156
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> tp	-2.0141175958020794
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> tp	-2.0141175958020794
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> tp	-2.0172626171107266
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR)) <==> top	-2.017915357653607
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 1 COLOR))) <==> top	-2.017915357653607
token :: (call wallToString (call removeSet (call getRowTop (number 0)))) <==> tp	-2.01856517501001
token :: (call removeSet (call getRowTop (number 0))) <==> tp	-2.01856517501001
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> tp	-2.019333204945379
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))) <==> tp	-2.019333204945379
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> tp	-2.019720773595625
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> tp	-2.019720773595625
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> tp	-2.019720773595625
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> tp	-2.019720773595625
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> tp	-2.019720773595625
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> tp	-2.019720773595625
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> tp	-2.019720773595625
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> tp	-2.019720773595625
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> top	-2.020799025926202
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> tp	-2.0228105843422863
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> kp	-2.0228678167672536
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> kp	-2.0228678167672536
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> tp	-2.02320572075611
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> tp	-2.02320572075611
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> tp	-2.02320572075611
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> tp	-2.02320572075611
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> tp	-2.0234295839594645
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> kp	-2.024787193767478
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> kp	-2.024787193767478
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> kp	-2.024787193767478
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> kp	-2.024787193767478
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> tp	-2.0253700018714786
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> tp	-2.0253700018714786
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> kp	-2.0254780691402234
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> kp	-2.0254780691402234
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> kp	-2.0254780691402234
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> kp	-2.0254780691402234
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> kp	-2.0288731641227673
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> kp	-2.0288731641227673
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> tp	-2.029420507456329
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> tp	-2.029420507456329
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> top	-2.0300263062994497
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> tp	-2.031848245423366
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> tp	-2.031848245423366
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> tp	-2.031848245423366
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> tp	-2.031848245423366
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> kp	-2.0326235163628024
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> kp	-2.0326235163628024
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> top	-2.032785195147137
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (var c))) <==> top	-2.032785195147137
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> tp	-2.033022525380537
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR))) <==> rm	-2.0369875013530936
token :: (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR)) <==> rm	-2.0369875013530936
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> top	-2.042338684662725
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> top	-2.042338684662725
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> kp	-2.042394598579977
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> kp	-2.042394598579977
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> kp	-2.043359945240847
token :: (lambda s2 (call setIntersection (call getRowTop (number 1)) (var s2))) <==> tp	-2.0442709533204697
token :: (lambda s2 (call setUnion (call getRowTop (number 1)) (var s2))) <==> tp	-2.0442709533204697
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> kp	-2.044401768452474
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> kp	-2.044401768452474
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> top	-2.0450578153067234
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> top	-2.0450578153067234
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> tp	-2.04577005540284
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> tp	-2.04577005540284
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> tp	-2.04763536913529
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> tp	-2.04763536913529
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> kp	-2.0481112895384475
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> kp	-2.0481112895384475
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> kp	-2.0481112895384475
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> kp	-2.0481112895384475
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> kp	-2.0482742385852633
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> kp	-2.049487471625134
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> kp	-2.049487471625134
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> top	-2.0503757167242207
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> top	-2.0503757167242207
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) <==> tp	-2.050650058532916
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> top	-2.0513734255902976
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> top	-2.0513734255902976
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> tp	-2.0514730338409666
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> tp	-2.0514730338409666
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> tp	-2.0514730338409666
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> tp	-2.0514730338409666
token :: (lambda c (call changeSetColor (call getRowTop (number 1)) (var c))) <==> tp	-2.052621520306634
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> kp	-2.0526878386158884
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> kp	-2.0526878386158884
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> tp	-2.0557194123295313
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> tp	-2.0557194123295313
token :: (call keepSet (call getRowTop (number 0))) <==> tp	-2.056266531528002
token :: (call wallToString (call keepSet (call getRowTop (number 0)))) <==> tp	-2.056266531528002
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR))) <==> tp	-2.056890080183515
token :: (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR)) <==> tp	-2.056890080183515
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> kp	-2.0571132019598966
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> top	-2.057170544354803
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> top	-2.057170544354803
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> top	-2.057170544354803
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> top	-2.057170544354803
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> top	-2.057170544354803
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> top	-2.057170544354803
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR)))) <==> top	-2.057170544354803
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 1 COLOR))))) <==> top	-2.057170544354803
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR)) <==> top	-2.057563220566614
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 1 COLOR))) <==> top	-2.057563220566614
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> top	-2.060102666855253
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> top	-2.060102666855253
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> tp	-2.0605508823197574
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> kp	-2.0618652389274468
token :: (number 1 COLOR) <==> tp	-2.061947590367891
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) <==> tp	-2.063475090770492
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) <==> tp	-2.063475090770492
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> kp	-2.0640551370986295
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> kp	-2.0640551370986295
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> kp	-2.0645040487608615
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> kp	-2.0645040487608615
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> tp	-2.0645045173949517
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> tp	-2.0645045173949517
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> tp	-2.0645045173949517
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> tp	-2.0645045173949517
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> tp	-2.0645045173949517
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> tp	-2.0645045173949517
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> tp	-2.0645045173949517
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> tp	-2.0645045173949517
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> tp	-2.0654406246204466
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> tp	-2.0654406246204466
token :: (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> tp	-2.0669420573738133
token :: (lambda c (call changeSetColor (call getColor (number 0 COLOR)) (var c))) <==> top	-2.067642149250428
token :: (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR)) <==> top	-2.071246660987553
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR))) <==> top	-2.071246660987553
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> tp	-2.071541408272609
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> tp	-2.071541408272609
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> top	-2.0749626801503562
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (var c))) <==> top	-2.0749626801503562
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> top	-2.076236347618938
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> top	-2.076236347618938
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> tp	-2.08041487283094
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> tp	-2.08041487283094
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> tp	-2.0811195628157426
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> tp	-2.0811195628157426
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> top	-2.0828539702880664
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> top	-2.0884021096406973
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> top	-2.0908419293007996
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> top	-2.0908419293007996
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> top	-2.0908419293007996
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> top	-2.0908419293007996
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> kp	-2.0913673391366796
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> kp	-2.0913673391366796
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> kp	-2.0913673391366796
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> kp	-2.0913673391366796
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> top	-2.0927718691731805
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> top	-2.0956145346317476
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> top	-2.0956145346317476
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> top	-2.0956145346317476
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> top	-2.0956145346317476
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> top	-2.0966342587570663
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> top	-2.1000024623562097
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> top	-2.1000024623562097
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> top	-2.1000024623562097
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> top	-2.1000024623562097
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> rm	-2.1049375030620503
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> rm	-2.1049375030620503
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> top	-2.1050822309861044
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> top	-2.1050822309861044
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> tp	-2.1105767210366473
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> tp	-2.1105905380802206
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> top	-2.1108747798773266
token :: (call wallToString (call keepSet (call getRowTop (number 1)))) <==> tp	-2.113409397169865
token :: (call keepSet (call getRowTop (number 1))) <==> tp	-2.113409397169865
token :: (call wallToString (call removeSet (call getRowTop (number 1)))) <==> tp	-2.113409397169865
token :: (call removeSet (call getRowTop (number 1))) <==> tp	-2.113409397169865
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) <==> cy	-2.1206646512453906
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> kp	-2.121891240822754
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> kp	-2.121891240822754
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> kp	-2.121891240822754
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> kp	-2.121891240822754
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (var c))) <==> tp	-2.12281518334452
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> tp	-2.128395054848295
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> tp	-2.130454469099035
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> tp	-2.130454469099035
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> tp	-2.130454469099035
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> tp	-2.130454469099035
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> top	-2.1315012109700566
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> top	-2.1315012109700566
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> tp	-2.134611242500846
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> tp	-2.134611242500846
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> top	-2.1356299308005395
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> tp	-2.1405787137553203
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> tp	-2.1405787137553203
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> tp	-2.1415964118238566
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> tp	-2.1415964118238566
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> kp	-2.1428061703466748
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> kp	-2.1428061703466748
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> kp	-2.1428061703466748
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> kp	-2.1428061703466748
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (var c))) <==> top	-2.143721371050885
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> tp	-2.147279948161528
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> tp	-2.147279948161528
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> kp	-2.1613571295486054
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR))) <==> kp	-2.1676256349264498
token :: (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR)) <==> kp	-2.1676256349264498
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR)) <==> tp	-2.1699999610557006
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR))) <==> tp	-2.1699999610557006
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> rm	-2.1705568357178575
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> rm	-2.1705568357178575
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> tp	-2.1742945294654716
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> tp	-2.1760397997411043
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> top	-2.1769246124154353
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> top	-2.1769246124154353
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> cy	-2.1769965538163234
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> cy	-2.1769965538163234
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> rm	-2.1832428423985855
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> rm	-2.1832428423985855
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> top	-2.1863017338920865
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> top	-2.1863017338920865
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> top	-2.187120003866784
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> tp	-2.18756215161004
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> tp	-2.18756215161004
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> tp	-2.189432784979465
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> tp	-2.189432784979465
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> top	-2.1896857816362783
token :: (call getRowTop (number 1)) <==> tp	-2.192500057692338
token :: (number 1) <==> tp	-2.192500057692338
token :: (lambda c (call changeSetColor (call getColor (number 1 COLOR)) (var c))) <==> top	-2.1937961622102558
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> cy	-2.195370180928031
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> cy	-2.195370180928031
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> kp	-2.1975789045093475
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> kp	-2.1975789045093475
token :: (call keepSet (call getColor (number 1 COLOR))) <==> cy	-2.2006566773184173
token :: (call wallToString (call keepSet (call getColor (number 1 COLOR)))) <==> cy	-2.2006566773184173
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> top	-2.2063463405771695
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> top	-2.2063463405771695
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> top	-2.207727201215729
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> top	-2.207727201215729
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> top	-2.207727201215729
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> top	-2.207727201215729
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> top	-2.2167173486697496
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> top	-2.2167173486697496
token :: (lambda s2 (call setUnion (call getRowTop (number 0)) (var s2))) <==> tp	-2.2194991567818834
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> top	-2.2246850905191367
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> top	-2.2246850905191367
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR)) <==> top	-2.2246850905191367
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 1 COLOR))) <==> top	-2.2246850905191367
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> kp	-2.2260406688205125
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> kp	-2.2260406688205125
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> kp	-2.2260406688205125
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> kp	-2.2260406688205125
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> top	-2.2288191800260715
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR))) <==> tp	-2.2367378932393245
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR)) <==> tp	-2.2367378932393245
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> top	-2.2477485755089335
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> top	-2.2477485755089335
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR))) <==> top	-2.2477485755089335
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) (number 0 COLOR)) <==> top	-2.2477485755089335
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR))) <==> tp	-2.252042415292821
token :: (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR)) <==> tp	-2.252042415292821
token :: (call removeSet (call getColor (number 0 COLOR))) <==> tp	-2.259827865403606
token :: (call wallToString (call removeSet (call getColor (number 0 COLOR)))) <==> tp	-2.259827865403606
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> cy	-2.2605917284378663
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> cy	-2.2605917284378663
token :: (call getRowTop (number 1)) <==> kp	-2.262240295506147
token :: (number 1) <==> kp	-2.262240295506147
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> kp	-2.2624115145878796
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> kp	-2.2624115145878796
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> top	-2.2626555605054985
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> top	-2.2626555605054985
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> top	-2.2626555605054985
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> top	-2.2626555605054985
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) <==> tp	-2.2642601572904586
token :: (lambda c (call changeSetColor (call getRowTop (number 1)) (var c))) <==> top	-2.264960793176944
token :: (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR)) <==> kp	-2.277057420363045
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 1 COLOR))) <==> kp	-2.277057420363045
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> top	-2.2779988847121784
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> top	-2.2779988847121784
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> tp	-2.2802426082473737
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> tp	-2.284639433624502
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> tp	-2.284639433624502
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> tp	-2.284639433624502
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> tp	-2.284639433624502
token :: (lambda c (call changeSetColor (call getRowTop (number 1)) (var c))) <==> kp	-2.3087345813169993
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> kp	-2.3116085838152545
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> kp	-2.3116085838152545
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR))) <==> kp	-2.311648509462118
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR)) <==> kp	-2.311648509462118
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> tp	-2.3144834627666433
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR))) <==> kp	-2.3308851708585276
token :: (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR)) <==> kp	-2.3308851708585276
token :: (number 1 COLOR) <==> top	-2.33287858306536
token :: (call getColor (number 1 COLOR)) <==> top	-2.3345828794098145
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> kp	-2.336317508698289
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> kp	-2.336317508698289
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> kp	-2.336317508698289
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> kp	-2.336317508698289
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> tp	-2.338159748989109
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> tp	-2.338159748989109
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> tp	-2.3462378839545828
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> tp	-2.351468748865799
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> tp	-2.351468748865799
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> tp	-2.351468748865799
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> tp	-2.351468748865799
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> top	-2.356517518263666
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> top	-2.356517518263666
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> tp	-2.3599920488970603
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> top	-2.360465019604051
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> top	-2.360465019604051
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) <==> kp	-2.36378241431248
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> tp	-2.365432835572382
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> tp	-2.365432835572382
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> tp	-2.365432835572382
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> tp	-2.365432835572382
token :: (lambda c (call changeSetColor (call getColor (number 1 COLOR)) (var c))) <==> tp	-2.3728548205324156
token :: (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> top	-2.3731931834595263
token :: (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))) <==> top	-2.3731931834595263
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> top	-2.3796933251446397
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR)) <==> top	-2.3797832656385767
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR))) <==> top	-2.3797832656385767
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> top	-2.3836674487824623
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> top	-2.3836674487824623
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> top	-2.3836674487824623
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> top	-2.3836674487824623
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> top	-2.3836674487824623
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> top	-2.3836674487824623
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR)))) <==> top	-2.3836674487824623
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getColor (number 0 COLOR))))) <==> top	-2.3836674487824623
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> rm	-2.3854776690513058
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> rm	-2.3854776690513058
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> rm	-2.386214465340033
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> rm	-2.386214465340033
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) <==> top	-2.386369044006528
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> tp	-2.387436232292544
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> tp	-2.387436232292544
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> tp	-2.387436232292544
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> tp	-2.387436232292544
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR)) <==> tp	-2.3893381687253776
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR))) <==> tp	-2.3893381687253776
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> top	-2.396681445426411
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> top	-2.396681445426411
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR)))) <==> top	-2.396681445426411
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))))) <==> top	-2.396681445426411
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> tp	-2.399129294006313
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> tp	-2.399129294006313
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> kp	-2.403456442844938
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (var c))) <==> top	-2.4120130519557668
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))) <==> top	-2.4186199537241
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))) <==> top	-2.4186199537241
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> kp	-2.422606672774373
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> kp	-2.422606672774373
token :: (lambda s2 (call setUnion (call getRowTop (number 0)) (var s2))) <==> kp	-2.426912637791259
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> rm	-2.4289504818950043
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> rm	-2.4289504818950043
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> top	-2.4297969417355696
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> top	-2.4297969417355696
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> top	-2.4297969417355696
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> top	-2.4297969417355696
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> top	-2.4297969417355696
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1)))) <==> top	-2.4297969417355696
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> top	-2.4297969417355696
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 1))))) <==> top	-2.4297969417355696
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> kp	-2.4627306317270334
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> kp	-2.4627306317270334
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> kp	-2.471361945696247
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> kp	-2.489126472183754
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> top	-2.490190752533425
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) <==> br	-2.4952827710470404
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> kp	-2.4980294905756537
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> kp	-2.4980294905756537
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR))) <==> top	-2.508932529041557
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) (number 0 COLOR)) <==> top	-2.508932529041557
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> kp	-2.514419499802697
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> kp	-2.514419499802697
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> rm	-2.519745584192728
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))) <==> tp	-2.525229811952671
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) <==> kp	-2.529516680920228
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> tp	-2.5297061681865154
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> tp	-2.5297061681865154
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR))))) <==> tp	-2.5297061681865154
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 0 COLOR)))) <==> tp	-2.5297061681865154
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> tp	-2.5358934065569683
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> tp	-2.5358934065569683
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) <==> kp	-2.5363066835896073
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) <==> kp	-2.5363066835896073
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> kp	-2.552080749347098
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> kp	-2.553441017386744
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> kp	-2.553441017386744
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1)))) <==> kp	-2.553441017386744
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))))) <==> kp	-2.553441017386744
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 1))) <==> kp	-2.5549959723589675
token :: (number 1 COLOR) <==> rm	-2.559451282478102
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> kp	-2.5598083104262868
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> kp	-2.5637923888442233
token :: (call removeSet (call getColor (number 1 COLOR))) <==> tp	-2.566152980027564
token :: (call wallToString (call removeSet (call getColor (number 1 COLOR)))) <==> tp	-2.566152980027564
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> kp	-2.575569306695184
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> kp	-2.575569306695184
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> kp	-2.5842882448062294
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> kp	-2.5842882448062294
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))) <==> top	-2.592421801690336
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> rm	-2.594308132771571
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> rm	-2.594308132771571
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> top	-2.6080435260353534
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1))))) <==> top	-2.6080435260353534
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> top	-2.6080435260353534
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 1)))) <==> top	-2.6080435260353534
token :: (call keepSet (call getColor (number 1 COLOR))) <==> tp	-2.6314047254593955
token :: (call wallToString (call keepSet (call getColor (number 1 COLOR)))) <==> tp	-2.6314047254593955
token :: (call keepSet (call getColor (number 0 COLOR))) <==> tp	-2.6422104158552546
token :: (call wallToString (call keepSet (call getColor (number 0 COLOR)))) <==> tp	-2.6422104158552546
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> top	-2.653182772706156
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> kp	-2.658888840924237
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> kp	-2.658888840924237
token :: (lambda s2 (call setIntersection (call getColor (number 1 COLOR)) (var s2))) <==> cy	-2.659969367947008
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> cy	-2.6692849259565166
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> top	-2.68949893091048
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> top	-2.693704874320692
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> top	-2.693704874320692
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR)) <==> kp	-2.702788563237673
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 1 COLOR))) <==> kp	-2.702788563237673
token :: (lambda c (call changeSetColor (call getRowTop (number 0)) (var c))) <==> tp	-2.715808136425939
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> kp	-2.7334316611429412
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> rm	-2.7375277406661835
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> rm	-2.7375277406661835
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> top	-2.748053116012437
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (var c))) <==> top	-2.748053116012437
token :: (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR)) <==> tp	-2.7482268240850525
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR))) <==> tp	-2.7482268240850525
token :: (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR)) <==> kp	-2.755060420593181
token :: (call wallToString (call changeSetColor (call getColor (number 1 COLOR)) (number 0 COLOR))) <==> kp	-2.755060420593181
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> top	-2.7680634352334574
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> top	-2.7680634352334574
token :: (lambda c (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> kp	-2.772046330350917
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> kp	-2.7722716542987387
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> kp	-2.7722716542987387
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> kp	-2.7722716542987387
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> kp	-2.7722716542987387
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> kp	-2.78182251177296
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> kp	-2.78182251177296
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> kp	-2.78182251177296
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> kp	-2.78182251177296
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> kp	-2.78182251177296
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> kp	-2.78182251177296
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> kp	-2.78182251177296
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> kp	-2.78182251177296
token :: (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR)) <==> top	-2.784098976465254
token :: (call wallToString (call changeSetColor (call getRowTop (number 1)) (number 0 COLOR))) <==> top	-2.784098976465254
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> kp	-2.7940446860699963
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> kp	-2.7940446860699963
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> kp	-2.7994620934442223
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> kp	-2.7994620934442223
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> kp	-2.7994620934442223
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> kp	-2.7994620934442223
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> top	-2.804806545709894
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> top	-2.804806545709894
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> kp	-2.8114865514340757
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> kp	-2.8114865514340757
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> kp	-2.8114865514340757
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> kp	-2.8114865514340757
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> kp	-2.813972684550796
token :: (call changeSetColor (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> kp	-2.813972684550796
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> top	-2.817034724258877
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> top	-2.834955704452911
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> top	-2.834955704452911
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> top	-2.834955704452911
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> top	-2.834955704452911
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> top	-2.865169860777375
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> top	-2.865169860777375
token :: (call keepSet (call getColor (number 0 COLOR))) <==> rm	-2.8808994651179876
token :: (call wallToString (call keepSet (call getColor (number 0 COLOR)))) <==> rm	-2.8808994651179876
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> top	-2.890018538642183
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> top	-2.890018538642183
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR))) <==> top	-2.8985087522857476
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 1 COLOR)) <==> top	-2.8985087522857476
token :: (lambda c (call changeSetColor (call getRowTop (number 0)) (var c))) <==> kp	-2.908741476764586
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> rm	-2.924084219139376
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> rm	-2.924084219139376
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> tp	-2.928684467565568
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> tp	-2.928684467565568
token :: (call keepSet (call getRowTop (number 1))) <==> kp	-2.9401404761295513
token :: (call wallToString (call keepSet (call getRowTop (number 1)))) <==> kp	-2.9401404761295513
token :: (call wallToString (call removeSet (call getRowTop (number 1)))) <==> kp	-2.9401404761295513
token :: (call removeSet (call getRowTop (number 1))) <==> kp	-2.9401404761295513
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> br	-2.940481040305793
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> br	-2.940481040305793
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> tp	-2.941505235591447
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> tp	-2.941505235591447
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> kp	-2.9434098368644253
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> kp	-2.9434098368644253
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> kp	-2.9434098368644253
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> kp	-2.9434098368644253
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> top	-2.9516417882789296
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> top	-2.9516417882789296
token :: (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR)) <==> top	-2.9519904566103263
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 1 COLOR))) <==> top	-2.9519904566103263
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> rm	-2.9584084613586135
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> rm	-2.9584084613586135
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> tp	-2.979711711025658
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> tp	-2.985935206216222
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> tp	-2.985935206216222
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (var c))) <==> tp	-2.987267202211687
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> top	-2.9925659966224276
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> top	-2.9925659966224276
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> kp	-2.9932161642043797
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> top	-2.997410927727646
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> top	-2.997410927727646
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> kp	-3.0013636122802323
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> kp	-3.0013636122802323
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> kp	-3.0096420822982313
token :: (lambda c (call changeSetColor (call getColor (number 1 COLOR)) (var c))) <==> kp	-3.013757497063663
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> kp	-3.018842426585152
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> kp	-3.018842426585152
token :: (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR)) <==> kp	-3.01888860695261
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR))) <==> kp	-3.01888860695261
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> tp	-3.0212339456352604
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> tp	-3.0212339456352604
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) <==> tp	-3.022268268050916
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> top	-3.0225323251032816
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> top	-3.0225323251032816
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> tp	-3.0257696773921046
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> tp	-3.0257696773921046
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> tp	-3.0287426021542494
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> tp	-3.0287426021542494
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> tp	-3.0288590927948857
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> tp	-3.0289460262214463
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> tp	-3.0289460262214463
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> top	-3.030908695128642
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> top	-3.030908695128642
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> rm	-3.0319544422932454
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> rm	-3.0319544422932454
token :: (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) <==> tp	-3.034511044551793
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> top	-3.0345829025177364
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> tp	-3.036943803686109
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> tp	-3.036943803686109
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> kp	-3.0546387943224285
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> kp	-3.0546387943224285
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> tp	-3.0587763195206654
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> tp	-3.0587763195206654
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) <==> tp	-3.0624806690599717
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> tp	-3.063468152326271
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> tp	-3.063468152326271
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> tp	-3.063468152326271
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> tp	-3.063468152326271
token :: (call keepSet (call getRowTop (number 1))) <==> top	-3.0717330185389184
token :: (call removeSet (call getRowTop (number 1))) <==> top	-3.0717330185389184
token :: (call wallToString (call keepSet (call getRowTop (number 1)))) <==> top	-3.0717330185389184
token :: (call wallToString (call removeSet (call getRowTop (number 1)))) <==> top	-3.0717330185389184
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> kp	-3.0738067877957813
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> kp	-3.0738067877957813
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> kp	-3.0949635700217635
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> kp	-3.0949635700217635
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))) <==> top	-3.101507585429328
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> kp	-3.1101218515943163
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> kp	-3.1101218515943163
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> top	-3.115499545289106
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> top	-3.115499545289106
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> top	-3.12664548946584
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> top	-3.12664548946584
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> top	-3.12664548946584
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> top	-3.12664548946584
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> kp	-3.1299824238557776
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> kp	-3.1299824238557776
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> top	-3.137833882918412
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> top	-3.137833882918412
token :: (lambda s2 (call setUnion (call getColor (number 0 COLOR)) (var s2))) <==> top	-3.1534193124646657
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) <==> kp	-3.1536349825814773
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> kp	-3.1573426068278065
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> kp	-3.1573426068278065
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> kp	-3.1573426068278065
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> kp	-3.1573426068278065
token :: (call wallToString (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR))) <==> top	-3.1592223833960995
token :: (call changeSetColor (call getColor (number 0 COLOR)) (number 0 COLOR)) <==> top	-3.1592223833960995
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (var c))) <==> top	-3.1628654618657555
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (var c))) <==> kp	-3.1630958241416915
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> kp	-3.163277727604659
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> kp	-3.163277727604659
token :: (call keepSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> kp	-3.163277727604659
token :: (call removeSet (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> kp	-3.163277727604659
token :: (call setUnion (call getColor (number 1 COLOR)) (call getRowTop (number 0))) <==> kp	-3.163710518161844
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> kp	-3.171969768446577
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> kp	-3.171969768446577
token :: (call removeSet (call getColor (number 0 COLOR))) <==> kp	-3.1742245928104684
token :: (call wallToString (call removeSet (call getColor (number 0 COLOR)))) <==> kp	-3.1742245928104684
token :: (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> top	-3.179786796629653
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> top	-3.179786796629653
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR))) <==> top	-3.179786796629653
token :: (call changeSetColor (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) (number 0 COLOR)) <==> top	-3.179786796629653
token :: (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR)) <==> tp	-3.183495029779007
token :: (call wallToString (call changeSetColor (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 1 COLOR))) (number 0 COLOR))) <==> tp	-3.183495029779007
token :: (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))) <==> top	-3.1847295642125504
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> top	-3.1953614951656935
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> top	-3.1953614951656935
token :: (call wallToString (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> top	-3.1953614951656935
token :: (call keepSet (call setUnion (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> top	-3.1953614951656935
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> kp	-3.211319586280847
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> kp	-3.211319586280847
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> top	-3.2196114050246365
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> top	-3.2196114050246365
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> kp	-3.2307460332339426
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> kp	-3.2307460332339426
token :: (lambda s2 (call setUnion (call getRowTop (number 1)) (var s2))) <==> top	-3.2388075171929103
token :: (lambda s2 (call setIntersection (call getRowTop (number 1)) (var s2))) <==> top	-3.2388075171929103
token :: (call wallToString (call keepSet (call getColor (number 0 COLOR)))) <==> top	-3.2497557580198877
token :: (call keepSet (call getColor (number 0 COLOR))) <==> top	-3.2497557580198877
token :: (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> top	-3.254107518252057
token :: (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))) <==> top	-3.3015229851263355
token :: (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))) <==> top	-3.3015229851263355
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> top	-3.308458820078894
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> top	-3.308458820078894
token :: (call keepSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> top	-3.308458820078894
token :: (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> top	-3.308458820078894
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> top	-3.308458820078894
token :: (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> top	-3.308458820078894
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 1)) (call getRowTop (number 0))))) <==> top	-3.308458820078894
token :: (call keepSet (call setIntersection (call getRowTop (number 1)) (call getRowTop (number 0)))) <==> top	-3.308458820078894
token :: (number 1) <==> top	-3.30983466442637
token :: (call getRowTop (number 1)) <==> top	-3.30983466442637
token :: (call wallToString (call removeSet (call getColor (number 1 COLOR)))) <==> top	-3.311604157299577
token :: (call removeSet (call getColor (number 1 COLOR))) <==> top	-3.311604157299577
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> tp	-3.3142724069859866
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> tp	-3.3142724069859866
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> kp	-3.357021952345677
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> kp	-3.3632049604794805
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> kp	-3.3632049604794805
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> tp	-3.3705025770197325
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> tp	-3.3705025770197325
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> kp	-3.4058107025429374
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> kp	-3.4058107025429374
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> tp	-3.4192125919576903
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> tp	-3.4192125919576903
token :: (lambda c (call changeSetColor (call getRowTop (number 0)) (var c))) <==> top	-3.4315312479035356
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR))))) <==> kp	-3.464604468881399
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getColor (number 1 COLOR)))) <==> kp	-3.464604468881399
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (var c))) <==> kp	-3.4927754752182025
token :: (call removeSet (call getColor (number 1 COLOR))) <==> kp	-3.50816480197244
token :: (call wallToString (call removeSet (call getColor (number 1 COLOR)))) <==> kp	-3.50816480197244
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> top	-3.514359141279092
token :: (call keepSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> top	-3.514359141279092
token :: (call keepSet (call getColor (number 1 COLOR))) <==> top	-3.514363923084038
token :: (call wallToString (call keepSet (call getColor (number 1 COLOR)))) <==> top	-3.514363923084038
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR))) <==> top	-3.6107441012003356
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) (number 0 COLOR)) <==> top	-3.6107441012003356
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> top	-3.6217210154524047
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> top	-3.6217210154524047
token :: (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))) <==> top	-3.628696325744308
token :: (call removeSet (call getRowTop (number 0))) <==> cy	-3.638343412680312
token :: (call wallToString (call removeSet (call getRowTop (number 0)))) <==> cy	-3.638343412680312
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> top	-3.6454909103168234
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> top	-3.6454909103168234
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> top	-3.6454909103168234
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> top	-3.6454909103168234
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> kp	-3.6588348161499864
token :: (call removeSet (call getRowTop (number 0))) <==> br	-3.664095132959468
token :: (call wallToString (call removeSet (call getRowTop (number 0)))) <==> br	-3.664095132959468
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (var c))) <==> top	-3.6727512586900786
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> kp	-3.7014320474000986
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> kp	-3.7014320474000986
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR))) <==> top	-3.7093196151028702
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 0 COLOR)) <==> top	-3.7093196151028702
token :: (call keepSet (call getRowTop (number 0))) <==> rm	-3.715777652984753
token :: (call wallToString (call keepSet (call getRowTop (number 0)))) <==> rm	-3.715777652984753
token :: (call keepSet (call getRowTop (number 0))) <==> br	-3.7322381636921267
token :: (call wallToString (call keepSet (call getRowTop (number 0)))) <==> br	-3.7322381636921267
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> top	-3.7354097215459623
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> top	-3.7354097215459623
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> kp	-3.7545001872505663
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> kp	-3.7545001872505663
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> kp	-3.7775461284778755
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> kp	-3.7775461284778755
token :: (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))) <==> top	-3.8060463850507777
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> top	-3.825146072162086
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> top	-3.825146072162086
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1))))) <==> top	-3.825146072162086
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 1)))) <==> top	-3.825146072162086
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> tp	-3.8363232451733227
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> tp	-3.8363232451733227
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> rm	-3.859264035795095
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> rm	-3.859264035795095
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> top	-3.8798698504454423
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> top	-3.8798698504454423
token :: (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> tp	-3.8897147807661447
token :: (call wallToString (call keepSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> tp	-3.8897147807661447
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR)) <==> top	-3.9226184203464296
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 1 COLOR))) <==> top	-3.9226184203464296
token :: (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))) <==> top	-3.9865167515668913
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> rm	-3.9891371910503506
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> rm	-3.9891371910503506
token :: (lambda c (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (var c))) <==> top	-4.002544359639807
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR))) <==> top	-4.008558314383832
token :: (call changeSetColor (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))) (number 0 COLOR)) <==> top	-4.008558314383832
token :: (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> top	-4.015618690366212
token :: (call wallToString (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> top	-4.015618690366212
token :: (call removeSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> top	-4.015618690366212
token :: (call wallToString (call keepSet (call setUnion (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> top	-4.015618690366212
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR))) <==> top	-4.062270824199132
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))) (number 1 COLOR)) <==> top	-4.062270824199132
token :: (call keepSet (call getRowTop (number 0))) <==> cy	-4.112047375750325
token :: (call wallToString (call keepSet (call getRowTop (number 0)))) <==> cy	-4.112047375750325
token :: (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR)) <==> top	-4.149384425212858
token :: (call wallToString (call changeSetColor (call getRowTop (number 0)) (number 0 COLOR))) <==> top	-4.149384425212858
token :: (lambda c (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> top	-4.163205409857267
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> tp	-4.259739550928306
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> tp	-4.259739550928306
token :: (call wallToString (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))))) <==> tp	-4.260870066966073
token :: (call keepSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR)))) <==> tp	-4.260870066966073
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))))) <==> kp	-4.271934359273212
token :: (call removeSet (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0)))) <==> kp	-4.271934359273212
token :: (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))) <==> top	-4.276478577158703
token :: (call wallToString (call removeSet (call getRowTop (number 0)))) <==> kp	-4.3255397004717855
token :: (call removeSet (call getRowTop (number 0))) <==> kp	-4.3255397004717855
token :: (lambda c (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (var c))) <==> top	-4.412593270323605
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> top	-4.426499161678654
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> top	-4.426499161678654
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> top	-4.43366899278636
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> top	-4.43366899278636
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR))))) <==> kp	-4.437896257132028
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getColor (number 0 COLOR)))) <==> kp	-4.437896257132028
token :: (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0)))) <==> kp	-4.592200486555406
token :: (call wallToString (call removeSet (call setIntersection (call getColor (number 0 COLOR)) (call getRowTop (number 0))))) <==> kp	-4.592200486555406
token :: (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0)))) <==> kp	-4.657455640173827
token :: (call wallToString (call removeSet (call setIntersection (call getRowTop (number 0)) (call getRowTop (number 0))))) <==> kp	-4.657455640173827
token :: (call wallToString (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR))) <==> tp	-4.725009216330104
token :: (call changeSetColor (call setIntersection (call getRowTop (number 0)) (call getColor (number 1 COLOR))) (number 1 COLOR)) <==> tp	-4.725009216330104
token :: (call wallToString (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR))) <==> top	-4.802039067457699
token :: (call changeSetColor (call setUnion (call getRowTop (number 0)) (call getRowTop (number 0))) (number 0 COLOR)) <==> top	-4.802039067457699
token :: (call wallToString (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR))) <==> tp	-4.960582217772839
token :: (call changeSetColor (call setIntersection (call getColor (number 1 COLOR)) (call getRowTop (number 0))) (number 1 COLOR)) <==> tp	-4.960582217772839
token :: (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR)))) <==> top	-5.027275050659227
token :: (call wallToString (call removeSet (call setUnion (call getColor (number 0 COLOR)) (call getColor (number 0 COLOR))))) <==> top	-5.027275050659227
token :: (call removeSet (call getColor (number 0 COLOR))) <==> top	-5.860225157998039
token :: (call wallToString (call removeSet (call getColor (number 0 COLOR)))) <==> top	-5.860225157998039
