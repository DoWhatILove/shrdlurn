#!/bin/sh
SEMPATH=../semparse
GRAMMAR=../semparse/shrdlurn/stacks.grammar
cd $SEMPATH
LEARNOPTS="-Parser FloatingParser -FloatingParser.maxDepth 8 -FloatingParser.useSizeInsteadOfDepth true -Params.l1Reg lazy -Params.l1RegCoeff 0.001 -Parser.beamSize 100 -StacksWorldFeatureComputer.ngramN 2 -Params.initStepSize 0.1 -Params.adaptiveStepSize true -FeatureExtractor.featureDomains tree"

SESSIONSTUFF="-Master.onlineLearnExamples false -Master.independentSessions true"

PRAG="-Master.bePragmatic true -PragmaticListener.addModelProb true -PragmaticListener.smoothAlpha 1.0 -PragmaticListener.uniformWeight 0.001 -PragmaticListener.lambda 3.0 -Learner.onlineEvaluation true -Derivation.comparePragmatically true"

OPTIONS="-JavaExecutor.convertNumberValues false  -FeatureExtractor.featureComputers cubeworld.StacksWorldFeatureComputer  -Params.initWeightsRandomly false -Grammar.inPaths $GRAMMAR -Parser.pruneErrorValues true -JoinFn.typeInference true -LanguageAnalyzer.lowerCaseTokens true"

# features are tree, heads, ngram
# DEBUG="-Xdebug -Xrunjdwp:server=y,transport=dt_socket,suspend=n,address=8898"

if [ $1 == "analyze" ]; then
    for turkid in $(<../cubesem/data/topturker.txt)
    do
	egrep -e "(-train.correct.mean|-train.correctBaseline.mean)" _OUTPATH_/${turkid}/output.map | paste -d "\t" - - | sed -e "s/$/$(echo '\t')${turkid}/"
    done
else
    for turkid in $(<../cubesem/data/topturker.txt)
    do
	mkdir "_OUTPATH_/${turkid}/"
	TRAIN_IN="-Dataset.inPaths train:/Users/sidaw/data/cubeturk/examples/${turkid}.lisp -Learner.maxTrainIters 1"
	BASICS="-Dmodules=core,cubeworld -cp libsempre/*:lib/* -ea edu.stanford.nlp.sempre.Main -execDir _OUTPATH_/${turkid}/ -overwriteExecDir -addToView 0"
	java $BASICS $OPTIONS $LEARNOPTS $SESSIONSTUFF $TRAIN_IN $PRAG -Server.numThreads 1 "$@"
	#rlwrap java $BASICS $OPTIONS $LEARNOPTS $SESSIONSTUFF $TRAIN_IN $PRAG -Server.numThreads 1 "$@"
    done
fi

#find ./*/output.map -type f -mtime -5m | xargs grep -e ":train.correctNormal.mean"
