!function(n){function t(n){var t=document.getElementsByTagName("head")[0],B=document.createElement("script");B.type="text/javascript",B.charset="utf-8",B.src=a.p+""+n+"."+u+".hot-update.js",t.appendChild(B)}function B(){return new Promise(function(n,t){if("undefined"==typeof XMLHttpRequest)return t(new Error("No browser support"));try{var B=new XMLHttpRequest,e=a.p+""+u+".hot-update.json";B.open("GET",e,!0),B.timeout=1e4,B.send(null)}catch(s){return t(s)}B.onreadystatechange=function(){if(4===B.readyState)if(0===B.status)t(new Error("Manifest request to "+e+" timed out."));else if(404===B.status)n();else if(200!==B.status&&304!==B.status)t(new Error("Manifest request to "+e+" failed."));else{try{var s=JSON.parse(B.responseText)}catch(I){return void t(I)}n(s)}}})}function e(n){var t=W[n];if(!t)return a;var B=function(B){return t.hot.active?(W[B]?W[B].parents.indexOf(n)<0&&W[B].parents.push(n):X=[n],t.children.indexOf(B)<0&&t.children.push(B)):(console.warn("[HMR] unexpected require("+B+") from disposed module "+n),X=[]),r=!1,a(B)};for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&Object.defineProperty(B,e,function(n){return{configurable:!0,enumerable:!0,get:function(){return a[n]},set:function(t){a[n]=t}}}(e));return Object.defineProperty(B,"e",{enumerable:!0,value:function(n){function t(){L--,"prepare"===m&&(y[n]||Q(n),0===L&&0===h&&l())}return"ready"===m&&I("prepare"),L++,a.e(n).then(t,function(n){throw t(),n})}}),B}function s(n){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:r,active:!0,accept:function(n,B){if("undefined"==typeof n)t._selfAccepted=!0;else if("function"==typeof n)t._selfAccepted=n;else if("object"==typeof n)for(var e=0;e<n.length;e++)t._acceptedDependencies[n[e]]=B;else t._acceptedDependencies[n]=B},decline:function(n){if("undefined"==typeof n)t._selfDeclined=!0;else if("object"==typeof n)for(var B=0;B<n.length;B++)t._declinedDependencies[n[B]]=!0;else t._declinedDependencies[n]=!0},dispose:function(n){t._disposeHandlers.push(n)},addDisposeHandler:function(n){t._disposeHandlers.push(n)},removeDisposeHandler:function(n){var B=t._disposeHandlers.indexOf(n);B>=0&&t._disposeHandlers.splice(B,1)},check:F,apply:g,status:function(n){return n?void Z.push(n):m},addStatusHandler:function(n){Z.push(n)},removeStatusHandler:function(n){var t=Z.indexOf(n);t>=0&&Z.splice(t,1)},data:G[n]};return r=!0,t}function I(n){m=n;for(var t=0;t<Z.length;t++)Z[t].call(null,n)}function c(n){var t=+n+""===n;return t?+n:n}function F(n){if("idle"!==m)throw new Error("check() is only allowed in idle status");return C=n,I("check"),B().then(function(n){if(!n)return I("idle"),null;p={},V={},y={};for(var t=0;t<n.c.length;t++)V[n.c[t]]=!0;o=n.h,I("prepare");var B=new Promise(function(n,t){d={resolve:n,reject:t}});U={};var e=0;return Q(e),"prepare"===m&&0===L&&0===h&&l(),B})}function i(n,t){if(V[n]&&p[n]){p[n]=!1;for(var B in t)Object.prototype.hasOwnProperty.call(t,B)&&(U[B]=t[B]);0===--h&&0===L&&l()}}function Q(n){V[n]?(p[n]=!0,h++,t(n)):y[n]=!0}function l(){I("ready");var n=d;if(d=null,n)if(C)g(C).then(function(t){n.resolve(t)},function(t){n.reject(t)});else{var t=[];for(var B in U)Object.prototype.hasOwnProperty.call(U,B)&&t.push(c(B));n.resolve(t)}}function g(t){function B(n){for(var t=[n],B={},s=t.slice().map(function(n){return{chain:[n],id:n}});s.length>0;){var I=s.pop(),c=I.id,F=I.chain;if(n=W[c],n&&!n.hot._selfAccepted){if(n.hot._selfDeclined)return{type:"self-declined",chain:F,moduleId:c};if(n.hot._main)return{type:"unaccepted",chain:F,moduleId:c};for(var i=0;i<n.parents.length;i++){var Q=n.parents[i],l=W[Q];if(l){if(l.hot._declinedDependencies[c])return{type:"declined",chain:F.concat([Q]),moduleId:c,parentId:Q};t.indexOf(Q)>=0||(l.hot._acceptedDependencies[c]?(B[Q]||(B[Q]=[]),e(B[Q],[c])):(delete B[Q],t.push(Q),s.push({chain:F.concat([Q]),id:Q})))}}}}return{type:"accepted",outdatedModules:t,outdatedDependencies:B}}function e(n,t){for(var B=0;B<t.length;B++){var e=t[B];n.indexOf(e)<0&&n.push(e)}}if("ready"!==m)throw new Error("apply() is only allowed in ready status");t=t||{};var s,F,i,Q,l,g={},b=[],d={};for(var C in U)if(Object.prototype.hasOwnProperty.call(U,C)){l=c(C);var r=B(l),x=!1,Z=!1,h="";switch(r.chain&&(h="\nUpdate propagation: "+r.chain.join(" -> ")),r.type){case"self-declined":t.onDeclined&&t.onDeclined(r),t.ignoreDeclined||(x=new Error("Aborted because of self decline: "+r.moduleId+h));break;case"declined":t.onDeclined&&t.onDeclined(r),t.ignoreDeclined||(x=new Error("Aborted because of declined dependency: "+r.moduleId+" in "+r.parentId+h));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(r),t.ignoreUnaccepted||(x=new Error("Aborted because "+l+" is not accepted"+h));break;case"accepted":t.onAccepted&&t.onAccepted(r),Z=!0;break;default:throw new Error("Unexception type "+r.type)}if(x)return I("abort"),Promise.reject(x);if(Z){d[l]=U[l],e(b,r.outdatedModules);for(l in r.outdatedDependencies)Object.prototype.hasOwnProperty.call(r.outdatedDependencies,l)&&(g[l]||(g[l]=[]),e(g[l],r.outdatedDependencies[l]))}}var L=[];for(F=0;F<b.length;F++)l=b[F],W[l]&&W[l].hot._selfAccepted&&L.push({module:l,errorHandler:W[l].hot._selfAccepted});I("dispose");for(var y,p=b.slice();p.length>0;)if(l=p.pop(),Q=W[l]){var V={},A=Q.hot._disposeHandlers;for(i=0;i<A.length;i++)(s=A[i])(V);for(G[l]=V,Q.hot.active=!1,delete W[l],i=0;i<Q.children.length;i++){var R=W[Q.children[i]];R&&(y=R.parents.indexOf(l),y>=0&&R.parents.splice(y,1))}}var N,S;for(l in g)if(Object.prototype.hasOwnProperty.call(g,l))for(Q=W[l],S=g[l],i=0;i<S.length;i++)N=S[i],y=Q.children.indexOf(N),y>=0&&Q.children.splice(y,1);I("apply"),u=o;for(l in d)Object.prototype.hasOwnProperty.call(d,l)&&(n[l]=d[l]);var E=null;for(l in g)if(Object.prototype.hasOwnProperty.call(g,l)){Q=W[l],S=g[l];var v=[];for(F=0;F<S.length;F++)N=S[F],s=Q.hot._acceptedDependencies[N],v.indexOf(s)>=0||v.push(s);for(F=0;F<v.length;F++){s=v[F];try{s(g)}catch(H){E||(E=H)}}}for(F=0;F<L.length;F++){var Y=L[F];l=Y.module,X=[l];try{a(l)}catch(H){if("function"==typeof Y.errorHandler)try{Y.errorHandler(H)}catch(H){E||(E=H)}else E||(E=H)}}return E?(I("fail"),Promise.reject(E)):(I("idle"),Promise.resolve(b))}function a(t){if(W[t])return W[t].exports;var B=W[t]={i:t,l:!1,exports:{},hot:s(t),parents:(x=X,X=[],x),children:[]};return n[t].call(B.exports,B,B.exports,e(t)),B.l=!0,B.exports}var b=this.webpackHotUpdate;this.webpackHotUpdate=function(n,t){i(n,t),b&&b(n,t)};var d,U,o,C=!0,u="598700e3ce1fca69d712",G={},r=!0,X=[],x=[],Z=[],m="idle",h=0,L=0,y={},p={},V={},W={};return a.m=n,a.c=W,a.i=function(n){return n},a.d=function(n,t,B){Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:B})},a.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},a.p="",a.h=function(){return u},e(23)(a.s=23)}([function(module,exports,__webpack_require__){"use strict";eval('var configs = {};\n\nif (false) {\n  configs.SEMPRE_URL = "http://localhost:8400";\n} else {\n  configs.SEMPRE_URL = "http://jonsson.stanford.edu:8401";\n}\n\nconfigs.loggerServer = "ws://hydrogen.samginn.com:4000/socket";\nconfigs.loggerOn = false;\n\nconfigs.debugMode = false;\n\nconfigs.defaultSessionId = "deadbeef";\n\nconfigs.emptyStruct = [];\nconfigs.defaultStruct = [{ x: 0, y: 1, z: 0, color: "Red", names: ["s"] }];\n\nconfigs.mainCanvas = "main_canvas";\nconfigs.targetCanvas = "target_canvas";\nconfigs.consoleElemId = "console";\nconfigs.historyElemId = "command_history";\nconfigs.statusElemId = "status";\nconfigs.currentCmdElemId = "currentcmd";\nconfigs.possStepsElemId = "possible_steps";\nconfigs.maxStepsElemId = "max_steps";\nconfigs.currStepsElemId = "curr_steps";\nconfigs.reactionElemId = "reaction";\nconfigs.defineElemId = "definetextarea";\nconfigs.defineButton = "define_phrase_button";\nconfigs.definePromptElemId = "show_define_status";\nconfigs.randomElemId = "random";\nconfigs.referenceElemId = "reference";\n\nconfigs.elems = {\n  helpMe: "helpme",\n  keyboard: "keyboard_shortcuts",\n  currSteps: "curr_steps",\n  consoleGroup: "console_group",\n  defineInterface: "define_interface",\n  console: "console",\n  defineConsole: "definetextarea",\n  defineStatus: "define_status",\n  defineHeader: "define_header",\n  definePrompt: "define_prompt"\n};\n\nconfigs.buttons = {\n  do: "dobutton",\n  accept: "flyingaccept",\n  prev: "prevbutton",\n  next: "nextbutton",\n  clear: "clearbutton",\n  paraphrase: "paraphrase",\n  define: "define_phrase_button",\n  close_define: "close_define_interface",\n  define_instead: "define_instead",\n  skip: "skip_button",\n  reset: "reset_all_progress",\n  toggleDefine: "toggledefine",\n  putBack: "putbackbutton",\n  tryDefine: "try_define",\n  rotateIcons: "rotate-icons"\n};\n\nconfigs.difficulty = 3;\nconfigs.defaultSkips = 2;\n\n// configs.targets = [\n//   [7, "[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[0,0,0,0,0,2],[9,9,9,9,9,2],[9,9,9,9,9,2],[0,0,0,0,0,2,2,2,2,2,2],[],[],[],[],[9,9,9,9,9,2],[9,9,9,9,9,2],[9,9,9,9,9,2],[9,9,9,9,9,2,2,2,2,2,2],[],[],[],[],[9,9,9,9,9,2],[9,9,9,9,9,2],[9,9,9,9,9,2],[9,9,9,9,9,2,2,2,2,2,2],[],[],[],[],[0,0,0,0,0,2],[9,9,9,9,9,2],[9,9,9,9,9,2],[0,0,0,0,0,2,2,2,2,2,2],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]"],\n//   [5, "[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[0,0],[9,0,0],[9,9,0,0],[9,9,9,0,0],[9,9,9,0,0],[9,9,9,0,0],[9,9,9,0,0],[9,9,9,0,0],[2],[9],[9,9,2],[9,9,9],[9,9,9,2],[9,9,9],[9,9,9,2],[9,9,9],[2],[9],[9,9,2],[9,9,9],[9,9,9,2],[9,9,9],[9,9,9,2],[9,9,9],[0,0],[9,0,0],[9,9,0,0],[9,9,9,0,0],[9,9,9,0,0],[9,9,9,0,0],[9,9,9,0,0],[9,9,9,0,0],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]"],\n//   [5, "[[],[],[],[],[],[],[],[],[],[],[],[0,0,0,2],[],[],[],[],[],[],[],[9,9,9,2,6],[],[],[],[],[],[],[],[9,9,9,2,6,6,10],[],[],[],[],[],[],[],[9,9,9,2,6],[],[],[],[],[],[],[],[0,0,0,2],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]"],\n//   [3, "[[2],[],[],[4],[],[],[1],[],[2,2],[],[],[4,4],[],[],[1,1],[],[2,2,2],[],[],[4,4,4],[],[],[1,1,1],[],[2,2,2,2],[],[],[4,4,4,4],[],[],[1,1,1,1],[],[2,2,2,2],[],[],[4,4,4,4],[],[],[1,1,1,1],[],[2,2,2],[],[],[4,4,4],[],[],[1,1,1],[],[2,2],[],[],[4,4],[],[],[1,1],[],[2],[],[],[4],[],[],[1],[]]"],\n//   [4, "[[3],[2],[0],[],[],[0],[2],[3],[2],[3],[2],[0],[0],[2],[3],[2],[0],[2],[3],[2],[2],[3],[2],[0],[],[0],[2],[3],[3],[2],[0],[],[],[0],[2],[3],[3],[2],[0],[],[0],[2],[3],[2],[2],[3],[2],[0],[2],[3],[2],[0],[0],[2],[3],[2],[3],[2],[0],[],[],[0],[2],[3]]"],\n//   [5, "[[],[],[],[4,1,3,3,3,3,3,3,3],[],[],[],[],[],[],[],[2,2,0,3,3,3,3,3,3],[],[],[],[],[],[],[],[4,4,4,1,3,3,3,3,3],[],[],[],[],[],[],[],[2,2,2,2,0,3,3,3,3],[],[],[],[],[],[],[],[4,4,4,4,4,1,3,3,3],[],[],[],[],[],[],[],[2,2,2,2,2,2,0,3,3],[],[],[],[],[],[],[],[4,4,4,4,4,4,4,1,3],[],[],[],[],[],[],[],[2,2,2,2,2,2,2,2,0],[],[],[],[]]"],\n//   [3, "[[0,0,0,0],[],[],[],[],[],[],[0,0,0,0],[1,1,1,1,4,4],[],[],[],[],[],[],[1,1,1,1,4,4],[0,0,0,0],[],[],[],[],[],[],[0,0,0,0],[],[],[],[],[],[],[],[],[],[],[],[],[0,0,0,0],[],[],[],[],[],[],[],[1,1,1,1,4,4],[],[],[],[],[],[],[],[0,0,0,0],[],[],[],[],[],[],[],[],[],[],[]]"],\n//   [4, "[[],[],[],[1],[1],[],[],[],[4],[4],[4],[4,1],[4,1],[4],[4],[4],[4,2],[4,2],[4,2],[4,2,1],[4,2,1],[4,2],[4,2],[4,2],[4,2,0],[4,2,0],[4,2,0],[4,2,0,1],[4,2,0,1],[4,2,0],[4,2,0],[4,2,0],[4,2,0],[4,2,0],[4,2,0],[4,2,0,1],[4,2,0,1],[4,2,0],[4,2,0],[4,2,0],[4,2],[4,2],[4,2],[4,2,1],[4,2,1],[4,2],[4,2],[4,2],[4],[4],[4],[4,1],[4,1],[4],[4],[4],[],[],[],[1],[1],[],[],[]]"],\n//   [4, "[[2],[2,0],[2,0,4],[2,0,4,3],[2,0,4,3],[2,0,4],[2,0],[2],[2],[2,0],[2,0,4],[2,0,4,3],[2,0,4,3],[2,0,4],[2,0],[2],[2],[2,0],[2,0,4],[2,0,4,3],[2,0,4,3],[2,0,4],[2,0],[2],[2],[2,0],[2,0,4],[2,0,4,3],[2,0,4,3],[2,0,4],[2,0],[2],[2],[2,0],[2,0,4],[2,0,4,3],[2,0,4,3],[2,0,4],[2,0],[2],[2],[2,0],[2,0,4],[2,0,4,3],[2,0,4,3],[2,0,4],[2,0],[2],[2],[2,0],[2,0,4],[2,0,4,3],[2,0,4,3],[2,0,4],[2,0],[2],[2],[2,0],[2,0,4],[2,0,4,3],[2,0,4,3],[2,0,4],[2,0],[2]]"],\n//   [2, "[[0],[0],[0],[2,0],[2,2,0],[2,2,2,0],[2,2,2,2,0],[2,2,2,2,2,0],[],[],[],[2],[2,2],[2,2,2],[2,2,2,2],[2,2,2,2,2],[0],[0],[0],[2,0],[2,2,0],[2,2,2,0],[2,2,2,2,0],[2,2,2,2,2,0],[],[],[],[2],[2,2],[2,2,2],[2,2,2,2],[2,2,2,2,2],[0],[0],[0],[2,0],[2,2,0],[2,2,2,0],[2,2,2,2,0],[2,2,2,2,2,0],[],[],[],[2],[2,2],[2,2,2],[2,2,2,2],[2,2,2,2,2],[0],[0],[0],[2,0],[2,2,0],[2,2,2,0],[2,2,2,2,0],[2,2,2,2,2,0],[],[],[],[2],[2,2],[2,2,2],[2,2,2,2],[2,2,2,2,2]]"],\n//   [2, "[[2,2,2],[],[],[],[2,2,2],[],[],[],[2,2,2,0],[],[],[],[2,2,2,0],[],[],[],[2,2,2],[],[],[],[2,2,2],[],[],[],[2,2,2,0],[],[],[],[2,2,2,0],[],[],[],[2,2,2],[],[],[],[2,2,2],[],[],[],[2,2,2,0],[],[],[],[2,2,2,0],[],[],[],[2,2,2],[],[],[],[2,2,2],[],[],[],[2,2,2,0],[],[],[],[2,2,2,0],[],[],[]]"],\n//   [3, "[[4],[4],[4],[4],[4],[4],[4],[4],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[2],[0],[4],[4],[4],[4],[4],[4],[4],[4]]"],\n//   [5, "[[2,2,2],[2,2,2,0],[2,2,2],[2,2,2,0],[2,2,2],[2,2,2,0],[2,2,2],[2,2,2,0],[],[],[],[],[],[],[],[],[1,1,1],[1,1,1,0],[1,1,1],[1,1,1,0],[1,1,1],[1,1,1,0],[1,1,1],[1,1,1,0],[],[],[],[],[],[],[],[],[4,4,4],[4,4,4,0],[4,4,4],[4,4,4,0],[4,4,4],[4,4,4,0],[4,4,4],[4,4,4,0],[],[],[],[],[],[],[],[],[3,3,3],[3,3,3,0],[3,3,3],[3,3,3,0],[3,3,3],[3,3,3,0],[3,3,3],[3,3,3,0],[],[],[],[],[],[],[],[]]"],\n//   [5, "[[2,2,2],[2,2,2,0],[2,2,2],[2,2,2,0],[2,2,2],[2,2,2,0],[2,2,2],[2,2,2,0],[4,4,4],[1],[1],[1],[1],[1],[1],[1,3],[4,4,4],[1],[1],[1],[1],[1],[1],[1,3],[4,4,4],[1],[1],[1],[1],[1],[1],[1,3],[4,4,4],[1],[1],[1],[1],[1],[1],[1,3],[4,4,4],[1],[1],[1],[1],[1],[1],[1,3],[4,4,4],[1],[1],[1],[1],[1],[1],[1,3],[2,2,2],[2,2,2,0],[2,2,2],[2,2,2,0],[2,2,2],[2,2,2,0],[2,2,2],[2,2,2,0]]"],\n//   [4, "[[4],[4],[4],[4],[4],[4],[4],[4],[4],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4],[4],[4,3],[4,3,2],[4,3,2],[4,3,2],[4,3,2],[4,3],[4],[4],[4,3],[4,3,2],[4,3,2,0],[4,3,2,0],[4,3,2],[4,3],[4],[4],[4,3],[4,3,2],[4,3,2,0],[4,3,2,0],[4,3,2],[4,3],[4],[4],[4,3],[4,3,2],[4,3,2],[4,3,2],[4,3,2],[4,3],[4],[4],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4],[4],[4],[4],[4],[4],[4],[4],[4]]"],\n//    [4, "[[1,1],[1,1],[],[],[],[],[1,1],[1,1],[1,1],[1,1],[2,2,4],[2,2,4,0],[2,2,4,0],[2,2,4],[1,1],[1,1],[],[],[2,2,4],[2,2,4,0],[2,2,4,0],[2,2,4],[],[],[],[],[2,2,4],[2,2,4,0],[2,2,4,0],[2,2,4],[],[],[],[],[2,2,4],[2,2,4,0],[2,2,4,0],[2,2,4],[],[],[],[],[2,2,4],[2,2,4,0],[2,2,4,0],[2,2,4],[],[],[1,1],[1,1],[2,2,4],[2,2,4,0],[2,2,4,0],[2,2,4],[1,1],[1,1],[1,1],[1,1],[],[],[],[],[1,1],[1,1]]"],\n//   [2, "[[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,2,2],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[4],[4],[4],[4],[4],[4],[4],[4],[3],[3],[3],[3],[3],[3],[3],[3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[1,1,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]"],\n//   [4, "[[2,2],[2,2],[],[],[],[],[1,1],[1,1],[2,2],[2,2],[],[],[],[],[1,1],[1,1],[],[],[2,2],[2,2],[1,1],[1,1],[],[],[],[],[2,2],[2,2],[1,1],[1,1],[],[],[],[],[1,1],[1,1],[2,2],[2,2],[],[],[],[],[1,1],[1,1],[2,2],[2,2],[],[],[1,1],[1,1],[],[],[],[],[2,2],[2,2],[1,1],[1,1],[],[],[],[],[2,2],[2,2]]"],\n//     [4, "[[2],[2],[2],[2],[2],[2],[2],[2],[2],[3],[3],[3],[3],[3],[3],[2],[2],[3],[0],[0],[0],[0],[3],[2],[2],[3],[0],[4],[4],[0],[3],[2],[2],[3],[0],[4],[4],[0],[3],[2],[2],[3],[0],[0],[0],[0],[3],[2],[2],[3],[3],[3],[3],[3],[3],[2],[2],[2],[2],[2],[2],[2],[2],[2]]"],\n//   [6, "[[0],[4],[],[],[],[],[],[],[3],[0,2],[4],[],[],[],[0,2],[],[],[3],[0],[4],[],[],[],[],[],[],[3],[0,2],[4],[],[],[],[],[],[],[3],[0],[4],[],[],[],[],[],[],[3],[0,2],[4],[],[],[0,2],[],[],[],[3],[0],[4],[],[],[],[],[],[],[3],[0]]"],\n//   [6, "[[1,2],[1,2],[1,2],[1,2],[0,2],[],[],[4,2],[4,2],[],[],[],[0,2],[],[],[4,2],[4,2],[],[],[],[0,2],[],[],[4,2],[4,2],[],[],[],[0,2],[],[],[4,2],[4,2],[],[],[],[0,2],[],[],[4,2],[4,2],[],[],[],[0,2],[],[],[4,2],[4,2],[],[],[],[0,2],[],[],[4,2],[4,2],[],[],[],[3,2],[3,2],[3,2],[4,2]]"],\n//   [8, "[[1,1,1],[],[],[],[],[],[],[1,1,1],[],[2],[],[],[],[],[2],[],[],[],[2],[],[],[2],[],[],[],[],[],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[],[],[],[],[],[],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[],[],[],[],[],[2],[],[],[2],[],[],[],[2],[],[],[],[],[2],[],[1,1,1],[],[],[],[],[],[],[1,1,1]]"],\n// ];\nconfigs.targets = [[10, [{ x: 0, y: 0, z: 0, color: "Red" }]]];\n\nconfigs.store = sessionStorage;\n\n/* http://www.colourlovers.com/palette/1473/Ocean_Five */\n// configs.colorMap = {\n//   Red: [204, 51, 63], /* Red */\n//   Orange: [235, 104, 65], /* Orange */\n//   Yellow: [237, 201, 81], /* Yellow */\n//   Cyan: [0, 160, 176], /* Cyan */\n//   Brown: [106, 74, 60], /* Brown */\n// };\n\n/* http://colrd.com/palette/23813/?download=css */\nconfigs.colorMap = {\n  Red: [209, 0, 0],\n  Orange: [255, 102, 34],\n  Yellow: [255, 218, 33],\n  Green: [51, 221, 0],\n  Blue: [17, 51, 204],\n  Black: [10, 10, 10],\n  White: [255, 255, 240],\n  Pink: [255, 20, 147],\n  Brown: [139, 69, 19]\n};\n\n/* harmony default export */ exports["a"] = configs;//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},function(module,exports,__webpack_require__){"use strict";eval('/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__config__ = __webpack_require__(0);\n/* harmony export */ exports["d"] = getHistoryElems;/* harmony export */ exports["c"] = emojione;/* harmony export */ exports["b"] = setStore;/* harmony export */ exports["a"] = getStore;/* harmony export */ exports["e"] = resetStore;\n\nfunction getHistoryElems() {\n  return document.querySelectorAll("#command_history > div[data-type=\'accept\'], #command_history > div[data-type=\'initial\']");\n}\n\nfunction emojione(num) {\n  var emojioneList = {\n    ":scream:": ["1f631"],\n    ":astonished:": ["1f632"],\n    ":confused:": ["1f615"],\n    ":rolling_eyes:": ["1f644"],\n    ":relieved:": ["1f60c"],\n    ":relaxed:": ["263a"],\n    ":neutral_face:": ["1f610"],\n    ":slight_smile:": ["1f642"],\n    ":smiley:": ["1f603"],\n    ":grinning:": ["1f600"]\n  };\n\n  var numToShort = {\n    6: ":scream:",\n    5: ":astonished:",\n    4: ":confused:",\n    3: ":rolling_eyes:",\n    2: ":relieved:",\n    1: ":relaxed:",\n    0: ":smiley:"\n  };\n\n  var imagePathPNG = "http:\\/\\/cdn.jsdelivr.net\\/emojione\\/assets\\/png\\/";\n  var imagePathSVG = "http:\\/\\/cdn.jsdelivr.net\\/emojione\\/assets\\/svg\\/";\n  var cacheBustParam = "";\n  var imageType = "png"; // png or svg\n\n  var shortname = numToShort[num];\n  var unicode = emojioneList[shortname][emojioneList[shortname].length - 1];\n  var alt = shortname;\n\n  var replaceWith = "";\n  if (imageType === "png") {\n    replaceWith = "<img class=\\"emojione\\" alt=\\"" + alt + "\\" src=\\"" + imagePathPNG + unicode + ".png\\" />";\n  } else {\n    replaceWith = "<object class=\\"emojione\\" data=\\"" + imagePathSVG + unicode + ".svg\\" type=\\"image/svg+xml\\" standby=\\"" + alt + "\\">" + alt + "</object";\n  }\n\n  return replaceWith;\n}\n\nfunction setStore(name, value) {\n  var jsonValue = JSON.stringify(value);\n  __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].store.setItem(name, jsonValue);\n}\n\nfunction getStore(name) {\n  var defaultValue = arguments.length <= 1 || arguments[1] === undefined ? "" : arguments[1];\n\n  var value = __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].store.getItem(name);\n  if (!value) {\n    return defaultValue;\n  }\n  return JSON.parse(value);\n}\n\nfunction resetStore() {\n  __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].store.clear();\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvdXRpbC5qcz82ZTYxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7ME9BQUE7O0FBRU8sU0FBUyxlQUFULEdBQTJCO0FBQ2hDLFNBQU8sU0FBUyxnQkFBVCxDQUEwQix5RkFBMUIsQ0FBUDtBQUNEOztBQUVNLFNBQVMsUUFBVCxDQUFrQixHQUFsQixFQUF1QjtBQUM1QixNQUFNLGVBQWU7QUFDbkIsZ0JBQVksQ0FBQyxPQUFELENBRE87QUFFbkIsb0JBQWdCLENBQUMsT0FBRCxDQUZHO0FBR25CLGtCQUFjLENBQUMsT0FBRCxDQUhLO0FBSW5CLHNCQUFrQixDQUFDLE9BQUQsQ0FKQztBQUtuQixrQkFBYyxDQUFDLE9BQUQsQ0FMSztBQU1uQixpQkFBYSxDQUFDLE1BQUQsQ0FOTTtBQU9uQixzQkFBa0IsQ0FBQyxPQUFELENBUEM7QUFRbkIsc0JBQWtCLENBQUMsT0FBRCxDQVJDO0FBU25CLGdCQUFZLENBQUMsT0FBRCxDQVRPO0FBVW5CLGtCQUFjLENBQUMsT0FBRDtBQVZLLEdBQXJCOztBQWFBLE1BQU0sYUFBYTtBQUNqQixPQUFHLFVBRGM7QUFFakIsT0FBRyxjQUZjO0FBR2pCLE9BQUcsWUFIYztBQUlqQixPQUFHLGdCQUpjO0FBS2pCLE9BQUcsWUFMYztBQU1qQixPQUFHLFdBTmM7QUFPakIsT0FBRztBQVBjLEdBQW5COztBQVVBLE1BQU0sZUFBZSxvREFBckI7QUFDQSxNQUFNLGVBQWUsb0RBQXJCO0FBQ0EsTUFBTSxpQkFBaUIsRUFBdkI7QUFDQSxNQUFNLFlBQVksS0FBbEIsQzs7QUFFQSxNQUFNLFlBQVksV0FBVyxHQUFYLENBQWxCO0FBQ0EsTUFBTSxVQUFVLGFBQWEsU0FBYixFQUF3QixhQUFhLFNBQWIsRUFBd0IsTUFBeEIsR0FBaUMsQ0FBekQsQ0FBaEI7QUFDQSxNQUFNLE1BQU0sU0FBWjs7QUFFQSxNQUFJLGNBQWMsRUFBbEI7QUFDQSxNQUFJLGNBQWMsS0FBbEIsRUFBeUI7QUFDdkIscURBQTRDLEdBQTVDLGlCQUF5RCxZQUF6RCxHQUF3RSxPQUF4RTtBQUNELEdBRkQsTUFFTztBQUNMLHlEQUFnRCxZQUFoRCxHQUErRCxPQUEvRCxnREFBNkcsR0FBN0csV0FBcUgsR0FBckg7QUFDRDs7QUFFRCxTQUFPLFdBQVA7QUFDRDs7QUFFTSxTQUFTLFFBQVQsQ0FBa0IsSUFBbEIsRUFBd0IsS0FBeEIsRUFBK0I7QUFDcEMsTUFBTSxZQUFZLEtBQUssU0FBTCxDQUFlLEtBQWYsQ0FBbEI7QUFDQSwyREFBUSxLQUFSLENBQWMsT0FBZCxDQUFzQixJQUF0QixFQUE0QixTQUE1QjtBQUNEOztBQUVNLFNBQVMsUUFBVCxDQUFrQixJQUFsQixFQUEyQztBQUFBLE1BQW5CLFlBQW1CLHlEQUFKLEVBQUk7O0FBQ2hELE1BQU0sUUFBUSx5REFBUSxLQUFSLENBQWMsT0FBZCxDQUFzQixJQUF0QixDQUFkO0FBQ0EsTUFBSSxDQUFDLEtBQUwsRUFBWTtBQUNWLFdBQU8sWUFBUDtBQUNEO0FBQ0QsU0FBTyxLQUFLLEtBQUwsQ0FBVyxLQUFYLENBQVA7QUFDRDs7QUFFTSxTQUFTLFVBQVQsR0FBc0I7QUFDM0IsMkRBQVEsS0FBUixDQUFjLEtBQWQ7QUFDRCIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZ3MgZnJvbSBcIi4vY29uZmlnXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRIaXN0b3J5RWxlbXMoKSB7XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI2NvbW1hbmRfaGlzdG9yeSA+IGRpdltkYXRhLXR5cGU9J2FjY2VwdCddLCAjY29tbWFuZF9oaXN0b3J5ID4gZGl2W2RhdGEtdHlwZT0naW5pdGlhbCddXCIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZW1vamlvbmUobnVtKSB7XG4gIGNvbnN0IGVtb2ppb25lTGlzdCA9IHtcbiAgICBcIjpzY3JlYW06XCI6IFtcIjFmNjMxXCJdLFxuICAgIFwiOmFzdG9uaXNoZWQ6XCI6IFtcIjFmNjMyXCJdLFxuICAgIFwiOmNvbmZ1c2VkOlwiOiBbXCIxZjYxNVwiXSxcbiAgICBcIjpyb2xsaW5nX2V5ZXM6XCI6IFtcIjFmNjQ0XCJdLFxuICAgIFwiOnJlbGlldmVkOlwiOiBbXCIxZjYwY1wiXSxcbiAgICBcIjpyZWxheGVkOlwiOiBbXCIyNjNhXCJdLFxuICAgIFwiOm5ldXRyYWxfZmFjZTpcIjogW1wiMWY2MTBcIl0sXG4gICAgXCI6c2xpZ2h0X3NtaWxlOlwiOiBbXCIxZjY0MlwiXSxcbiAgICBcIjpzbWlsZXk6XCI6IFtcIjFmNjAzXCJdLFxuICAgIFwiOmdyaW5uaW5nOlwiOiBbXCIxZjYwMFwiXSxcbiAgfTtcblxuICBjb25zdCBudW1Ub1Nob3J0ID0ge1xuICAgIDY6IFwiOnNjcmVhbTpcIixcbiAgICA1OiBcIjphc3RvbmlzaGVkOlwiLFxuICAgIDQ6IFwiOmNvbmZ1c2VkOlwiLFxuICAgIDM6IFwiOnJvbGxpbmdfZXllczpcIixcbiAgICAyOiBcIjpyZWxpZXZlZDpcIixcbiAgICAxOiBcIjpyZWxheGVkOlwiLFxuICAgIDA6IFwiOnNtaWxleTpcIixcbiAgfTtcblxuICBjb25zdCBpbWFnZVBhdGhQTkcgPSBcImh0dHA6XFwvXFwvY2RuLmpzZGVsaXZyLm5ldFxcL2Vtb2ppb25lXFwvYXNzZXRzXFwvcG5nXFwvXCI7XG4gIGNvbnN0IGltYWdlUGF0aFNWRyA9IFwiaHR0cDpcXC9cXC9jZG4uanNkZWxpdnIubmV0XFwvZW1vamlvbmVcXC9hc3NldHNcXC9zdmdcXC9cIjtcbiAgY29uc3QgY2FjaGVCdXN0UGFyYW0gPSBcIlwiO1xuICBjb25zdCBpbWFnZVR5cGUgPSBcInBuZ1wiOyAvLyBwbmcgb3Igc3ZnXG5cbiAgY29uc3Qgc2hvcnRuYW1lID0gbnVtVG9TaG9ydFtudW1dO1xuICBjb25zdCB1bmljb2RlID0gZW1vamlvbmVMaXN0W3Nob3J0bmFtZV1bZW1vamlvbmVMaXN0W3Nob3J0bmFtZV0ubGVuZ3RoIC0gMV07XG4gIGNvbnN0IGFsdCA9IHNob3J0bmFtZTtcblxuICBsZXQgcmVwbGFjZVdpdGggPSBcIlwiO1xuICBpZiAoaW1hZ2VUeXBlID09PSBcInBuZ1wiKSB7XG4gICAgcmVwbGFjZVdpdGggPSBgPGltZyBjbGFzcz1cImVtb2ppb25lXCIgYWx0PVwiJHthbHR9XCIgc3JjPVwiJHtpbWFnZVBhdGhQTkd9JHt1bmljb2RlfS5wbmdcIiAvPmA7XG4gIH0gZWxzZSB7XG4gICAgcmVwbGFjZVdpdGggPSBgPG9iamVjdCBjbGFzcz1cImVtb2ppb25lXCIgZGF0YT1cIiR7aW1hZ2VQYXRoU1ZHfSR7dW5pY29kZX0uc3ZnXCIgdHlwZT1cImltYWdlL3N2Zyt4bWxcIiBzdGFuZGJ5PVwiJHthbHR9XCI+JHthbHR9PC9vYmplY3RgO1xuICB9XG5cbiAgcmV0dXJuIHJlcGxhY2VXaXRoO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0U3RvcmUobmFtZSwgdmFsdWUpIHtcbiAgY29uc3QganNvblZhbHVlID0gSlNPTi5zdHJpbmdpZnkodmFsdWUpO1xuICBjb25maWdzLnN0b3JlLnNldEl0ZW0obmFtZSwganNvblZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0b3JlKG5hbWUsIGRlZmF1bHRWYWx1ZSA9IFwiXCIpIHtcbiAgY29uc3QgdmFsdWUgPSBjb25maWdzLnN0b3JlLmdldEl0ZW0obmFtZSk7XG4gIGlmICghdmFsdWUpIHtcbiAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICB9XG4gIHJldHVybiBKU09OLnBhcnNlKHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0U3RvcmUoKSB7XG4gIGNvbmZpZ3Muc3RvcmUuY2xlYXIoKTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9qcy91dGlsLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports){eval("function Point(x, y, z) {\n  if (this instanceof Point) {\n    this.x = (typeof x === 'number') ? x : 0;\n    this.y = (typeof y === 'number') ? y : 0;\n    this.z = (typeof z === 'number') ? z : 0;\n  } else {\n    return new Point(x, y, z);\n  }\n}\n\n\nPoint.ORIGIN = new Point(0, 0, 0);\n\n\n/**\n * Translate a point from a given dx, dy, and dz\n */\nPoint.prototype.translate = function(dx, dy, dz) {\n\n  dx = (typeof dx === 'number') ? dx : 0;\n  dy = (typeof dy === 'number') ? dy : 0;\n  dz = (typeof dz === 'number') ? dz : 0;\n\n  return new Point(\n    this.x + dx,\n    this.y + dy,\n    this.z + dz);\n};\n\n\n/**\n * Scale a point about a given origin\n */\nPoint.prototype.scale = function(origin, dx, dy, dz) {\n  var p = this.translate(-origin.x, -origin.y, -origin.z);\n\n  if (dy === undefined && dz === undefined) {\n    /* If both dy and dz are left out, scale all coordinates equally */\n    dy = dz = dx;\n    /* If just dz is missing, set it equal to 1 */\n  } else {\n    dz = (typeof dz === 'number') ? dz : 1;\n  }\n\n  p.x *= dx;\n  p.y *= dy;\n  p.z *= dz;\n\n  return p.translate(origin.x, origin.y, origin.z);\n};\n\n/**\n * Rotate about origin on the X axis\n */\nPoint.prototype.rotateX = function(origin, angle) {\n  var p = this.translate(-origin.x, -origin.y, -origin.z);\n\n  var z = p.z * Math.cos(angle) - p.y * Math.sin(angle);\n  var y = p.z * Math.sin(angle) + p.y * Math.cos(angle);\n  p.z = z;\n  p.y = y;\n\n  return p.translate(origin.x, origin.y, origin.z);\n};\n\n/**\n * Rotate about origin on the Y axis\n */\nPoint.prototype.rotateY = function(origin, angle) {\n  var p = this.translate(-origin.x, -origin.y, -origin.z);\n\n  var x = p.x * Math.cos(angle) - p.z * Math.sin(angle);\n  var z = p.x * Math.sin(angle) + p.z * Math.cos(angle);\n  p.x = x;\n  p.z = z;\n\n  return p.translate(origin.x, origin.y, origin.z);\n};\n\n/**\n * Rotate about origin on the Z axis\n */\nPoint.prototype.rotateZ = function(origin, angle) {\n  var p = this.translate(-origin.x, -origin.y, -origin.z);\n\n  var x = p.x * Math.cos(angle) - p.y * Math.sin(angle);\n  var y = p.x * Math.sin(angle) + p.y * Math.cos(angle);\n  p.x = x;\n  p.y = y;\n\n  return p.translate(origin.x, origin.y, origin.z);\n};\n\n\n/**\n * The depth of a point in the isometric plane\n */\nPoint.prototype.depth = function() {\n  /* z is weighted slightly to accomodate |_ arrangements */\n  return this.x + this.y - 2 * this.z;\n};\n\n\n/**\n * Distance between two points\n */\nPoint.distance = function(p1, p2) {\n  var dx = p2.x - p1.x;\n  var dy = p2.y - p1.y;\n  var dz = p2.z - p1.z;\n\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n};\n\n\nmodule.exports = Point;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lzb21lci9qcy9wb2ludC5qcz9iNDMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOzs7QUFHQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7OztBQUdBIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBQb2ludCh4LCB5LCB6KSB7XG4gIGlmICh0aGlzIGluc3RhbmNlb2YgUG9pbnQpIHtcbiAgICB0aGlzLnggPSAodHlwZW9mIHggPT09ICdudW1iZXInKSA/IHggOiAwO1xuICAgIHRoaXMueSA9ICh0eXBlb2YgeSA9PT0gJ251bWJlcicpID8geSA6IDA7XG4gICAgdGhpcy56ID0gKHR5cGVvZiB6ID09PSAnbnVtYmVyJykgPyB6IDogMDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbmV3IFBvaW50KHgsIHksIHopO1xuICB9XG59XG5cblxuUG9pbnQuT1JJR0lOID0gbmV3IFBvaW50KDAsIDAsIDApO1xuXG5cbi8qKlxuICogVHJhbnNsYXRlIGEgcG9pbnQgZnJvbSBhIGdpdmVuIGR4LCBkeSwgYW5kIGR6XG4gKi9cblBvaW50LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbihkeCwgZHksIGR6KSB7XG5cbiAgZHggPSAodHlwZW9mIGR4ID09PSAnbnVtYmVyJykgPyBkeCA6IDA7XG4gIGR5ID0gKHR5cGVvZiBkeSA9PT0gJ251bWJlcicpID8gZHkgOiAwO1xuICBkeiA9ICh0eXBlb2YgZHogPT09ICdudW1iZXInKSA/IGR6IDogMDtcblxuICByZXR1cm4gbmV3IFBvaW50KFxuICAgIHRoaXMueCArIGR4LFxuICAgIHRoaXMueSArIGR5LFxuICAgIHRoaXMueiArIGR6KTtcbn07XG5cblxuLyoqXG4gKiBTY2FsZSBhIHBvaW50IGFib3V0IGEgZ2l2ZW4gb3JpZ2luXG4gKi9cblBvaW50LnByb3RvdHlwZS5zY2FsZSA9IGZ1bmN0aW9uKG9yaWdpbiwgZHgsIGR5LCBkeikge1xuICB2YXIgcCA9IHRoaXMudHJhbnNsYXRlKC1vcmlnaW4ueCwgLW9yaWdpbi55LCAtb3JpZ2luLnopO1xuXG4gIGlmIChkeSA9PT0gdW5kZWZpbmVkICYmIGR6ID09PSB1bmRlZmluZWQpIHtcbiAgICAvKiBJZiBib3RoIGR5IGFuZCBkeiBhcmUgbGVmdCBvdXQsIHNjYWxlIGFsbCBjb29yZGluYXRlcyBlcXVhbGx5ICovXG4gICAgZHkgPSBkeiA9IGR4O1xuICAgIC8qIElmIGp1c3QgZHogaXMgbWlzc2luZywgc2V0IGl0IGVxdWFsIHRvIDEgKi9cbiAgfSBlbHNlIHtcbiAgICBkeiA9ICh0eXBlb2YgZHogPT09ICdudW1iZXInKSA/IGR6IDogMTtcbiAgfVxuXG4gIHAueCAqPSBkeDtcbiAgcC55ICo9IGR5O1xuICBwLnogKj0gZHo7XG5cbiAgcmV0dXJuIHAudHJhbnNsYXRlKG9yaWdpbi54LCBvcmlnaW4ueSwgb3JpZ2luLnopO1xufTtcblxuLyoqXG4gKiBSb3RhdGUgYWJvdXQgb3JpZ2luIG9uIHRoZSBYIGF4aXNcbiAqL1xuUG9pbnQucHJvdG90eXBlLnJvdGF0ZVggPSBmdW5jdGlvbihvcmlnaW4sIGFuZ2xlKSB7XG4gIHZhciBwID0gdGhpcy50cmFuc2xhdGUoLW9yaWdpbi54LCAtb3JpZ2luLnksIC1vcmlnaW4ueik7XG5cbiAgdmFyIHogPSBwLnogKiBNYXRoLmNvcyhhbmdsZSkgLSBwLnkgKiBNYXRoLnNpbihhbmdsZSk7XG4gIHZhciB5ID0gcC56ICogTWF0aC5zaW4oYW5nbGUpICsgcC55ICogTWF0aC5jb3MoYW5nbGUpO1xuICBwLnogPSB6O1xuICBwLnkgPSB5O1xuXG4gIHJldHVybiBwLnRyYW5zbGF0ZShvcmlnaW4ueCwgb3JpZ2luLnksIG9yaWdpbi56KTtcbn07XG5cbi8qKlxuICogUm90YXRlIGFib3V0IG9yaWdpbiBvbiB0aGUgWSBheGlzXG4gKi9cblBvaW50LnByb3RvdHlwZS5yb3RhdGVZID0gZnVuY3Rpb24ob3JpZ2luLCBhbmdsZSkge1xuICB2YXIgcCA9IHRoaXMudHJhbnNsYXRlKC1vcmlnaW4ueCwgLW9yaWdpbi55LCAtb3JpZ2luLnopO1xuXG4gIHZhciB4ID0gcC54ICogTWF0aC5jb3MoYW5nbGUpIC0gcC56ICogTWF0aC5zaW4oYW5nbGUpO1xuICB2YXIgeiA9IHAueCAqIE1hdGguc2luKGFuZ2xlKSArIHAueiAqIE1hdGguY29zKGFuZ2xlKTtcbiAgcC54ID0geDtcbiAgcC56ID0gejtcblxuICByZXR1cm4gcC50cmFuc2xhdGUob3JpZ2luLngsIG9yaWdpbi55LCBvcmlnaW4ueik7XG59O1xuXG4vKipcbiAqIFJvdGF0ZSBhYm91dCBvcmlnaW4gb24gdGhlIFogYXhpc1xuICovXG5Qb2ludC5wcm90b3R5cGUucm90YXRlWiA9IGZ1bmN0aW9uKG9yaWdpbiwgYW5nbGUpIHtcbiAgdmFyIHAgPSB0aGlzLnRyYW5zbGF0ZSgtb3JpZ2luLngsIC1vcmlnaW4ueSwgLW9yaWdpbi56KTtcblxuICB2YXIgeCA9IHAueCAqIE1hdGguY29zKGFuZ2xlKSAtIHAueSAqIE1hdGguc2luKGFuZ2xlKTtcbiAgdmFyIHkgPSBwLnggKiBNYXRoLnNpbihhbmdsZSkgKyBwLnkgKiBNYXRoLmNvcyhhbmdsZSk7XG4gIHAueCA9IHg7XG4gIHAueSA9IHk7XG5cbiAgcmV0dXJuIHAudHJhbnNsYXRlKG9yaWdpbi54LCBvcmlnaW4ueSwgb3JpZ2luLnopO1xufTtcblxuXG4vKipcbiAqIFRoZSBkZXB0aCBvZiBhIHBvaW50IGluIHRoZSBpc29tZXRyaWMgcGxhbmVcbiAqL1xuUG9pbnQucHJvdG90eXBlLmRlcHRoID0gZnVuY3Rpb24oKSB7XG4gIC8qIHogaXMgd2VpZ2h0ZWQgc2xpZ2h0bHkgdG8gYWNjb21vZGF0ZSB8XyBhcnJhbmdlbWVudHMgKi9cbiAgcmV0dXJuIHRoaXMueCArIHRoaXMueSAtIDIgKiB0aGlzLno7XG59O1xuXG5cbi8qKlxuICogRGlzdGFuY2UgYmV0d2VlbiB0d28gcG9pbnRzXG4gKi9cblBvaW50LmRpc3RhbmNlID0gZnVuY3Rpb24ocDEsIHAyKSB7XG4gIHZhciBkeCA9IHAyLnggLSBwMS54O1xuICB2YXIgZHkgPSBwMi55IC0gcDEueTtcbiAgdmFyIGR6ID0gcDIueiAtIHAxLno7XG5cbiAgcmV0dXJuIE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSArIGR6ICogZHopO1xufTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IFBvaW50O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lzb21lci9qcy9wb2ludC5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("var Point = __webpack_require__(2);\n\n/**\n * Path utility class\n *\n * An Isomer.Path consists of a list of Isomer.Point's\n */\nfunction Path(points) {\n  if (Object.prototype.toString.call(points) === '[object Array]') {\n    this.points = points;\n  } else {\n    this.points = Array.prototype.slice.call(arguments);\n  }\n}\n\n\n/**\n * Pushes a point onto the end of the path\n */\nPath.prototype.push = function(point) {\n  this.points.push(point);\n};\n\n\n/**\n * Returns a new path with the points in reverse order\n */\nPath.prototype.reverse = function() {\n  var points = Array.prototype.slice.call(this.points);\n\n  return new Path(points.reverse());\n};\n\n\n/**\n * Translates a given path\n *\n * Simply a forward to Point#translate\n */\nPath.prototype.translate = function() {\n  var args = arguments;\n\n  return new Path(this.points.map(function(point) {\n    return point.translate.apply(point, args);\n  }));\n};\n\n/**\n * Returns a new path rotated along the X axis by a given origin\n *\n * Simply a forward to Point#rotateX\n */\nPath.prototype.rotateX = function() {\n  var args = arguments;\n\n  return new Path(this.points.map(function(point) {\n    return point.rotateX.apply(point, args);\n  }));\n};\n\n/**\n * Returns a new path rotated along the Y axis by a given origin\n *\n * Simply a forward to Point#rotateY\n */\nPath.prototype.rotateY = function() {\n  var args = arguments;\n\n  return new Path(this.points.map(function(point) {\n    return point.rotateY.apply(point, args);\n  }));\n};\n\n/**\n * Returns a new path rotated along the Z axis by a given origin\n *\n * Simply a forward to Point#rotateZ\n */\nPath.prototype.rotateZ = function() {\n  var args = arguments;\n\n  return new Path(this.points.map(function(point) {\n    return point.rotateZ.apply(point, args);\n  }));\n};\n\n\n/**\n * Scales a path about a given origin\n *\n * Simply a forward to Point#scale\n */\nPath.prototype.scale = function() {\n  var args = arguments;\n\n  return new Path(this.points.map(function(point) {\n    return point.scale.apply(point, args);\n  }));\n};\n\n\n/**\n * The estimated depth of a path as defined by the average depth\n * of its points\n */\nPath.prototype.depth = function() {\n  var i, total = 0;\n  for (i = 0; i < this.points.length; i++) {\n    total += this.points[i].depth();\n  }\n\n  return total / (this.points.length || 1);\n};\n\n\n/**\n * Some paths to play with\n */\n\n/**\n * A rectangle with the bottom-left corner in the origin\n */\nPath.Rectangle = function(origin, width, height) {\n  if (width === undefined) width = 1;\n  if (height === undefined) height = 1;\n\n  var path = new Path([\n    origin,\n    new Point(origin.x + width, origin.y, origin.z),\n    new Point(origin.x + width, origin.y + height, origin.z),\n    new Point(origin.x, origin.y + height, origin.z)\n  ]);\n\n  return path;\n};\n\n\n/**\n * A circle centered at origin with a given radius and number of vertices\n */\nPath.Circle = function(origin, radius, vertices) {\n  vertices = vertices || 20;\n  var i, path = new Path();\n\n  for (i = 0; i < vertices; i++) {\n    path.push(new Point(\n      radius * Math.cos(i * 2 * Math.PI / vertices),\n      radius * Math.sin(i * 2 * Math.PI / vertices),\n      0));\n  }\n\n  return path.translate(origin.x, origin.y, origin.z);\n};\n\n\n/**\n * A star centered at origin with a given outer radius, inner\n * radius, and number of points\n *\n * Buggy - concave polygons are difficult to draw with our method\n */\nPath.Star = function(origin, outerRadius, innerRadius, points) {\n  var i, r, path = new Path();\n\n  for (i = 0; i < points * 2; i++) {\n    r = (i % 2 === 0) ? outerRadius : innerRadius;\n\n    path.push(new Point(\n      r * Math.cos(i * Math.PI / points),\n      r * Math.sin(i * Math.PI / points),\n      0));\n  }\n\n  return path.translate(origin.x, origin.y, origin.z);\n};\n\n\n/* Expose the Path constructor */\nmodule.exports = Path;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lzb21lci9qcy9wYXRoLmpzPzk3YWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQztBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsZ0JBQWdCO0FBQzdCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQSIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFBvaW50ID0gcmVxdWlyZSgnLi9wb2ludCcpO1xuXG4vKipcbiAqIFBhdGggdXRpbGl0eSBjbGFzc1xuICpcbiAqIEFuIElzb21lci5QYXRoIGNvbnNpc3RzIG9mIGEgbGlzdCBvZiBJc29tZXIuUG9pbnQnc1xuICovXG5mdW5jdGlvbiBQYXRoKHBvaW50cykge1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHBvaW50cykgPT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICB0aGlzLnBvaW50cyA9IHBvaW50cztcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnBvaW50cyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG4gIH1cbn1cblxuXG4vKipcbiAqIFB1c2hlcyBhIHBvaW50IG9udG8gdGhlIGVuZCBvZiB0aGUgcGF0aFxuICovXG5QYXRoLnByb3RvdHlwZS5wdXNoID0gZnVuY3Rpb24ocG9pbnQpIHtcbiAgdGhpcy5wb2ludHMucHVzaChwb2ludCk7XG59O1xuXG5cbi8qKlxuICogUmV0dXJucyBhIG5ldyBwYXRoIHdpdGggdGhlIHBvaW50cyBpbiByZXZlcnNlIG9yZGVyXG4gKi9cblBhdGgucHJvdG90eXBlLnJldmVyc2UgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHBvaW50cyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMucG9pbnRzKTtcblxuICByZXR1cm4gbmV3IFBhdGgocG9pbnRzLnJldmVyc2UoKSk7XG59O1xuXG5cbi8qKlxuICogVHJhbnNsYXRlcyBhIGdpdmVuIHBhdGhcbiAqXG4gKiBTaW1wbHkgYSBmb3J3YXJkIHRvIFBvaW50I3RyYW5zbGF0ZVxuICovXG5QYXRoLnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG5cbiAgcmV0dXJuIG5ldyBQYXRoKHRoaXMucG9pbnRzLm1hcChmdW5jdGlvbihwb2ludCkge1xuICAgIHJldHVybiBwb2ludC50cmFuc2xhdGUuYXBwbHkocG9pbnQsIGFyZ3MpO1xuICB9KSk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgYSBuZXcgcGF0aCByb3RhdGVkIGFsb25nIHRoZSBYIGF4aXMgYnkgYSBnaXZlbiBvcmlnaW5cbiAqXG4gKiBTaW1wbHkgYSBmb3J3YXJkIHRvIFBvaW50I3JvdGF0ZVhcbiAqL1xuUGF0aC5wcm90b3R5cGUucm90YXRlWCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgYXJncyA9IGFyZ3VtZW50cztcblxuICByZXR1cm4gbmV3IFBhdGgodGhpcy5wb2ludHMubWFwKGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgcmV0dXJuIHBvaW50LnJvdGF0ZVguYXBwbHkocG9pbnQsIGFyZ3MpO1xuICB9KSk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgYSBuZXcgcGF0aCByb3RhdGVkIGFsb25nIHRoZSBZIGF4aXMgYnkgYSBnaXZlbiBvcmlnaW5cbiAqXG4gKiBTaW1wbHkgYSBmb3J3YXJkIHRvIFBvaW50I3JvdGF0ZVlcbiAqL1xuUGF0aC5wcm90b3R5cGUucm90YXRlWSA9IGZ1bmN0aW9uKCkge1xuICB2YXIgYXJncyA9IGFyZ3VtZW50cztcblxuICByZXR1cm4gbmV3IFBhdGgodGhpcy5wb2ludHMubWFwKGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgcmV0dXJuIHBvaW50LnJvdGF0ZVkuYXBwbHkocG9pbnQsIGFyZ3MpO1xuICB9KSk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgYSBuZXcgcGF0aCByb3RhdGVkIGFsb25nIHRoZSBaIGF4aXMgYnkgYSBnaXZlbiBvcmlnaW5cbiAqXG4gKiBTaW1wbHkgYSBmb3J3YXJkIHRvIFBvaW50I3JvdGF0ZVpcbiAqL1xuUGF0aC5wcm90b3R5cGUucm90YXRlWiA9IGZ1bmN0aW9uKCkge1xuICB2YXIgYXJncyA9IGFyZ3VtZW50cztcblxuICByZXR1cm4gbmV3IFBhdGgodGhpcy5wb2ludHMubWFwKGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgcmV0dXJuIHBvaW50LnJvdGF0ZVouYXBwbHkocG9pbnQsIGFyZ3MpO1xuICB9KSk7XG59O1xuXG5cbi8qKlxuICogU2NhbGVzIGEgcGF0aCBhYm91dCBhIGdpdmVuIG9yaWdpblxuICpcbiAqIFNpbXBseSBhIGZvcndhcmQgdG8gUG9pbnQjc2NhbGVcbiAqL1xuUGF0aC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG5cbiAgcmV0dXJuIG5ldyBQYXRoKHRoaXMucG9pbnRzLm1hcChmdW5jdGlvbihwb2ludCkge1xuICAgIHJldHVybiBwb2ludC5zY2FsZS5hcHBseShwb2ludCwgYXJncyk7XG4gIH0pKTtcbn07XG5cblxuLyoqXG4gKiBUaGUgZXN0aW1hdGVkIGRlcHRoIG9mIGEgcGF0aCBhcyBkZWZpbmVkIGJ5IHRoZSBhdmVyYWdlIGRlcHRoXG4gKiBvZiBpdHMgcG9pbnRzXG4gKi9cblBhdGgucHJvdG90eXBlLmRlcHRoID0gZnVuY3Rpb24oKSB7XG4gIHZhciBpLCB0b3RhbCA9IDA7XG4gIGZvciAoaSA9IDA7IGkgPCB0aGlzLnBvaW50cy5sZW5ndGg7IGkrKykge1xuICAgIHRvdGFsICs9IHRoaXMucG9pbnRzW2ldLmRlcHRoKCk7XG4gIH1cblxuICByZXR1cm4gdG90YWwgLyAodGhpcy5wb2ludHMubGVuZ3RoIHx8IDEpO1xufTtcblxuXG4vKipcbiAqIFNvbWUgcGF0aHMgdG8gcGxheSB3aXRoXG4gKi9cblxuLyoqXG4gKiBBIHJlY3RhbmdsZSB3aXRoIHRoZSBib3R0b20tbGVmdCBjb3JuZXIgaW4gdGhlIG9yaWdpblxuICovXG5QYXRoLlJlY3RhbmdsZSA9IGZ1bmN0aW9uKG9yaWdpbiwgd2lkdGgsIGhlaWdodCkge1xuICBpZiAod2lkdGggPT09IHVuZGVmaW5lZCkgd2lkdGggPSAxO1xuICBpZiAoaGVpZ2h0ID09PSB1bmRlZmluZWQpIGhlaWdodCA9IDE7XG5cbiAgdmFyIHBhdGggPSBuZXcgUGF0aChbXG4gICAgb3JpZ2luLFxuICAgIG5ldyBQb2ludChvcmlnaW4ueCArIHdpZHRoLCBvcmlnaW4ueSwgb3JpZ2luLnopLFxuICAgIG5ldyBQb2ludChvcmlnaW4ueCArIHdpZHRoLCBvcmlnaW4ueSArIGhlaWdodCwgb3JpZ2luLnopLFxuICAgIG5ldyBQb2ludChvcmlnaW4ueCwgb3JpZ2luLnkgKyBoZWlnaHQsIG9yaWdpbi56KVxuICBdKTtcblxuICByZXR1cm4gcGF0aDtcbn07XG5cblxuLyoqXG4gKiBBIGNpcmNsZSBjZW50ZXJlZCBhdCBvcmlnaW4gd2l0aCBhIGdpdmVuIHJhZGl1cyBhbmQgbnVtYmVyIG9mIHZlcnRpY2VzXG4gKi9cblBhdGguQ2lyY2xlID0gZnVuY3Rpb24ob3JpZ2luLCByYWRpdXMsIHZlcnRpY2VzKSB7XG4gIHZlcnRpY2VzID0gdmVydGljZXMgfHwgMjA7XG4gIHZhciBpLCBwYXRoID0gbmV3IFBhdGgoKTtcblxuICBmb3IgKGkgPSAwOyBpIDwgdmVydGljZXM7IGkrKykge1xuICAgIHBhdGgucHVzaChuZXcgUG9pbnQoXG4gICAgICByYWRpdXMgKiBNYXRoLmNvcyhpICogMiAqIE1hdGguUEkgLyB2ZXJ0aWNlcyksXG4gICAgICByYWRpdXMgKiBNYXRoLnNpbihpICogMiAqIE1hdGguUEkgLyB2ZXJ0aWNlcyksXG4gICAgICAwKSk7XG4gIH1cblxuICByZXR1cm4gcGF0aC50cmFuc2xhdGUob3JpZ2luLngsIG9yaWdpbi55LCBvcmlnaW4ueik7XG59O1xuXG5cbi8qKlxuICogQSBzdGFyIGNlbnRlcmVkIGF0IG9yaWdpbiB3aXRoIGEgZ2l2ZW4gb3V0ZXIgcmFkaXVzLCBpbm5lclxuICogcmFkaXVzLCBhbmQgbnVtYmVyIG9mIHBvaW50c1xuICpcbiAqIEJ1Z2d5IC0gY29uY2F2ZSBwb2x5Z29ucyBhcmUgZGlmZmljdWx0IHRvIGRyYXcgd2l0aCBvdXIgbWV0aG9kXG4gKi9cblBhdGguU3RhciA9IGZ1bmN0aW9uKG9yaWdpbiwgb3V0ZXJSYWRpdXMsIGlubmVyUmFkaXVzLCBwb2ludHMpIHtcbiAgdmFyIGksIHIsIHBhdGggPSBuZXcgUGF0aCgpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBwb2ludHMgKiAyOyBpKyspIHtcbiAgICByID0gKGkgJSAyID09PSAwKSA/IG91dGVyUmFkaXVzIDogaW5uZXJSYWRpdXM7XG5cbiAgICBwYXRoLnB1c2gobmV3IFBvaW50KFxuICAgICAgciAqIE1hdGguY29zKGkgKiBNYXRoLlBJIC8gcG9pbnRzKSxcbiAgICAgIHIgKiBNYXRoLnNpbihpICogTWF0aC5QSSAvIHBvaW50cyksXG4gICAgICAwKSk7XG4gIH1cblxuICByZXR1cm4gcGF0aC50cmFuc2xhdGUob3JpZ2luLngsIG9yaWdpbi55LCBvcmlnaW4ueik7XG59O1xuXG5cbi8qIEV4cG9zZSB0aGUgUGF0aCBjb25zdHJ1Y3RvciAqL1xubW9kdWxlLmV4cG9ydHMgPSBQYXRoO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lzb21lci9qcy9wYXRoLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){"use strict";eval('/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_awesomplete__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_awesomplete___default = __WEBPACK_IMPORTED_MODULE_0_awesomplete__ && __WEBPACK_IMPORTED_MODULE_0_awesomplete__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_awesomplete__[\'default\'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_awesomplete__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_0_awesomplete___default, \'a\', __WEBPACK_IMPORTED_MODULE_0_awesomplete___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__setting__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sempre__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util__ = __webpack_require__(1);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n\n\n\n\n\n\n\nvar App = function () {\n  function App() {\n    _classCallCheck(this, App);\n\n    this.Sempre = new __WEBPACK_IMPORTED_MODULE_4__sempre__["a" /* default */]();\n    this.Setting = new __WEBPACK_IMPORTED_MODULE_3__setting__["a" /* default */]();\n    this.Game = new __WEBPACK_IMPORTED_MODULE_1__game__["a" /* default */](this.Setting, this.Sempre);\n    this.consoleElem = document.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].consoleElemId);\n    this.defineElem = document.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].defineElemId);\n    this.defineState = false;\n    this.activeHistoryElem = -1;\n    this.awesomplete = {};\n    this.helpOn = false;\n    this.keyboardOn = false;\n    this.watchOutForDefine = false;\n\n    this.updateRandomUtterances();\n\n    this.generateTarget();\n\n    this.consoleElem.focus();\n  }\n\n  _createClass(App, [{\n    key: "generateTarget",\n    value: function generateTarget() {\n      /* Generate Target at Random */\n      this.Game.setTarget(this.Game.getRandomTarget());\n      this.setupAutocomplete();\n    }\n  }, {\n    key: "enter",\n    value: function enter() {\n      if (this.defineState) {\n        // TODO: Validate define length!\n        var defined = this.Game.define(this.defineElem.value);\n        if (defined) {\n          this.defineState = false;\n          this.defineElem.value = "";\n          this.Setting.closeDefineInterface();\n          this.consoleElem.value = defined;\n          this.consoleElem.focus();\n        }\n\n        this.watchOutForDefine = true;\n        return;\n      }\n\n      if (this.activeHistoryElem > 0) {\n        var historyElems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["d" /* getHistoryElems */])();\n        this.Game.history = this.Game.history.slice(0, historyElems.length - this.activeHistoryElem);\n        this.activeHistoryElem = -1;\n      }\n\n      this.Game.enter(this.consoleElem.value);\n\n      this.updateRandomUtterances();\n    }\n  }, {\n    key: "accept",\n    value: function accept() {\n      this.Game.accept();\n      this.consoleElem.value = "";\n      this.consoleElem.focus();\n      this.updateRandomUtterances();\n    }\n  }, {\n    key: "clear",\n    value: function clear() {\n      this.Game.clear();\n      this.consoleElem.focus();\n      this.updateRandomUtterances();\n    }\n  }, {\n    key: "next",\n    value: function next() {\n      this.Game.next();\n    }\n  }, {\n    key: "prev",\n    value: function prev() {\n      this.Game.prev();\n    }\n  }, {\n    key: "openDefineInterface",\n    value: function openDefineInterface() {\n      if (this.Setting.openDefineInterface(this.Game.query, this.Game.responses.length > 0, this.Game.taggedCover)) {\n        this.defineState = true;\n      }\n    }\n  }, {\n    key: "closeDefineInterface",\n    value: function closeDefineInterface() {\n      this.Setting.closeDefineInterface();\n      this.Game.defineSuccess = "";\n      this.defineState = false;\n    }\n  }, {\n    key: "toggleDefineInterface",\n    value: function toggleDefineInterface() {\n      if (this.defineState) {\n        this.closeDefineInterface();\n      } else {\n        this.openDefineInterface();\n      }\n    }\n  }, {\n    key: "undo",\n    value: function undo() {\n      var historyElems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["d" /* getHistoryElems */])();\n      if (this.activeHistoryElem === historyElems.length - 1) {\n        return;\n      } else if (this.activeHistoryElem >= 0) {\n        this.revert(this.activeHistoryElem + 1);\n      } else if (historyElems.length > 1) {\n        this.revert(1);\n      }\n    }\n  }, {\n    key: "redo",\n    value: function redo() {\n      if (this.activeHistoryElem === 0) {\n        return;\n      } else if (this.activeHistoryElem > 0) {\n        this.revert(this.activeHistoryElem - 1);\n      }\n    }\n  }, {\n    key: "revert",\n    value: function revert(index) {\n      this.Game = this.Setting.revertHistory(index, this.Game);\n      this.activeHistoryElem = index;\n    }\n  }, {\n    key: "setupAutocomplete",\n    value: function setupAutocomplete() {\n      this.defineElem.addEventListener("input", this.onautocomplete.bind(this), false);\n      this.defineElem.addEventListener("focus", this.onautocomplete.bind(this), false);\n\n      this.awesomplete = new __WEBPACK_IMPORTED_MODULE_0_awesomplete___default.a(this.defineElem, { minChars: 0,\n        list: ["remove if top red", "add yellow", "add brown if has red or row = 3", "add yellow if row = 3", "repeat add yellow 3 times"],\n        filter: function filter() {\n          return true;\n        }\n      });\n    }\n  }, {\n    key: "onautocomplete",\n    value: function onautocomplete(e) {\n      if (this.defineElem.value.endsWith(" ")) {\n        this.autocomplete(this.defineElem.value);\n      } else if (this.defineElem.value.length === 0) {\n        this.autocomplete("");\n      }\n      e.stopPropagation();\n    }\n  }, {\n    key: "autocomplete",\n    value: function autocomplete(prefix) {\n      var _this = this;\n\n      var cmdautocomp = "(autocomplete \\"" + prefix + "\\")";\n      var cmds = { q: cmdautocomp, sessionId: this.Game.sessionId };\n\n      this.Sempre.query(cmds, function (response) {\n        var autocomps = response.autocompletes;\n        _this.awesomplete.list = autocomps;\n        _this.awesomplete.open();\n        _this.awesomplete.evaluate();\n      });\n    }\n  }, {\n    key: "skip",\n    value: function skip() {\n      this.Game.skipTarget();\n      this.updateRandomUtterances();\n    }\n  }, {\n    key: "updateRandomUtterances",\n    value: function updateRandomUtterances() {\n      this.Sempre.query({ q: "(autocomplete \\"\\")", sessionId: this.Game.sessionId }, function (resp) {\n        var autocompletes = resp.autocompletes;\n        // let randomStrings = "";\n        // for (const ac of autocompletes) {\n        //   randomStrings += `<span>${ac}</span><br>`;\n        // }\n        var randomStrings = "<span>" + autocompletes[0] + "</span>";\n        document.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].randomElemId).innerHTML = randomStrings;\n      });\n    }\n  }, {\n    key: "resetAllProgress",\n    value: function resetAllProgress() {\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["e" /* resetStore */])();\n      window.location.reload();\n    }\n  }, {\n    key: "toggleHelp",\n    value: function toggleHelp() {\n      this.helpOn = !this.helpOn;\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].elems.helpMe).classList.toggle("active");\n    }\n  }, {\n    key: "toggleKeyboard",\n    value: function toggleKeyboard() {\n      this.keyboardOn = !this.keyboardOn;\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].elems.keyboard).classList.toggle("active");\n    }\n  }, {\n    key: "putBack",\n    value: function putBack() {\n      this.Setting.removeAccept();\n      this.Setting.removePromptDefine();\n      this.Game.resetResponses();\n      this.Game.update();\n      this.consoleElem.value = "";\n      this.consoleElem.focus();\n    }\n  }, {\n    key: "defining",\n    value: function defining() {\n      if (this.watchOutForDefine) {\n        this.Setting.toggleDefineButton();\n        this.watchOutForDefine = false;\n      }\n      this.Setting.promptTryDefine();\n    }\n  }, {\n    key: "rotate",\n    value: function rotate(el) {\n      var rotateIcons = document.querySelectorAll("." + __WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.rotateIcons + " > div");\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = rotateIcons[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var rotateIcon = _step.value;\n\n          rotateIcon.classList.remove("active");\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      el.classList.add("active");\n      this.Setting.rotate(el.getAttribute("data-rotate"));\n      this.Game.update();\n    }\n  }]);\n\n  return App;\n}();\n\nvar A = new App();\n\n/* Event Listeners */\n\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.do).addEventListener("click", function () {\n  return A.enter();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.accept).addEventListener("click", function () {\n  return A.accept();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.prev).addEventListener("click", function () {\n  return A.prev();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.next).addEventListener("click", function () {\n  return A.next();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.clear).addEventListener("click", function () {\n  return A.clear();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.toggleDefine).addEventListener("click", function () {\n  return A.toggleDefineInterface();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].consoleElemId).addEventListener("keyup", function () {\n  return true;\n});\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.define).addEventListener("click", function () {\n  return A.enter();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.define_instead).addEventListener("click", function (e) {\n  e.preventDefault();A.openDefineInterface();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.skip).addEventListener("click", function () {\n  return A.skip();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.putBack).addEventListener("click", function () {\n  return A.putBack();\n}, false);\ndocument.getElementById(__WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].elems.defineConsole).addEventListener("keydown", function (e) {\n  return A.defining(e);\n}, false);\n\nfunction openAndCloseSetter(selector, callback, callbackObj) {\n  var buttons = document.querySelectorAll(selector);\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = buttons[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var button = _step2.value;\n\n      button.addEventListener("click", function (e) {\n        e.preventDefault();\n        callback.apply(callbackObj);\n      });\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n\nopenAndCloseSetter(".help-toggle", A.toggleHelp, A);\nopenAndCloseSetter(".keyboard-toggle", A.toggleKeyboard, A);\n\ndocument.getElementById("command_history").addEventListener("click", function (e) {\n  var index = 0;\n  var type = e.target.getAttribute("data-type");\n  if (!(type === "accept" || type === "initial")) {\n    return;\n  }\n  index = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["d" /* getHistoryElems */])().length - parseInt(e.target.getAttribute("data-stepN"), 10) - 1;\n  A.revert(index);\n}, false);\n\nvar rotateIcons = document.querySelectorAll("." + __WEBPACK_IMPORTED_MODULE_2__config__["a" /* default */].buttons.rotateIcons + " > div");\nvar _iteratorNormalCompletion3 = true;\nvar _didIteratorError3 = false;\nvar _iteratorError3 = undefined;\n\ntry {\n  for (var _iterator3 = rotateIcons[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n    var rotateIcon = _step3.value;\n\n    rotateIcon.addEventListener("click", function (e) {\n      return A.rotate(e.target);\n    }, false);\n  }\n\n  /* Keyboard shortcuts */\n} catch (err) {\n  _didIteratorError3 = true;\n  _iteratorError3 = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n      _iterator3.return();\n    }\n  } finally {\n    if (_didIteratorError3) {\n      throw _iteratorError3;\n    }\n  }\n}\n\nvar Hotkeys = {\n  ENTER: "13",\n  LEFT: "37",\n  RIGHT: "39",\n  UP: "38",\n  DOWN: "40",\n  UNDO: "90+ctrl",\n  REDO: "90+shift+ctrl",\n  TEACH: "68+ctrl",\n  ESC: "27",\n  SHIFTENTER: "13+shift"\n};\n\nwindow.onkeydown = function (e) {\n  var key = "";\n  key += e.keyCode;\n\n  if (e.shiftKey) {\n    key += "+shift";\n  }\n  if (e.ctrlKey || e.metaKey) {\n    key += "+ctrl";\n  }\n\n  switch (key) {\n    case Hotkeys.UP:\n      e.preventDefault();\n      A.prev();\n      break;\n    case Hotkeys.DOWN:\n      e.preventDefault();\n      A.next();\n      break;\n    case Hotkeys.SHIFTENTER:\n      e.preventDefault();\n      A.accept();\n      break;\n    case Hotkeys.ENTER:\n      e.preventDefault();\n      A.enter();\n      break;\n    case Hotkeys.TEACH:\n      e.preventDefault();\n      A.openDefineInterface();\n      break;\n    case Hotkeys.ESC:\n      if (A.helpOn) {\n        A.toggleHelp();\n      } else if (A.keyboardOn) {\n        A.toggleKeyboard();\n      } else if (A.defineState) {\n        A.closeDefineInterface();\n      }\n      break;\n    case Hotkeys.UNDO:\n      e.preventDefault();\n      A.undo();\n      break;\n    case Hotkeys.REDO:\n      e.preventDefault();\n      A.redo();\n      break;\n    default:\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY3NzL2FwcC5sZXNzPzZiMGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9hcHAvY3NzL2FwcC5sZXNzXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval('module.exports = "<!DOCTYPE html> <html lang=en> <head> <meta charset=utf-8> <meta name=viewport content=\\"width=device-width,initial-scale=1\\"> <meta name=description content=\\"teach the computer English\\"> <title>SHRDLURN</title> </head> <body> <div class=header> <div class=logo> <span class=l-r>S</span><span class=l-y>H</span><span class=l-o>R</span><span class=l-b>D</span><span class=l-r>L</span><span class=l-y>U</span><span class=l-o>R</span><span class=l-b>N</span> <span class=sublogo>A Stanford NLP Project</span> </div> <div class=nav> <div class=help-toggle>Help Me</div> <div class=keyboard-toggle>Keyboard Shortcuts</div> <div>Restart Tutorial</div> </div> </div> <div class=container> <div class=main> <div id=define_prompt class=\\"canvas-prompt hidden\\"> <h1>SHRDLURN does not understand.</h1> <hr> <p>Help SHRDLURN learn by teaching the phrase you attempted to instruct SHRDLURN with by defining it.</p> <button type=button class=bold-button id=define_instead>Ok. TEACH SHRDLURN.</button> </div> <div class=rotate-icons> <div id=rtl data-rotate=-2></div> <div id=rtr data-rotate=2></div> <div id=rbl data-rotate=-1 class=active></div> <div id=rbr data-rotate=1></div> </div> <canvas id=main_canvas width=1536 height=1200></canvas> <div class=define-area id=define_interface> <div class=status> <span class=reaction><img class=emojione alt=:rolling_eyes: src=http://cdn.jsdelivr.net/emojione/assets/png/1f642.png></span> <span id=define_header></span> </div> <div class=input-group> <input type=text id=definetextarea /> <div class=buttons-at-end> <button type=button class=enter-button id=try_define>try</button> <button type=button class=accept-button id=define_phrase_button>define</button> </div> </div> <div class=examples> <span id=define_status></span>&nbsp;<a href=\\"\\" class=help-toggle>But it doesn\'t work, I need help...</a> </div> </div> <div class=console-area> <div id=statusinfo class=status> &nbsp; <span class=reaction id=reaction><img class=emojione alt=:rolling_eyes: src=http://cdn.jsdelivr.net/emojione/assets/png/1f644.png></span> <div> <span id=currentcmd><b>No command</b></span>, <span id=status>type one!</span> </div> </div> <div class=input-group id=console_group> <input type=text id=console> <div class=buttons-at-end> <button type=button class=remove-button id=putbackbutton>&times;</button> <button type=button class=enter-button id=dobutton>enter</button> <button type=button class=accept-button id=flyingaccept>accept</button> </div> </div> <div class=examples> <strong>example query:</strong> <span id=random></span> </div> </div> <div class=meta-buttons> <button type=button id=clearbutton>clear</button> <br> <button type=button id=toggledefine>define</button> <button type=button id=prevbutton>&uarr;</button> <button type=button id=nextbutton>&darr;</button> </div> </div> <div class=panel> <div class=\\"target card\\"> <div class=card-header> Target <button type=button id=skip_button class=seethrough>skip (<span id=skips_left>2</span> left)</button> </div> <div class=target-footer> <div> <div>possible: <span class=possible_steps style=font-weight:700>5</span> steps</div> </div> <div> <div>maximum: <span class=max_steps style=font-weight:700>15</span> steps</div> </div> </div> <canvas id=target_canvas width=512 height=800></canvas> </div> <div class=history> <div class=card-header> Recipe Steps (<span class=curr_steps>0</span>/<span class=max_steps>100</span>) </div> <div class=history-steps id=command_history></div> </div> </div> </div> <div class=modals> <div class=modal-container id=helpme> <div class=modal> <div class=modal-header> Help for SHRDLURN (esc to close) </div> <div class=modal-body> <p> The goal is to teach SHRDLURN (the computer) to understand more English. You have to define things in a way that can already be understood by SHRDLURN. This includes anything that you or others have already taught it, as well as the core language below, which it always understands: <ul> <li><b>number: </b> 0, 1, 2, ..., 9, many</li> <li><b>color: </b> red, cyan, brown, yellow, orange</li> <li><b>action: </b> remove, add [color] </li> <li><b>condition: </b> top [color], row = [number], height &gt; [number], has [color], etc. </li> <li><b>if: </b> [action] if [condition] <ul> <li>add red if col = 1 or col = 8 or row = 1 or row = 8</li> <li>add red if row &lt; 3</li> <li>remove if top red</li> </ul> </li> <li><b>control: </b> [action] then [action], repeat [action] 3 times <ul> <li>repeat remove if has red many times</li> <li>remove then add red if top yellow </li> <li>repeat add red 3 times if top yellow or row &lt; 3 </li> <li>[remove then add red then add red] if height &lt; 1</li> <li>repeat add red then add yellow 5 times if height &gt; 0 </li> </ul> </li> <li><b>(advanced) relative condition: </b> relativepos_of [condition] <ul> <li>add yellow if leftof top red</li> <li>add yellow if rightof col = 3</li> <li>add yellow if backof col = row </li> <li>add yellow if rightof frontof [row = 4 and col = 4]</li> </ul> </li> <li><b>(advanced) extremes: </b> largest X in [condition] <ul> <li>add yellow if largest row in all</li> <li>add yellow if smallest col in top red</li> </ul> </li> <li><b>(advanced) inside: </b> inside [[condition]] <ul> <li>add red if inside [top red]</li> <li>add red if inside [col = 1 or col = 4]</li> <li>add cyan if inside [ [ row = 1 or row = 4 ] and [col = 1 or col = 4] ] </li> </ul> </li> </ul> </p> <h3>But it\'s not accepting my teachings! </h3> <ul> <li> SHRDLURN understands everything in green boxes, blue are words it knows but not used correctly, red are unknowns.</li> <li> <span style=color:red>blah </span> <span class=color-good>add red if height &lt; 1 </span> <span style=color:#00f ;=\\"\\">then </span> <span style=color:#00f ;=\\"\\">if </span><span style=color:red>someblah </span> <span class=color-good>add red </span> <span class=color-good>remove red </span> </li> <li> If there are several green boxes, then it understands each box, but not how they are combined. For example, <span class=color-good>add red </span> <span class=color-good>remove red </span> needs to be changed to <span class=color-good>add red then remove red </span></li> <li> Still, if nothing works, close the definition window and teach something else!</li> </ul> <p> English is hard for beginners, which is why we need your help teaching SHRDLURN!</p> <a class=\\"button--closed help-toggle\\" href=#>Okay, got it! (click here or press ESC key to close this window)</a> </div> </div> </div> <div class=modal-container id=keyboard_shortcuts> <div class=modal> <div class=modal-header> Keyboard Shortcuts </div> <div class=modal-body> <p>To make your life easier, we made the follow keyboard shortcuts so that you can rapidly build with SHRDLURN!</p> <p> <strong>enter:</strong> enter (try)<br/> <strong>accept:</strong> shift-enter (✓)<br/> <strong>define:</strong> crtl-d (teach)<br/> <strong>↑:</strong> up<br/> <strong>↓:</strong> down<br/> <strong>undo:</strong> ctrl-z<br/> <strong>redo:</strong> shift-ctrl-z </p> <p><a href=\\"\\" class=keyboard-toggle>Got it? Great. Click to close this now (or press esc).</a></p> </div> </div> </div> </div> <link href=\\"https://fonts.googleapis.com/css?family=Roboto:100,400,700\\" rel=stylesheet> <script>!function(e,a,t,n,c,o,s){e.GoogleAnalyticsObject=c,e[c]=e[c]||function(){(e[c].q=e[c].q||[]).push(arguments)},e[c].l=1*new Date,o=a.createElement(t),s=a.getElementsByTagName(t)[0],o.async=1,o.src=n,s.parentNode.insertBefore(o,s)}(window,document,\\"script\\",\\"//www.google-analytics.com/analytics.js\\",\\"ga\\"),ga(\\"create\\",\\"UA-74509910-1\\",\\"auto\\"),ga(\\"send\\",\\"pageview\\")</script> </body> </html>";//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports,__webpack_require__){eval('/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals window __webpack_hash__ */\r\nif(true) {\r\n\tvar lastHash;\r\n\tvar upToDate = function upToDate() {\r\n\t\treturn lastHash.indexOf(__webpack_require__.h()) >= 0;\r\n\t};\r\n\tvar check = function check() {\r\n\t\tmodule.hot.check().then(function(updatedModules) {\r\n\t\t\tif(!updatedModules) {\r\n\t\t\t\tconsole.warn("[HMR] Cannot find update. Need to do a full reload!");\r\n\t\t\t\tconsole.warn("[HMR] (Probably because of restarting the webpack-dev-server)");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmodule.hot.apply({\r\n\t\t\t\tignoreUnaccepted: true,\r\n\t\t\t\tignoreDeclined: true,\r\n\t\t\t\tonUnaccepted: function(data) {\r\n\t\t\t\t\tconsole.warn("Ignored an update to unaccepted module " + data.chain.join(" -> "));\r\n\t\t\t\t},\r\n\t\t\t\tonDeclined: function(data) {\r\n\t\t\t\t\tconsole.warn("Ignored an update to declined module " + data.chain.join(" -> "));\r\n\t\t\t\t}\r\n\t\t\t}).then(function(renewedModules) {\r\n\t\t\t\tif(!upToDate()) {\r\n\t\t\t\t\tcheck();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t__webpack_require__(22)(updatedModules, renewedModules);\r\n\r\n\t\t\t\tif(upToDate()) {\r\n\t\t\t\t\tconsole.log("[HMR] App is up to date.");\r\n\t\t\t\t}\r\n\t\t\t}).catch(function(err) {\r\n\t\t\t\tvar status = module.hot.status();\r\n\t\t\t\tif(["abort", "fail"].indexOf(status) >= 0) {\r\n\t\t\t\t\tconsole.warn("[HMR] Cannot apply update. Need to do a full reload!");\r\n\t\t\t\t\tconsole.warn("[HMR] " + err.stack || err.message);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn("[HMR] Update failed: " + err.stack || err.message);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}).catch(function(err) {\r\n\t\t\tvar status = module.hot.status();\r\n\t\t\tif(["abort", "fail"].indexOf(status) >= 0) {\r\n\t\t\t\tconsole.warn("[HMR] Cannot check for update. Need to do a full reload!");\r\n\t\t\t\tconsole.warn("[HMR] " + err.stack || err.message);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn("[HMR] Update check failed: " + err.stack || err.message);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tvar hotEmitter = __webpack_require__(21);\r\n\thotEmitter.on("webpackHotUpdate", function(currentHash) {\r\n\t\tlastHash = currentHash;\r\n\t\tif(!upToDate()) {\r\n\t\t\tvar status = module.hot.status();\r\n\t\t\tif(status === "idle") {\r\n\t\t\t\tconsole.log("[HMR] Checking for updates on the server...");\r\n\t\t\t\tcheck();\r\n\t\t\t} else if(["abort", "fail"].indexOf(status) >= 0) {\r\n\t\t\t\tconsole.warn("[HMR] Cannot apply update as a previous update " + status + "ed. Need to do a full reload!");\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tconsole.log("[HMR] Waiting for update signal from WDS...");\r\n} else {\r\n\tthrow new Error("[HMR] Hot Module Replacement is disabled.");\r\n}\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9vbmx5LWRldi1zZXJ2ZXIuanM/MmY4NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLElBQUk7QUFDSixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsQ0FBQztBQUNEO0FBQ0EiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8qZ2xvYmFscyB3aW5kb3cgX193ZWJwYWNrX2hhc2hfXyAqL1xyXG5pZihtb2R1bGUuaG90KSB7XHJcblx0dmFyIGxhc3RIYXNoO1xyXG5cdHZhciB1cFRvRGF0ZSA9IGZ1bmN0aW9uIHVwVG9EYXRlKCkge1xyXG5cdFx0cmV0dXJuIGxhc3RIYXNoLmluZGV4T2YoX193ZWJwYWNrX2hhc2hfXykgPj0gMDtcclxuXHR9O1xyXG5cdHZhciBjaGVjayA9IGZ1bmN0aW9uIGNoZWNrKCkge1xyXG5cdFx0bW9kdWxlLmhvdC5jaGVjaygpLnRoZW4oZnVuY3Rpb24odXBkYXRlZE1vZHVsZXMpIHtcclxuXHRcdFx0aWYoIXVwZGF0ZWRNb2R1bGVzKSB7XHJcblx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gQ2Fubm90IGZpbmQgdXBkYXRlLiBOZWVkIHRvIGRvIGEgZnVsbCByZWxvYWQhXCIpO1xyXG5cdFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIChQcm9iYWJseSBiZWNhdXNlIG9mIHJlc3RhcnRpbmcgdGhlIHdlYnBhY2stZGV2LXNlcnZlcilcIik7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRtb2R1bGUuaG90LmFwcGx5KHtcclxuXHRcdFx0XHRpZ25vcmVVbmFjY2VwdGVkOiB0cnVlLFxyXG5cdFx0XHRcdGlnbm9yZURlY2xpbmVkOiB0cnVlLFxyXG5cdFx0XHRcdG9uVW5hY2NlcHRlZDogZnVuY3Rpb24oZGF0YSkge1xyXG5cdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiSWdub3JlZCBhbiB1cGRhdGUgdG8gdW5hY2NlcHRlZCBtb2R1bGUgXCIgKyBkYXRhLmNoYWluLmpvaW4oXCIgLT4gXCIpKTtcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdG9uRGVjbGluZWQ6IGZ1bmN0aW9uKGRhdGEpIHtcclxuXHRcdFx0XHRcdGNvbnNvbGUud2FybihcIklnbm9yZWQgYW4gdXBkYXRlIHRvIGRlY2xpbmVkIG1vZHVsZSBcIiArIGRhdGEuY2hhaW4uam9pbihcIiAtPiBcIikpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSkudGhlbihmdW5jdGlvbihyZW5ld2VkTW9kdWxlcykge1xyXG5cdFx0XHRcdGlmKCF1cFRvRGF0ZSgpKSB7XHJcblx0XHRcdFx0XHRjaGVjaygpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0cmVxdWlyZShcIi4vbG9nLWFwcGx5LXJlc3VsdFwiKSh1cGRhdGVkTW9kdWxlcywgcmVuZXdlZE1vZHVsZXMpO1xyXG5cclxuXHRcdFx0XHRpZih1cFRvRGF0ZSgpKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIltITVJdIEFwcCBpcyB1cCB0byBkYXRlLlwiKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdHZhciBzdGF0dXMgPSBtb2R1bGUuaG90LnN0YXR1cygpO1xyXG5cdFx0XHRcdGlmKFtcImFib3J0XCIsIFwiZmFpbFwiXS5pbmRleE9mKHN0YXR1cykgPj0gMCkge1xyXG5cdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gQ2Fubm90IGFwcGx5IHVwZGF0ZS4gTmVlZCB0byBkbyBhIGZ1bGwgcmVsb2FkIVwiKTtcclxuXHRcdFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIFwiICsgZXJyLnN0YWNrIHx8IGVyci5tZXNzYWdlKTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gVXBkYXRlIGZhaWxlZDogXCIgKyBlcnIuc3RhY2sgfHwgZXJyLm1lc3NhZ2UpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0dmFyIHN0YXR1cyA9IG1vZHVsZS5ob3Quc3RhdHVzKCk7XHJcblx0XHRcdGlmKFtcImFib3J0XCIsIFwiZmFpbFwiXS5pbmRleE9mKHN0YXR1cykgPj0gMCkge1xyXG5cdFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIENhbm5vdCBjaGVjayBmb3IgdXBkYXRlLiBOZWVkIHRvIGRvIGEgZnVsbCByZWxvYWQhXCIpO1xyXG5cdFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIFwiICsgZXJyLnN0YWNrIHx8IGVyci5tZXNzYWdlKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRjb25zb2xlLndhcm4oXCJbSE1SXSBVcGRhdGUgY2hlY2sgZmFpbGVkOiBcIiArIGVyci5zdGFjayB8fCBlcnIubWVzc2FnZSk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH07XHJcblx0dmFyIGhvdEVtaXR0ZXIgPSByZXF1aXJlKFwiLi9lbWl0dGVyXCIpO1xyXG5cdGhvdEVtaXR0ZXIub24oXCJ3ZWJwYWNrSG90VXBkYXRlXCIsIGZ1bmN0aW9uKGN1cnJlbnRIYXNoKSB7XHJcblx0XHRsYXN0SGFzaCA9IGN1cnJlbnRIYXNoO1xyXG5cdFx0aWYoIXVwVG9EYXRlKCkpIHtcclxuXHRcdFx0dmFyIHN0YXR1cyA9IG1vZHVsZS5ob3Quc3RhdHVzKCk7XHJcblx0XHRcdGlmKHN0YXR1cyA9PT0gXCJpZGxlXCIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhcIltITVJdIENoZWNraW5nIGZvciB1cGRhdGVzIG9uIHRoZSBzZXJ2ZXIuLi5cIik7XHJcblx0XHRcdFx0Y2hlY2soKTtcclxuXHRcdFx0fSBlbHNlIGlmKFtcImFib3J0XCIsIFwiZmFpbFwiXS5pbmRleE9mKHN0YXR1cykgPj0gMCkge1xyXG5cdFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIENhbm5vdCBhcHBseSB1cGRhdGUgYXMgYSBwcmV2aW91cyB1cGRhdGUgXCIgKyBzdGF0dXMgKyBcImVkLiBOZWVkIHRvIGRvIGEgZnVsbCByZWxvYWQhXCIpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSk7XHJcblx0Y29uc29sZS5sb2coXCJbSE1SXSBXYWl0aW5nIGZvciB1cGRhdGUgc2lnbmFsIGZyb20gV0RTLi4uXCIpO1xyXG59IGVsc2Uge1xyXG5cdHRocm93IG5ldyBFcnJvcihcIltITVJdIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnQgaXMgZGlzYWJsZWQuXCIpO1xyXG59XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9ob3Qvb25seS1kZXYtc2VydmVyLmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval('/**\n * Simple, lightweight, usable local autocomplete library for modern browsers\n * Because there weren’t enough autocomplete scripts in the world? Because I’m completely insane and have NIH syndrome? Probably both. :P\n * @author Lea Verou http://leaverou.github.io/awesomplete\n * MIT license\n */\n\n(function () {\n\nvar _ = function (input, o) {\n\tvar me = this;\n\n\t// Setup\n\n\tthis.input = $(input);\n\tthis.input.setAttribute("autocomplete", "off");\n\tthis.input.setAttribute("aria-autocomplete", "list");\n\n\to = o || {};\n\n\tconfigure(this, {\n\t\tminChars: 2,\n\t\tmaxItems: 10,\n\t\tautoFirst: false,\n\t\tdata: _.DATA,\n\t\tfilter: _.FILTER_CONTAINS,\n\t\tsort: _.SORT_BYLENGTH,\n\t\titem: _.ITEM,\n\t\treplace: _.REPLACE\n\t}, o);\n\n\tthis.index = -1;\n\n\t// Create necessary elements\n\n\tthis.container = $.create("div", {\n\t\tclassName: "awesomplete",\n\t\taround: input\n\t});\n\n\tthis.ul = $.create("ul", {\n\t\thidden: "hidden",\n\t\tinside: this.container\n\t});\n\n\tthis.status = $.create("span", {\n\t\tclassName: "visually-hidden",\n\t\trole: "status",\n\t\t"aria-live": "assertive",\n\t\t"aria-relevant": "additions",\n\t\tinside: this.container\n\t});\n\n\t// Bind events\n\n\t$.bind(this.input, {\n\t\t"input": this.evaluate.bind(this),\n\t\t"blur": this.close.bind(this, { reason: "blur" }),\n\t\t"keydown": function(evt) {\n\t\t\tvar c = evt.keyCode;\n\n\t\t\t// If the dropdown `ul` is in view, then act on keydown for the following keys:\n\t\t\t// Enter / Esc / Up / Down\n\t\t\tif(me.opened) {\n\t\t\t\tif (c === 13 && me.selected) { // Enter\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tme.select();\n\t\t\t\t}\n\t\t\t\telse if (c === 27) { // Esc\n\t\t\t\t\tme.close({ reason: "esc" });\n\t\t\t\t}\n\t\t\t\telse if (c === 38 || c === 40) { // Down/Up arrow\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tme[c === 38? "previous" : "next"]();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t$.bind(this.input.form, {"submit": this.close.bind(this, { reason: "submit" })});\n\n\t$.bind(this.ul, {"mousedown": function(evt) {\n\t\tvar li = evt.target;\n\n\t\tif (li !== this) {\n\n\t\t\twhile (li && !/li/i.test(li.nodeName)) {\n\t\t\t\tli = li.parentNode;\n\t\t\t}\n\n\t\t\tif (li && evt.button === 0) {  // Only select on left click\n\t\t\t\tevt.preventDefault();\n\t\t\t\tme.select(li, evt.target);\n\t\t\t}\n\t\t}\n\t}});\n\n\tif (this.input.hasAttribute("list")) {\n\t\tthis.list = "#" + this.input.getAttribute("list");\n\t\tthis.input.removeAttribute("list");\n\t}\n\telse {\n\t\tthis.list = this.input.getAttribute("data-list") || o.list || [];\n\t}\n\n\t_.all.push(this);\n};\n\n_.prototype = {\n\tset list(list) {\n\t\tif (Array.isArray(list)) {\n\t\t\tthis._list = list;\n\t\t}\n\t\telse if (typeof list === "string" && list.indexOf(",") > -1) {\n\t\t\t\tthis._list = list.split(/\\s*,\\s*/);\n\t\t}\n\t\telse { // Element or CSS selector\n\t\t\tlist = $(list);\n\n\t\t\tif (list && list.children) {\n\t\t\t\tvar items = [];\n\t\t\t\tslice.apply(list.children).forEach(function (el) {\n\t\t\t\t\tif (!el.disabled) {\n\t\t\t\t\t\tvar text = el.textContent.trim();\n\t\t\t\t\t\tvar value = el.value || text;\n\t\t\t\t\t\tvar label = el.label || text;\n\t\t\t\t\t\tif (value !== "") {\n\t\t\t\t\t\t\titems.push({ label: label, value: value });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._list = items;\n\t\t\t}\n\t\t}\n\n\t\tif (document.activeElement === this.input) {\n\t\t\tthis.evaluate();\n\t\t}\n\t},\n\n\tget selected() {\n\t\treturn this.index > -1;\n\t},\n\n\tget opened() {\n\t\treturn !this.ul.hasAttribute("hidden");\n\t},\n\n\tclose: function (o) {\n\t\tif (!this.opened) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.ul.setAttribute("hidden", "");\n\t\tthis.index = -1;\n\n\t\t$.fire(this.input, "awesomplete-close", o || {});\n\t},\n\n\topen: function () {\n\t\tthis.ul.removeAttribute("hidden");\n\n\t\tif (this.autoFirst && this.index === -1) {\n\t\t\tthis.goto(0);\n\t\t}\n\n\t\t$.fire(this.input, "awesomplete-open");\n\t},\n\n\tnext: function () {\n\t\tvar count = this.ul.children.length;\n\n\t\tthis.goto(this.index < count - 1? this.index + 1 : -1);\n\t},\n\n\tprevious: function () {\n\t\tvar count = this.ul.children.length;\n\n\t\tthis.goto(this.selected? this.index - 1 : count - 1);\n\t},\n\n\t// Should not be used, highlights specific item without any checks!\n\tgoto: function (i) {\n\t\tvar lis = this.ul.children;\n\n\t\tif (this.selected) {\n\t\t\tlis[this.index].setAttribute("aria-selected", "false");\n\t\t}\n\n\t\tthis.index = i;\n\n\t\tif (i > -1 && lis.length > 0) {\n\t\t\tlis[i].setAttribute("aria-selected", "true");\n\t\t\tthis.status.textContent = lis[i].textContent;\n\n\t\t\t$.fire(this.input, "awesomplete-highlight", {\n\t\t\t\ttext: this.suggestions[this.index]\n\t\t\t});\n\t\t}\n\t},\n\n\tselect: function (selected, origin) {\n\t\tif (selected) {\n\t\t\tthis.index = $.siblingIndex(selected);\n\t\t} else {\n\t\t\tselected = this.ul.children[this.index];\n\t\t}\n\n\t\tif (selected) {\n\t\t\tvar suggestion = this.suggestions[this.index];\n\n\t\t\tvar allowed = $.fire(this.input, "awesomplete-select", {\n\t\t\t\ttext: suggestion,\n\t\t\t\torigin: origin || selected\n\t\t\t});\n\n\t\t\tif (allowed) {\n\t\t\t\tthis.replace(suggestion);\n\t\t\t\tthis.close({ reason: "select" });\n\t\t\t\t$.fire(this.input, "awesomplete-selectcomplete", {\n\t\t\t\t\ttext: suggestion\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\n\tevaluate: function() {\n\t\tvar me = this;\n\t\tvar value = this.input.value;\n\n\t\tif (value.length >= this.minChars && this._list.length > 0) {\n\t\t\tthis.index = -1;\n\t\t\t// Populate list with options that match\n\t\t\tthis.ul.innerHTML = "";\n\n\t\t\tthis.suggestions = this._list\n\t\t\t\t.map(function(item) {\n\t\t\t\t\treturn new Suggestion(me.data(item, value));\n\t\t\t\t})\n\t\t\t\t.filter(function(item) {\n\t\t\t\t\treturn me.filter(item, value);\n\t\t\t\t})\n\t\t\t\t.sort(this.sort)\n\t\t\t\t.slice(0, this.maxItems);\n\n\t\t\tthis.suggestions.forEach(function(text) {\n\t\t\t\t\tme.ul.appendChild(me.item(text, value));\n\t\t\t\t});\n\n\t\t\tif (this.ul.children.length === 0) {\n\t\t\t\tthis.close({ reason: "nomatches" });\n\t\t\t} else {\n\t\t\t\tthis.open();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.close({ reason: "nomatches" });\n\t\t}\n\t}\n};\n\n// Static methods/properties\n\n_.all = [];\n\n_.FILTER_CONTAINS = function (text, input) {\n\treturn RegExp($.regExpEscape(input.trim()), "i").test(text);\n};\n\n_.FILTER_STARTSWITH = function (text, input) {\n\treturn RegExp("^" + $.regExpEscape(input.trim()), "i").test(text);\n};\n\n_.SORT_BYLENGTH = function (a, b) {\n\tif (a.length !== b.length) {\n\t\treturn a.length - b.length;\n\t}\n\n\treturn a < b? -1 : 1;\n};\n\n_.ITEM = function (text, input) {\n\tvar html = input === \'\' ? text : text.replace(RegExp($.regExpEscape(input.trim()), "gi"), "<mark>$&</mark>");\n\treturn $.create("li", {\n\t\tinnerHTML: html,\n\t\t"aria-selected": "false"\n\t});\n};\n\n_.REPLACE = function (text) {\n\tthis.input.value = text.value;\n};\n\n_.DATA = function (item/*, input*/) { return item; };\n\n// Private functions\n\nfunction Suggestion(data) {\n\tvar o = Array.isArray(data)\n\t  ? { label: data[0], value: data[1] }\n\t  : typeof data === "object" && "label" in data && "value" in data ? data : { label: data, value: data };\n\n\tthis.label = o.label || o.value;\n\tthis.value = o.value;\n}\nObject.defineProperty(Suggestion.prototype = Object.create(String.prototype), "length", {\n\tget: function() { return this.label.length; }\n});\nSuggestion.prototype.toString = Suggestion.prototype.valueOf = function () {\n\treturn "" + this.label;\n};\n\nfunction configure(instance, properties, o) {\n\tfor (var i in properties) {\n\t\tvar initial = properties[i],\n\t\t    attrValue = instance.input.getAttribute("data-" + i.toLowerCase());\n\n\t\tif (typeof initial === "number") {\n\t\t\tinstance[i] = parseInt(attrValue);\n\t\t}\n\t\telse if (initial === false) { // Boolean options must be false by default anyway\n\t\t\tinstance[i] = attrValue !== null;\n\t\t}\n\t\telse if (initial instanceof Function) {\n\t\t\tinstance[i] = null;\n\t\t}\n\t\telse {\n\t\t\tinstance[i] = attrValue;\n\t\t}\n\n\t\tif (!instance[i] && instance[i] !== 0) {\n\t\t\tinstance[i] = (i in o)? o[i] : initial;\n\t\t}\n\t}\n}\n\n// Helpers\n\nvar slice = Array.prototype.slice;\n\nfunction $(expr, con) {\n\treturn typeof expr === "string"? (con || document).querySelector(expr) : expr || null;\n}\n\nfunction $$(expr, con) {\n\treturn slice.call((con || document).querySelectorAll(expr));\n}\n\n$.create = function(tag, o) {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === "inside") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === "around") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\t\t}\n\t\telse if (i in element) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\n$.bind = function(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.fire = function(target, type, properties) {\n\tvar evt = document.createEvent("HTMLEvents");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n};\n\n$.regExpEscape = function (s) {\n\treturn s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, "\\\\$&");\n};\n\n$.siblingIndex = function (el) {\n\t/* eslint-disable no-cond-assign */\n\tfor (var i = 0; el = el.previousElementSibling; i++);\n\treturn i;\n};\n\n// Initialization\n\nfunction init() {\n\t$$("input.awesomplete").forEach(function (input) {\n\t\tnew _(input);\n\t});\n}\n\n// Are we in a browser? Check for Document constructor\nif (typeof Document !== "undefined") {\n\t// DOM already loaded?\n\tif (document.readyState !== "loading") {\n\t\tinit();\n\t}\n\telse {\n\t\t// Wait for it\n\t\tdocument.addEventListener("DOMContentLoaded", init);\n\t}\n}\n\n_.$ = $;\n_.$$ = $$;\n\n// Make sure to export Awesomplete on self when in a browser\nif (typeof self !== "undefined") {\n\tself.Awesomplete = _;\n}\n\n// Expose Awesomplete as a CJS module\nif (typeof module === "object" && module.exports) {\n\tmodule.exports = _;\n}\n\nreturn _;\n\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},function(module,exports,__webpack_require__){"use strict";eval('/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__config__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__logger__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(1);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n\n\n\n\nvar Game = function () {\n  function Game(setting, sempreClient) {\n    _classCallCheck(this, Game);\n\n    this.sessionId = __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].defaultSessionId;\n\n    this.currentState = __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].defaultStruct;\n    this.responses = [];\n    this.selectedResp = -1;\n    this.query = "";\n    this.history = this.initialHistory();\n    this.taggedCover = "";\n    this.defineSuccess = "";\n\n    this.targetStruct = __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].defaultStruct;\n    this.targetIdx = -1;\n    this.maxTargetSteps = 0;\n    this.skipsLeft = __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].defaultSkips;\n\n    this.Sempre = sempreClient;\n\n    this.Setting = setting;\n    this.Setting.renderHistory(this.history);\n\n    this.Logger = new __WEBPACK_IMPORTED_MODULE_1__logger__["a" /* default */](this.sessionId);\n  }\n\n  _createClass(Game, [{\n    key: "setTarget",\n    value: function setTarget(targetStruct) {\n      this.targetIdx = targetStruct[0];\n      this.targetStruct = targetStruct[2];\n      this.maxTargetSteps = targetStruct[1] * __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].difficulty;\n\n      this.Setting.renderTarget(this.targetStruct);\n      this.Setting.setSteps(targetStruct[1], this.maxTargetSteps);\n\n      this.Logger.log({ type: "target", msg: this.targetStruct });\n    }\n  }, {\n    key: "enter",\n    value: function enter(query) {\n      if (query.length === 0) this.Setting.status("enter a command");\n      // TODO: Validate length!\n      this.querySempre(query);\n    }\n  }, {\n    key: "querySempre",\n    value: function querySempre(querystr) {\n      var _this = this;\n\n      var query = this.Sempre.formatQuery(querystr);\n      var contextCommand = "(context)";\n      if (this.currentState) {\n        var currentState = JSON.stringify(JSON.stringify(this.currentState.map(function (c) {\n          return [c.x, c.y, c.z, c.color, c.names];\n        })));\n        contextCommand = "(context (graph NaiveKnowledgeGraph ((string " + currentState + ") (name b) (name c))))";\n      }\n\n      var contextCmds = { q: contextCommand, sessionId: this.sessionId };\n\n      this.Sempre.query(contextCmds, function () {\n        var cmds = { q: query, sessionId: _this.sessionId };\n        _this.Sempre.query(cmds, function (response) {\n          _this.taggedCover = response.taggedcover;\n\n          var formval = _this.Sempre.parseSEMPRE(response.candidates);\n          if (formval === null || formval === undefined) {\n            console.log("no answer from sempre");\n            _this.resetResponses();\n            _this.query = query;\n            _this.Setting.status("SHRDLURN did not understand", query);\n            _this.Setting.promptDefine();\n            _this.Logger.log({ type: "queryUnknown", msg: query });\n            _this.Setting.promptAccept();\n          } else {\n            _this.Setting.removePromptDefine();\n            _this.responses = formval;\n            _this.selectedResp = 0;\n            _this.query = query;\n            _this.Setting.status("got " + _this.responses.length + " options, use &darr; and &uarr; to scroll, and accept to confirm.", query + " (#1/" + _this.responses.length + ")", _this.responses[0].maxprop | -1);\n            _this.Logger.log({ type: "query", msg: query });\n            _this.Setting.promptAccept();\n          }\n\n          if (__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].debugMode) {\n            console.log(response);\n          }\n\n          _this.update();\n        });\n      });\n    }\n  }, {\n    key: "accept",\n    value: function accept() {\n      if (this.getSteps() >= this.maxTargetSteps) {\n        this.Setting.status("you\'ve reached the maxinum number of steps", "can\'t accept");\n        this.Logger.log({ type: "meta", msg: "max steps" });\n        this.Setting.removeAccept();\n      } else if (this.responses.length > 0) {\n        this.Sempre.query({ q: this.query, accept: this.responses[this.selectedResp].rank, sessionId: this.sessionId }, function () {});\n\n        this.currentState = this.responses[this.selectedResp].value;\n        this.Setting.status("✓: accepted, enter another command");\n        this.Logger.log({ type: "accept", msg: this.query + ":" + this.currentState });\n        this.history.push({ query: this.query, type: "accept", state: this.currentState, stepN: this.getSteps() + 1 });\n        this.resetResponses();\n        this.update();\n        this.Setting.removeAccept();\n      } else {\n        this.Setting.status("✓: can\'t accept nothing, say something first");\n      }\n\n      if (this.Setting.equalityCheck(this.currentState, this.targetStruct)) {\n        this.win();\n      }\n    }\n  }, {\n    key: "win",\n    value: function win() {\n      alert("You\'ve did it! Congratulations! You\'ve made the target! Try another one now.");\n      this.Logger.log({ type: "win", msg: this.getSteps() });\n\n      var usedTargets = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["a" /* getStore */])("usedTargets", []);\n      usedTargets.push(this.targetIdx);\n      usedTargets.setStore("usedTargets", usedTargets);\n\n      this.setTarget(this.getRandomTarget());\n      this.clear();\n    }\n  }, {\n    key: "resetResponses",\n    value: function resetResponses() {\n      this.selectedResp = -1;\n      this.responses = [];\n      this.query = "";\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      /* Update the canvas */\n      var afterStruct = this.currentState;\n      if (this.responses.length > 0) {\n        afterStruct = this.Setting.computeDiff(this.currentState, this.responses[this.selectedResp].value);\n      }\n      this.Setting.renderCanvas(afterStruct);\n\n      /* Update the history */\n      this.Setting.renderHistory(this.history);\n      this.Setting.updateSteps(this.getSteps());\n    }\n  }, {\n    key: "define",\n    value: function define(query) {\n      var _this2 = this;\n\n      /* If just trying, update the current structure and everything */\n      if (this.defineSuccess.length === 0 || query !== this.defineSuccess) {\n        var _cmds = { q: "(uttdef \\"" + this.Sempre.formatQuery(query) + "\\" -1)", sessionId: this.sessionId };\n\n        this.Logger.log({ type: "trydefine", msg: query });\n\n        this.Sempre.query(_cmds, function (response) {\n          var formval = _this2.Sempre.parseSEMPRE(response.candidates);\n          var commandResponse = response.commandResponse;\n\n          var defCore = commandResponse.indexOf("Core") !== -1;\n          var defNoCover = commandResponse.indexOf("NoCover") !== -1;\n          var defNoParse = commandResponse.indexOf("NoParse") !== -1;\n\n          if (defCore || defNoCover || defNoParse) {\n            _this2.taggedCover = response.taggedcover;\n            _this2.Setting.tryDefine(query, true, false, _this2.taggedCover, commandResponse, _this2.query);\n          } else {\n            _this2.defineSuccess = query;\n            _this2.selectedResp = 0;\n            _this2.responses = formval;\n            _this2.update();\n            _this2.Setting.tryDefine(query, true, true);\n            _this2.Setting.toggleDefineButton();\n          }\n        });\n        return false;\n      }\n\n      /* Otherwise, submit the definition if already tried */\n      var text = "(uttdef \\"" + this.Sempre.formatQuery(this.defineSuccess) + "\\" " + this.responses[this.selectedResp].rank + ")";\n      var cmds = { q: text, sessionId: this.sessionId };\n      var newPhrase = this.query;\n\n      this.Sempre.query(cmds, function () {\n        _this2.history.push({ query: "defined \\"" + _this2.query + "\\" as \\"" + _this2.defineSuccess + "\\"", type: "define" });\n        _this2.Logger.log({ type: "define", msg: "defined " + _this2.query + " as " + _this2.defineSuccess });\n        _this2.defineSuccess = "";\n        _this2.resetResponses();\n        _this2.update();\n        _this2.Setting.status("definition accepted. thanks for teaching!");\n      });\n\n      return newPhrase;\n    }\n  }, {\n    key: "clear",\n    value: function clear() {\n      this.Logger.log({ type: "clear", msg: "" });\n      this.resetResponses();\n      this.history = this.initialHistory();\n      this.currentState = __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].emptyStruct;\n      this.update();\n      this.Setting.status("cleared the space");\n    }\n  }, {\n    key: "next",\n    value: function next() {\n      if (this.responses.length <= 0) {\n        this.Setting.status("↓: can\'t scroll, say something or ⎌");\n      } else if (this.selectedResp !== this.responses.length - 1) {\n        this.selectedResp++;\n        this.update();\n        this.Setting.status("↓: showing the next one", this.query + " (#" + (this.selectedResp + 1) + "/" + this.responses.length + ")", this.responses[0].maxprop | -1);\n        this.Logger.log({ type: "scroll", msg: "next" });\n      } else {\n        this.Setting.status("↓: already showing the last one", this.query + " (#" + (this.selectedResp + 1) + "/" + this.responses.length + ")", this.responses[0].maxprop | -1);\n      }\n    }\n  }, {\n    key: "prev",\n    value: function prev() {\n      if (this.responses.length <= 0) {\n        this.Setting.status("↑: can\'t scroll, say something or ⎌");\n      } else if (this.selectedResp !== 0) {\n        this.selectedResp--;\n        this.update();\n        this.Setting.status("↑: showing the previous one", this.query + " (#" + (this.selectedResp + 1) + "/" + this.responses.length + ")", this.responses[0].maxprop | -1);\n        this.Logger.log({ type: "scroll", msg: "prev" });\n      } else {\n        this.Setting.status("↑: already showing the first one", this.query + " (#" + (this.selectedResp + 1) + "/" + this.responses.length + ")", this.responses[0].maxprop | -1);\n      }\n    }\n  }, {\n    key: "getSteps",\n    value: function getSteps() {\n      return this.history.filter(function (h) {\n        return h.type === "accept";\n      }).length;\n    }\n  }, {\n    key: "initialHistory",\n    value: function initialHistory() {\n      return [{ type: "initial", query: "intial", state: __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].defaultStruct, stepN: 0 }];\n    }\n  }, {\n    key: "getRandomTarget",\n    value: function getRandomTarget() {\n      var usedTargets = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["a" /* getStore */])("usedTargets", []);\n      if (usedTargets.length === __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].targets.length) {\n        alert("You\'ve completed all targets! Resetting...");\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["b" /* setStore */])("usedTargets", []);\n      }\n\n      var targetIdx = -1;\n      do {\n        targetIdx = Math.floor(Math.random() * __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].targets.length);\n      } while (usedTargets.includes(targetIdx));\n\n      return [targetIdx].concat(_toConsumableArray(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].targets[targetIdx]));\n    }\n  }, {\n    key: "skipTarget",\n    value: function skipTarget() {\n      this.skipsLeft--;\n      this.Setting.setSkips(this.skipsLeft);\n      var usedTargets = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["a" /* getStore */])("usedTargets", []);\n      if (__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].targets.length - usedTargets.length > 1) {\n        var randomTarget = [];\n        do {\n          randomTarget = this.getRandomTarget();\n        } while (randomTarget[0] === this.targetIdx);\n        this.Logger.log({ type: "skip", msg: this.targetStruct[1] });\n        this.setTarget(randomTarget);\n      } else {\n        alert("Sorry, this is the last target. No skips possible.");\n      }\n    }\n  }]);\n\n  return Game;\n}();\n\n/* harmony default export */ exports["a"] = Game;//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},function(module,exports,__webpack_require__){"use strict";eval('/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_phoenix__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_phoenix___default = __WEBPACK_IMPORTED_MODULE_0_phoenix__ && __WEBPACK_IMPORTED_MODULE_0_phoenix__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_phoenix__[\'default\'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_phoenix__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_0_phoenix___default, \'a\', __WEBPACK_IMPORTED_MODULE_0_phoenix___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__config__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n\n\n\nvar Logger = function () {\n  function Logger(sessionId) {\n    _classCallCheck(this, Logger);\n\n    if (__WEBPACK_IMPORTED_MODULE_1__config__["a" /* default */].loggerOn) {\n      var socket = new __WEBPACK_IMPORTED_MODULE_0_phoenix__["Socket"](__WEBPACK_IMPORTED_MODULE_1__config__["a" /* default */].loggerServer, {\n        logger: function logger(kind, msg, data) {\n          console.log(kind + ": " + msg, data);\n        }\n      });\n\n      socket.connect();\n      socket.onOpen(function (ev) {\n        console.log("OPEN", ev);\n      });\n      socket.onError(function (ev) {\n        console.log("ERROR", ev);\n      });\n      socket.onClose(function (ev) {\n        console.log("CLOSE", ev);\n      });\n\n      this.chan = socket.channel("session:" + sessionId, {});\n      this.chan.join();\n      this.chan.onError(function (e) {\n        return console.log("something went wrong", e);\n      });\n      this.chan.onClose(function (e) {\n        return console.log("channel closed", e);\n      });\n    }\n  }\n\n  _createClass(Logger, [{\n    key: "log",\n    value: function log(e) {\n      if (__WEBPACK_IMPORTED_MODULE_1__config__["a" /* default */].loggerOn) {\n        var message = this.strip(e.type) + ":" + this.strip(e.msg);\n        this.chan.push("log:event", { message: message });\n      }\n    }\n  }, {\n    key: "strip",\n    value: function strip(str) {\n      // http://stackoverflow.com/questions/14129953/how-to-encode-a-string-in-javascript-for-displaying-in-html\n      return String(str).replace(/&/g, \'&amp;\').replace(/</g, \'&lt;\').replace(/>/g, \'&gt;\').replace(/"/g, \'&quot;\');\n    }\n  }]);\n\n  return Logger;\n}();\n\n//   this.submit = function(username, name, wall, steps) {\n//     this.chan.push(\'struct:submit\', { username: this.strip(username), name: this.strip(name), wall: this.strip(wall), steps: steps });\n//   }\n//\n//   this.getStructs = function() {\n//     this.chan.push("struct:index", {}, 10000)\n//       .receive("ok", function(msg) {\n//         var structs = msg["structs"];\n//         var structs_list = document.getElementById("user_structs");\n//         structs_list.innerHTML = "";\n//         for (var i = 0; i < structs.length; i++) {\n//           var elem = document.createElement("li");\n//           elem.setAttribute("data-wall", structs[i].wall);\n//           elem.setAttribute("data-steps", structs[i].steps);\n//           elem.innerHTML = "<canvas id=\'usercanvas" + i + "\' width=\'100%\' height=\'100px\'></canvas><br>" + Logger.strip(structs[i].name) + " by " + Logger.strip(structs[i].username);\n//           structs_list.appendChild(elem);\n//           elem.addEventListener("click", loadStruct);\n//           PS.Main.renderUserTargetJSON("[" + structs[i].wall + "]")("usercanvas" + i)();\n//         }\n//       });\n//   }\n// }\n\n\n/* harmony default export */ exports["a"] = Logger;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvbG9nZ2VyLmpzPzE0MmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBOztJQUVxQixNO0FBQ25CLGtCQUFZLFNBQVosRUFBdUI7QUFBQTs7QUFDckIsUUFBSSx5REFBUSxRQUFaLEVBQXNCO0FBQ3BCLFVBQU0sU0FBUyxJQUFJLCtDQUFKLENBQVcseURBQVEsWUFBbkIsRUFBaUM7QUFDOUMsZ0JBQVMsZ0JBQUMsSUFBRCxFQUFPLEdBQVAsRUFBWSxJQUFaLEVBQXFCO0FBQUUsa0JBQVEsR0FBUixDQUFlLElBQWYsVUFBd0IsR0FBeEIsRUFBK0IsSUFBL0I7QUFBc0M7QUFEeEIsT0FBakMsQ0FBZjs7QUFJQSxhQUFPLE9BQVA7QUFDQSxhQUFPLE1BQVAsQ0FBYyxjQUFNO0FBQUUsZ0JBQVEsR0FBUixDQUFZLE1BQVosRUFBb0IsRUFBcEI7QUFBeUIsT0FBL0M7QUFDQSxhQUFPLE9BQVAsQ0FBZSxjQUFNO0FBQUUsZ0JBQVEsR0FBUixDQUFZLE9BQVosRUFBcUIsRUFBckI7QUFBMEIsT0FBakQ7QUFDQSxhQUFPLE9BQVAsQ0FBZSxjQUFNO0FBQUUsZ0JBQVEsR0FBUixDQUFZLE9BQVosRUFBcUIsRUFBckI7QUFBMEIsT0FBakQ7O0FBRUEsV0FBSyxJQUFMLEdBQVksT0FBTyxPQUFQLGNBQTBCLFNBQTFCLEVBQXVDLEVBQXZDLENBQVo7QUFDQSxXQUFLLElBQUwsQ0FBVSxJQUFWO0FBQ0EsV0FBSyxJQUFMLENBQVUsT0FBVixDQUFrQjtBQUFBLGVBQUssUUFBUSxHQUFSLENBQVksc0JBQVosRUFBb0MsQ0FBcEMsQ0FBTDtBQUFBLE9BQWxCO0FBQ0EsV0FBSyxJQUFMLENBQVUsT0FBVixDQUFrQjtBQUFBLGVBQUssUUFBUSxHQUFSLENBQVksZ0JBQVosRUFBOEIsQ0FBOUIsQ0FBTDtBQUFBLE9BQWxCO0FBQ0Q7QUFDRjs7Ozt3QkFFRyxDLEVBQUc7QUFDTCxVQUFJLHlEQUFRLFFBQVosRUFBc0I7QUFDcEIsWUFBTSxVQUFhLEtBQUssS0FBTCxDQUFXLEVBQUUsSUFBYixDQUFiLFNBQW1DLEtBQUssS0FBTCxDQUFXLEVBQUUsR0FBYixDQUF6QztBQUNBLGFBQUssSUFBTCxDQUFVLElBQVYsQ0FBZSxXQUFmLEVBQTRCLEVBQUUsU0FBUyxPQUFYLEVBQTVCO0FBQ0Q7QUFDRjs7OzBCQUVLLEcsRUFBSzs7QUFFVCxhQUFPLE9BQU8sR0FBUCxFQUFZLE9BQVosQ0FBb0IsSUFBcEIsRUFBMEIsT0FBMUIsRUFBbUMsT0FBbkMsQ0FBMkMsSUFBM0MsRUFBaUQsTUFBakQsRUFBeUQsT0FBekQsQ0FBaUUsSUFBakUsRUFBdUUsTUFBdkUsRUFBK0UsT0FBL0UsQ0FBdUYsSUFBdkYsRUFBNkYsUUFBN0YsQ0FBUDtBQUNEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NENBN0JrQixNIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU29ja2V0IH0gZnJvbSBcInBob2VuaXhcIjtcbmltcG9ydCBjb25maWdzIGZyb20gXCIuL2NvbmZpZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2dnZXIge1xuICBjb25zdHJ1Y3RvcihzZXNzaW9uSWQpIHtcbiAgICBpZiAoY29uZmlncy5sb2dnZXJPbikge1xuICAgICAgY29uc3Qgc29ja2V0ID0gbmV3IFNvY2tldChjb25maWdzLmxvZ2dlclNlcnZlciwge1xuICAgICAgICBsb2dnZXI6ICgoa2luZCwgbXNnLCBkYXRhKSA9PiB7IGNvbnNvbGUubG9nKGAke2tpbmR9OiAke21zZ31gLCBkYXRhKSB9KVxuICAgICAgfSk7XG5cbiAgICAgIHNvY2tldC5jb25uZWN0KCk7XG4gICAgICBzb2NrZXQub25PcGVuKGV2ID0+IHsgY29uc29sZS5sb2coXCJPUEVOXCIsIGV2KSB9KTtcbiAgICAgIHNvY2tldC5vbkVycm9yKGV2ID0+IHsgY29uc29sZS5sb2coXCJFUlJPUlwiLCBldikgfSk7XG4gICAgICBzb2NrZXQub25DbG9zZShldiA9PiB7IGNvbnNvbGUubG9nKFwiQ0xPU0VcIiwgZXYpIH0pO1xuXG4gICAgICB0aGlzLmNoYW4gPSBzb2NrZXQuY2hhbm5lbChgc2Vzc2lvbjoke3Nlc3Npb25JZH1gLCB7fSk7XG4gICAgICB0aGlzLmNoYW4uam9pbigpO1xuICAgICAgdGhpcy5jaGFuLm9uRXJyb3IoZSA9PiBjb25zb2xlLmxvZyhcInNvbWV0aGluZyB3ZW50IHdyb25nXCIsIGUpKTtcbiAgICAgIHRoaXMuY2hhbi5vbkNsb3NlKGUgPT4gY29uc29sZS5sb2coXCJjaGFubmVsIGNsb3NlZFwiLCBlKSk7XG4gICAgfVxuICB9XG5cbiAgbG9nKGUpIHtcbiAgICBpZiAoY29uZmlncy5sb2dnZXJPbikge1xuICAgICAgY29uc3QgbWVzc2FnZSA9IGAke3RoaXMuc3RyaXAoZS50eXBlKX06JHt0aGlzLnN0cmlwKGUubXNnKX1gO1xuICAgICAgdGhpcy5jaGFuLnB1c2goXCJsb2c6ZXZlbnRcIiwgeyBtZXNzYWdlOiBtZXNzYWdlIH0pO1xuICAgIH1cbiAgfVxuXG4gIHN0cmlwKHN0cikge1xuICAgIC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTQxMjk5NTMvaG93LXRvLWVuY29kZS1hLXN0cmluZy1pbi1qYXZhc2NyaXB0LWZvci1kaXNwbGF5aW5nLWluLWh0bWxcbiAgICByZXR1cm4gU3RyaW5nKHN0cikucmVwbGFjZSgvJi9nLCAnJmFtcDsnKS5yZXBsYWNlKC88L2csICcmbHQ7JykucmVwbGFjZSgvPi9nLCAnJmd0OycpLnJlcGxhY2UoL1wiL2csICcmcXVvdDsnKTtcbiAgfVxufVxuXG4vLyAgIHRoaXMuc3VibWl0ID0gZnVuY3Rpb24odXNlcm5hbWUsIG5hbWUsIHdhbGwsIHN0ZXBzKSB7XG4vLyAgICAgdGhpcy5jaGFuLnB1c2goJ3N0cnVjdDpzdWJtaXQnLCB7IHVzZXJuYW1lOiB0aGlzLnN0cmlwKHVzZXJuYW1lKSwgbmFtZTogdGhpcy5zdHJpcChuYW1lKSwgd2FsbDogdGhpcy5zdHJpcCh3YWxsKSwgc3RlcHM6IHN0ZXBzIH0pO1xuLy8gICB9XG4vL1xuLy8gICB0aGlzLmdldFN0cnVjdHMgPSBmdW5jdGlvbigpIHtcbi8vICAgICB0aGlzLmNoYW4ucHVzaChcInN0cnVjdDppbmRleFwiLCB7fSwgMTAwMDApXG4vLyAgICAgICAucmVjZWl2ZShcIm9rXCIsIGZ1bmN0aW9uKG1zZykge1xuLy8gICAgICAgICB2YXIgc3RydWN0cyA9IG1zZ1tcInN0cnVjdHNcIl07XG4vLyAgICAgICAgIHZhciBzdHJ1Y3RzX2xpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXJfc3RydWN0c1wiKTtcbi8vICAgICAgICAgc3RydWN0c19saXN0LmlubmVySFRNTCA9IFwiXCI7XG4vLyAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RydWN0cy5sZW5ndGg7IGkrKykge1xuLy8gICAgICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuLy8gICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKFwiZGF0YS13YWxsXCIsIHN0cnVjdHNbaV0ud2FsbCk7XG4vLyAgICAgICAgICAgZWxlbS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXN0ZXBzXCIsIHN0cnVjdHNbaV0uc3RlcHMpO1xuLy8gICAgICAgICAgIGVsZW0uaW5uZXJIVE1MID0gXCI8Y2FudmFzIGlkPSd1c2VyY2FudmFzXCIgKyBpICsgXCInIHdpZHRoPScxMDAlJyBoZWlnaHQ9JzEwMHB4Jz48L2NhbnZhcz48YnI+XCIgKyBMb2dnZXIuc3RyaXAoc3RydWN0c1tpXS5uYW1lKSArIFwiIGJ5IFwiICsgTG9nZ2VyLnN0cmlwKHN0cnVjdHNbaV0udXNlcm5hbWUpO1xuLy8gICAgICAgICAgIHN0cnVjdHNfbGlzdC5hcHBlbmRDaGlsZChlbGVtKTtcbi8vICAgICAgICAgICBlbGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBsb2FkU3RydWN0KTtcbi8vICAgICAgICAgICBQUy5NYWluLnJlbmRlclVzZXJUYXJnZXRKU09OKFwiW1wiICsgc3RydWN0c1tpXS53YWxsICsgXCJdXCIpKFwidXNlcmNhbnZhc1wiICsgaSkoKTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgfSk7XG4vLyAgIH1cbi8vIH1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9qcy9sb2dnZXIuanMiXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){"use strict";eval('/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__config__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n\n\nvar SempreClient = function () {\n  function SempreClient() {\n    _classCallCheck(this, SempreClient);\n  }\n\n  _createClass(SempreClient, [{\n    key: "cleanValue",\n    value: function cleanValue(valueString) {\n      if (!valueString) return "";\n\n      return valueString.replace(/edu.stanford.nlp.sempre.cubeworld.CubeWorld./g, "").replace(/edu.stanford.nlp.sempre.cubeworld..*\\./g, "").replace(/edu.stanford.nlp.sempre./g, "").replace(/context:root/g, "").toLowerCase();\n    }\n  }, {\n    key: "formatFormula",\n    value: function formatFormula(formula) {\n      if (typeof formula === "undefined") return "";\n      if (typeof formula === "string") return this.cleanValue(formula);\n\n      var head = formula[0];\n      var str = "";\n      if (head === "call") {\n        var op = this.formatFormula(formula[1]);\n\n        if (op === ".concat") {\n          str = this.formatFormula(formula[2]) + " " + this.formatFormula(formula[3]);\n        } else if (op === ".tostring") {\n          str = this.formatFormula(formula[2]);\n        } else {\n          // Default behavior just exposes the function call\n          var arglist = [];\n          for (var i = -2; i < formula.length; i++) {\n            arglist.push(this.formatFormula(formula[i]));\n          }\n          str = op + "(" + arglist.join(",") + ")";\n        }\n      } else if (head === "number") {\n        str = formula[1];\n      } else if (head === "name" || head === "string") {\n        str = this.cleanValue(formula[1]);\n      } else {\n        str = this.cleanValue(formula[0]);\n      }\n      return str;\n    }\n  }, {\n    key: "formatValue",\n    value: function formatValue(value) {\n      if (typeof value === "undefined") return "";\n      // "[[5,5,1,\\"Blue\\",[]],[5,5,2,\\"Red\\",[]],[5,4,2,\\"Green\\",[]]]"\n      var valueArray = JSON.parse(value);\n\n      // const valueArray = [[1, 1, 0, "Red", []], [1, 1, 1, "Orange", []]];\n\n      return valueArray.map(function (c) {\n        return {\n          x: c[0],\n          y: c[1],\n          z: c[2],\n          color: c[3],\n          names: c[4]\n        };\n      });\n\n      // const head = value[0];\n      // let str = "";\n      // switch (head) {\n      //   case "list": {\n      //     const elements = [];\n      //     for (let i = 1; i < value.length; i++) {\n      //       elements.push(this.formatValue(value[i], value.length));\n      //     }\n      //     str = `[${elements.join(", ")}]`;\n      //     break;\n      //   }\n      //   case "table": {\n      //     const headers = value[1];\n      //     for (let j = 0; j < headers.length; j++) {\n      //       str += `{${value[1][j]}\\t `;\n      //     }\n      //     str += "\\n";\n      //     for (let i = 2; i < value.length; i++) {\n      //       for (let j = 0; j < headers.length; j++) {\n      //         str += `${this.formatValue(value[i][j], value.length)}\\t `;\n      //       }\n      //       str += "\\n";\n      //     }\n      //     break;\n      //   }\n      //   case "number": {\n      //     str = this.cleanValue(value[1]);\n      //     break;\n      //   }\n      //   case "name": {\n      //     str = this.cleanValue(value[1]);\n      //     break;\n      //   }\n      //   default: {\n      //     str = this.cleanValue(value[1]);\n      //   }\n      // }\n      // return str;\n    }\n  }, {\n    key: "combine",\n    value: function combine(vsTmp, v) {\n      var vs = vsTmp;\n      if (vs === undefined) {\n        vs = {};\n        vs.value = v.value;\n        vs.formula = v.formula;\n        vs.formulas = [vs.formula];\n        vs.prob = parseFloat(v.prob);\n        vs.probs = [v.prob];\n        vs.pprob = parseFloat(v.pprob);\n        vs.pprobs = [v.pprob];\n        vs.score = parseFloat(v.score);\n        vs.rank = v.rank;\n        vs.count = 1;\n        vs.maxprob = parseFloat(v.prob);\n        vs.maxpprob = parseFloat(v.pprob);\n      } else {\n        vs.value = v.value;\n        vs.prob += parseFloat(v.prob);\n        vs.pprob += parseFloat(v.pprob);\n\n        vs.score = Math.max(vs.score, parseFloat(v.score));\n        vs.maxprob = Math.max(vs.maxprob, parseFloat(v.prob));\n        vs.maxpprob = Math.max(vs.maxpprob, parseFloat(v.pprob));\n        vs.rank = Math.min(vs.rank, v.rank);\n        vs.probs.push(v.prob);\n        vs.formulas.push(v.formula);\n        vs.count += 1;\n      }\n      return vs;\n    }\n  }, {\n    key: "parseSEMPRE",\n    value: function parseSEMPRE(valid) {\n      var _this = this;\n\n      var lstqapairs = [];\n      if (valid.length === 0) return undefined;\n\n      for (var i = 0; i < valid.length; i++) {\n        var qapair = {};\n        qapair.value = this.formatValue(valid[i].value);\n        qapair.formula = this.formatFormula(valid[i].formula);\n        // qapair.raw = valid[i];\n        qapair.score = valid[i].score.toFixed(7);\n        qapair.rank = i;\n        qapair.prob = valid[i].prob;\n        qapair.pprob = valid[i].pprob;\n        lstqapairs.push(qapair);\n      }\n\n      var nbestdict = lstqapairs.reduce(function (nbd, nbest) {\n        var mynbd = nbd;\n        mynbd[nbest.value] = _this.combine(nbd[nbest.value], nbest);\n        return mynbd;\n      }, {});\n\n      var listqadedup = [];\n      for (var key in nbestdict) {\n        listqadedup.push(nbestdict[key]);\n      }\n      listqadedup.sort(function (a, b) {\n        return b.score - a.score + 1e-3 * (a.rank - b.rank);\n      });\n      return listqadedup;\n    }\n  }, {\n    key: "sempreFormat",\n    value: function sempreFormat(ques) {\n      return ques.replace(/\\+/g, " __+ ").replace(/\\(/g, " [ ").replace(/\\)/g, " ] ").replace(/\\+/g, " + ").replace(/-/g, " - ").replace(/\\*/g, " * ").replace(/\\//g, " / ");\n    }\n  }, {\n    key: "formatQuery",\n    value: function formatQuery(ques) {\n      var sanity = ques.replace(/(\\+|-|%)/g, " $1 ").replace(/(\\(|\\))/g, "").replace(/"/g, "").replace(/=/g, "= ").replace(/(>|<)/g, " $1").replace(/(>|<)(?!=)/g, "$1 ").replace(/([^><])=/g, "$1 =");\n      if (__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].debugMode) {\n        console.log(sanity);\n      }\n      return sanity;\n    }\n  }, {\n    key: "query",\n    value: function query(cmds, callback) {\n      var cmdstr = [];\n      for (var k in cmds) {\n        cmdstr.push(k + "=" + encodeURIComponent(cmds[k]));\n      }\n\n      fetch(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].SEMPRE_URL + "/sempre?format=lisp2json&" + cmdstr.join("&")).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return callback(json);\n      });\n      // .catch((ex) => {\n      //   console.log("xmlhttp issue?", ex);\n      // });\n    }\n  }]);\n\n  return SempreClient;\n}();\n\n/* harmony default export */ exports["a"] = SempreClient;//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports,__webpack_require__){"use strict";eval('/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__config__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_isomer__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_isomer___default = __WEBPACK_IMPORTED_MODULE_2_isomer__ && __WEBPACK_IMPORTED_MODULE_2_isomer__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_2_isomer__[\'default\'] } : function() { return __WEBPACK_IMPORTED_MODULE_2_isomer__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_2_isomer___default, \'a\', __WEBPACK_IMPORTED_MODULE_2_isomer___default);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n\n\n\n\n\n/* eslint-disable new-cap */\n\nvar Setting = function () {\n  function Setting() {\n    _classCallCheck(this, Setting);\n\n    this.iso = new __WEBPACK_IMPORTED_MODULE_2_isomer___default.a(document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].mainCanvas));\n    this.isoTarget = new __WEBPACK_IMPORTED_MODULE_2_isomer___default.a(document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].targetCanvas));\n    this.basicUnit = 0.8;\n    this.width = 10;\n    this.borderWidth = -0.15;\n    this.baseHeight = 0.1;\n    this.centerPoint = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_isomer__["Point"])(this.width / 2, this.width / 2, this.width / 2);\n    this.rotation = Math.PI / 12;\n    this.rotational = "A";\n    this.targetScale = 0.5;\n    this.targetTranslate = -2;\n\n    this.renderCanvas(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].defaultStruct);\n    this.renderTarget(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].defaultStruct);\n  }\n\n  _createClass(Setting, [{\n    key: "renderTarget",\n    value: function renderTarget(state) {\n      this.renderBoard(this.isoTarget, this.targetScale, this.targetTranslate);\n      this.renderBlocks(this.isoTarget, state, this.targetScale, this.targetTranslate);\n    }\n  }, {\n    key: "renderCanvas",\n    value: function renderCanvas(state) {\n      this.renderBoard(this.iso);\n      this.renderBlocks(this.iso, state);\n    }\n  }, {\n    key: "renderBoard",\n    value: function renderBoard(iso) {\n      var scalingFactor = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];\n      var translateFactor = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n      iso.canvas.clear();\n      var translateBy = translateFactor * this.basicUnit * scalingFactor;\n      for (var x = this.width - 1; x >= 0; x--) {\n        for (var y = this.width - 1; y >= 0; y--) {\n          iso.add(__WEBPACK_IMPORTED_MODULE_2_isomer__["Shape"].Prism(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_isomer__["Point"])((x + this.borderWidth * x) * scalingFactor, (y + this.borderWidth * y) * scalingFactor, 0), this.basicUnit * scalingFactor, this.basicUnit * scalingFactor, this.baseHeight * scalingFactor).rotateZ(this.centerPoint, this.rotation).translate(translateBy, -translateBy, -4.5 * translateBy), new __WEBPACK_IMPORTED_MODULE_2_isomer__["Color"](144, 144, 144));\n        }\n      }\n    }\n  }, {\n    key: "renderBlocks",\n    value: function renderBlocks(iso, state) {\n      var _this = this;\n\n      var scalingFactor = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\n      var translateFactor = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n\n      var blocks = this.sortBlocks(state.map(function (b) {\n        var x = b.x;\n        var y = b.y;\n\n        switch (_this.rotational) {\n          case -1:\n            x = b.x;\n            y = b.y;\n            break;\n          case -2:\n            x = b.y;\n            y = _this.width - 1 - b.x;\n            break;\n          case 1:\n            x = _this.width - 1 - b.y;\n            y = b.x;\n            break;\n          case 2:\n            x = _this.width - 1 - b.x;\n            y = _this.width - 1 - b.y;\n            break;\n          default:\n        }\n\n        return _extends({}, b, { x: x, y: y });\n      }));\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var block = _step.value;\n\n          var color = __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].colorMap[block.color];\n          var blockColor = new __WEBPACK_IMPORTED_MODULE_2_isomer__["Color"]();\n          if (block.names && block.names.includes("_new")) {\n            blockColor = new __WEBPACK_IMPORTED_MODULE_2_isomer__["Color"](color[0], color[1], color[2], 0.4);\n          } else {\n            blockColor = new __WEBPACK_IMPORTED_MODULE_2_isomer__["Color"](color[0], color[1], color[2]);\n          }\n          iso.add(this.makeBlock(block.x, block.y, block.z, scalingFactor, translateFactor), blockColor);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: "makeBlock",\n    value: function makeBlock(x, y, z) {\n      var scalingFactor = arguments.length <= 3 || arguments[3] === undefined ? 1 : arguments[3];\n      var translateFactor = arguments.length <= 4 || arguments[4] === undefined ? 0 : arguments[4];\n\n      var translateBy = translateFactor * this.basicUnit * scalingFactor;\n\n      return __WEBPACK_IMPORTED_MODULE_2_isomer__["Shape"].Prism(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_isomer__["Point"])((x + x * this.borderWidth) * scalingFactor, (y + y * this.borderWidth) * scalingFactor, (z + this.baseHeight + this.borderWidth * z) * scalingFactor), this.basicUnit * scalingFactor, this.basicUnit * scalingFactor, this.basicUnit * scalingFactor).rotateZ(this.centerPoint, this.rotation).translate(translateBy, -translateBy, -4.5 * translateBy);\n    }\n  }, {\n    key: "sortBlocks",\n    value: function sortBlocks(blocks) {\n      return blocks.sort(function (a, b) {\n        if (a.z > b.z) {\n          return 1;\n        } else if (a.z < b.z) {\n          return -1;\n        }\n\n        if (a.x > b.x) {\n          return -1;\n        } else if (a.x < b.x) {\n          return 1;\n        }\n\n        if (a.y > b.y) {\n          return -1;\n        } else if (a.y < b.y) {\n          return 1;\n        }\n\n        return 0;\n      });\n    }\n  }, {\n    key: "stateIncludes",\n    value: function stateIncludes(state, obj) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = state[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var c = _step2.value;\n\n          if (c.x === obj.x && c.y === obj.y && c.z === obj.z && c.color === obj.color) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: "computeDiff",\n    value: function computeDiff(state, newState) {\n      var _this2 = this;\n\n      var difference = newState.filter(function (c) {\n        return !_this2.stateIncludes(state, c);\n      });\n      var intersection = state.filter(function (c) {\n        return _this2.stateIncludes(newState, c);\n      });\n\n      return difference.map(function (c) {\n        return Object.assign({}, c, { names: [].concat(_toConsumableArray(c.names), ["_new"]) });\n      }).concat(intersection);\n    }\n  }, {\n    key: "equalityCheck",\n    value: function equalityCheck(struct1, struct2) {\n      return struct1 === struct2;\n    }\n  }, {\n    key: "status",\n    value: function status(msg) {\n      var query = arguments.length <= 1 || arguments[1] === undefined ? "" : arguments[1];\n      var prob = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n      var status = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].statusElemId);\n      var currentcmd = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].currentCmdElemId);\n      status.innerHTML = msg;\n\n      if (query.length > 0) {\n        var stateinfo = "<b>↵: " + query + "</b>";\n        // TODO: if Answer: stateinfo = "<b>↵: {query} (#{NBestInd}/{NBestlen})</b>"\n        currentcmd.innerHTML = stateinfo;\n      } else {\n        currentcmd.innerHTML = "<b>enter a command</b>";\n      }\n\n      this.updateReaction(prob);\n    }\n  }, {\n    key: "updateReaction",\n    value: function updateReaction(prob) {\n      var reaction = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].reactionElemId);\n      if (prob === 0) {\n        reaction.innerHTML = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__["c" /* emojione */])(3);\n      } else {\n        (function () {\n          var cc = prob;\n          if (!cc) {\n            cc = 0;\n          }\n          var cutoffs = [0.5, 0.1, 0.05, 0.01, 0.001, 0.00001, -1];\n          reaction.innerHTML = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__["c" /* emojione */])(cutoffs.findIndex(function (val) {\n            return cc >= val;\n          }));\n        })();\n      }\n    }\n  }, {\n    key: "renderHistory",\n    value: function renderHistory(history) {\n      var historyElem = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].historyElemId);\n      historyElem.innerHTML = "";\n\n      for (var i = history.length - 1; i >= 0; i--) {\n        var elem = document.createElement("div");\n        elem.setAttribute("data-type", history[i].type);\n        elem.setAttribute("data-stepN", history[i].stepN);\n        if (history[i].type === "accept") {\n          elem.innerHTML = history[i].stepN + ". " + history[i].query;\n        } else {\n          elem.innerHTML = history[i].query;\n        }\n        historyElem.appendChild(elem);\n      }\n    }\n  }, {\n    key: "setSteps",\n    value: function setSteps(poss, max) {\n      var possSteps = document.querySelectorAll("." + __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].possStepsElemId);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = possSteps[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var possStep = _step3.value;\n\n          possStep.innerHTML = poss;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var maxSteps = document.querySelectorAll("." + __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].maxStepsElemId);\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = maxSteps[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var maxStep = _step4.value;\n\n          maxStep.innerHTML = max;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n  }, {\n    key: "updateSteps",\n    value: function updateSteps(steps) {\n      var currSteps = document.querySelectorAll("." + __WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.currSteps);\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = currSteps[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var currStep = _step5.value;\n\n          currStep.innerHTML = steps;\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n  }, {\n    key: "openDefineInterface",\n    value: function openDefineInterface(query, canAnswer, coverage) {\n      if (query.length === 0) {\n        this.status("nothing to define");\n        return false;\n      }\n\n      var defineInterface = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.defineInterface);\n      defineInterface.classList.add("active");\n\n      var defineStatus = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.defineStatus);\n      defineStatus.innerHTML = "Teach SHRDLURN " + query + ".";\n\n      var toggleButton = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].buttons.toggleDefine);\n      toggleButton.innerHTML = "Return";\n\n      this.removePromptDefine();\n\n      this.tryDefine(query, false, canAnswer, coverage);\n\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.defineConsole).focus();\n      return true;\n    }\n  }, {\n    key: "closeDefineInterface",\n    value: function closeDefineInterface() {\n      var defineInterface = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.defineInterface);\n      defineInterface.classList.remove("active");\n\n      var toggleButton = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].buttons.toggleDefine);\n      toggleButton.innerHTML = "Define";\n\n      this.removePromptDefine();\n\n      var consoleElem = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.console);\n      consoleElem.focus();\n    }\n  }, {\n    key: "tryDefine",\n    value: function tryDefine(query, refineDefine, canAnswer) {\n      var coverage = arguments.length <= 3 || arguments[3] === undefined ? [] : arguments[3];\n      var commandResponse = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];\n      var oldQuery = arguments.length <= 5 || arguments[5] === undefined ? "" : arguments[5];\n\n      var defineHeader = document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.defineHeader);\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.definePrompt).classList.add("hidden");\n\n      if (!refineDefine) {\n        if (canAnswer) {\n          defineHeader.innerHTML = "Already understand " + query + ", teach another meaning?";\n        } else {\n          defineHeader.innerHTML = "Didn\'t understand \\"" + this.intelHighlight(coverage) + "\\". Please rephrase:";\n        }\n      } else {\n        if (canAnswer) {\n          defineHeader.innerHTML = "SHRDLURN understands the definition, \\"" + query + "\\". If this is correct, click \\"define\\" to submit the definition.";\n        } else {\n          defineHeader.innerHTML = "Still don\'t understand \\"" + this.intelHighlight(coverage) + "\\". Please rephrase:";\n        }\n\n        // Special Status\n        if (commandResponse.length > 0) {\n          var defCore = commandResponse.indexOf("Core") !== -1;\n          var defNoCover = commandResponse.indexOf("NoCover") !== -1;\n          if (defCore) {\n            // updateStatus("cannot redefine the core language!");\n            defineHeader.innerHTML = "\\"" + oldQuery + "\\" is precisely understood, and cannot be redefined by \\"" + this.intelHighlight(coverage) + "\\".";\n          } else if (defNoCover) {\n            // updateStatus("SHRDLRUN cannot learn from this definition");\n            defineHeader.innerHTML = "Nothing (colors, numbers, etc) in \\"" + this.intelHighlight(coverage) + "\\" matches \\"" + oldQuery + "\\", so SHRDLURN cannot learn from this.";\n          }\n        }\n      }\n    }\n  }, {\n    key: "intelHighlight",\n    value: function intelHighlight(coverage) {\n      var coloredQuery = "";\n      for (var i = 0; i < coverage.length; i++) {\n        var type = coverage[i][0];\n        switch (type) {\n          case "$ActionSeq":\n            coloredQuery += "<span class=\'color-good\'>";\n            break;\n          case "$Action":\n            coloredQuery += "<span class=\'color-good\'>";\n            break;\n          case "$CondSeq":\n            coloredQuery += "<span class=\'color-good\'>";\n            break;\n          case "$Cond":\n            coloredQuery += "<span class=\'color-good\'>";\n            break;\n          case "$NumberSeq":\n            coloredQuery += "<span class=\'color-good\'>";\n            break;\n          case "$Number":\n            coloredQuery += "<span class=\'color-good\'>";\n            break;\n          case "$Color":\n            coloredQuery += "<span style=\'color:blue;\'>";\n            break;\n          case "$Keyword":\n            coloredQuery += "<span style=\'color:blue;\'>";\n            break;\n          case "$UNK":\n            coloredQuery += "<span style=\'color:red;\'>";\n            break;\n          default:\n            coloredQuery += "<span style=\'color:red;\'>";\n        }\n        for (var j = 1; j < coverage[i].length; j++) {\n          coloredQuery += coverage[i][j] + " ";\n        }\n        coloredQuery += "</span>";\n      }\n      return coloredQuery;\n    }\n  }, {\n    key: "revertHistory",\n    value: function revertHistory(index, game) {\n      var newGame = game;\n\n      var historyElems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__["d" /* getHistoryElems */])();\n      var state = newGame.history.find(function (h) {\n        return h.stepN === parseInt(historyElems[index].getAttribute("data-stepN"), 10);\n      });\n      newGame.currentState = state.state;\n      newGame.update();\n\n      var newHistoryElems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__["d" /* getHistoryElems */])();\n      newHistoryElems[index].classList.add("active");\n\n      return newGame;\n    }\n  }, {\n    key: "promptDefine",\n    value: function promptDefine() {\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.definePrompt).classList.remove("hidden");\n    }\n  }, {\n    key: "removePromptDefine",\n    value: function removePromptDefine() {\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.definePrompt).classList.add("hidden");\n    }\n  }, {\n    key: "setSkips",\n    value: function setSkips(skipsLeft) {\n      var skipsLeftElem = document.getElementById("skips_left");\n      if (skipsLeft !== 0) {\n        skipsLeftElem.innerHTML = skipsLeft;\n      } else {\n        document.getElementById("skip_button").classList.add("hidden");\n      }\n    }\n  }, {\n    key: "promptAccept",\n    value: function promptAccept() {\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.consoleGroup).classList.add("accepting");\n    }\n  }, {\n    key: "removeAccept",\n    value: function removeAccept() {\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].elems.consoleGroup).classList.remove("accepting");\n    }\n  }, {\n    key: "promptTryDefine",\n    value: function promptTryDefine() {\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].buttons.tryDefine).classList.add("active");\n    }\n  }, {\n    key: "toggleDefineButton",\n    value: function toggleDefineButton() {\n      document.getElementById(__WEBPACK_IMPORTED_MODULE_0__config__["a" /* default */].buttons.define).classList.add("active");\n    }\n  }, {\n    key: "rotate",\n    value: function rotate(rotation) {\n      this.rotational = parseInt(rotation, 10);\n    }\n  }]);\n\n  return Setting;\n}();\n\n/* harmony default export */ exports["a"] = Setting;//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},function(module,exports){eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports,__webpack_require__){eval("/**\n * Entry point for the Isomer API\n */\nmodule.exports = __webpack_require__(17);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lzb21lci9pbmRleC5qcz9iYjNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFbnRyeSBwb2ludCBmb3IgdGhlIElzb21lciBBUElcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2pzL2lzb21lcicpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lzb21lci9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval("function Canvas(elem) {\n  this.elem = elem;\n  this.ctx = this.elem.getContext('2d');\n\n  this.width = elem.width;\n  this.height = elem.height;\n}\n\nCanvas.prototype.clear = function() {\n  this.ctx.clearRect(0, 0, this.width, this.height);\n};\n\nCanvas.prototype.path = function(points, color) {\n  this.ctx.beginPath();\n  this.ctx.moveTo(points[0].x, points[0].y);\n\n  for (var i = 1; i < points.length; i++) {\n    this.ctx.lineTo(points[i].x, points[i].y);\n  }\n\n  this.ctx.closePath();\n\n  /* Set the strokeStyle and fillStyle */\n  this.ctx.save();\n\n  this.ctx.globalAlpha = color.a;\n  this.ctx.fillStyle = this.ctx.strokeStyle = color.toHex();\n  this.ctx.stroke();\n  this.ctx.fill();\n  this.ctx.restore();\n};\n\nmodule.exports = Canvas;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lzb21lci9qcy9jYW52YXMuanM/ODkwNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLG1CQUFtQjtBQUNwQztBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gQ2FudmFzKGVsZW0pIHtcbiAgdGhpcy5lbGVtID0gZWxlbTtcbiAgdGhpcy5jdHggPSB0aGlzLmVsZW0uZ2V0Q29udGV4dCgnMmQnKTtcblxuICB0aGlzLndpZHRoID0gZWxlbS53aWR0aDtcbiAgdGhpcy5oZWlnaHQgPSBlbGVtLmhlaWdodDtcbn1cblxuQ2FudmFzLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLmN0eC5jbGVhclJlY3QoMCwgMCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xufTtcblxuQ2FudmFzLnByb3RvdHlwZS5wYXRoID0gZnVuY3Rpb24ocG9pbnRzLCBjb2xvcikge1xuICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcbiAgdGhpcy5jdHgubW92ZVRvKHBvaW50c1swXS54LCBwb2ludHNbMF0ueSk7XG5cbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBwb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICB0aGlzLmN0eC5saW5lVG8ocG9pbnRzW2ldLngsIHBvaW50c1tpXS55KTtcbiAgfVxuXG4gIHRoaXMuY3R4LmNsb3NlUGF0aCgpO1xuXG4gIC8qIFNldCB0aGUgc3Ryb2tlU3R5bGUgYW5kIGZpbGxTdHlsZSAqL1xuICB0aGlzLmN0eC5zYXZlKCk7XG5cbiAgdGhpcy5jdHguZ2xvYmFsQWxwaGEgPSBjb2xvci5hO1xuICB0aGlzLmN0eC5maWxsU3R5bGUgPSB0aGlzLmN0eC5zdHJva2VTdHlsZSA9IGNvbG9yLnRvSGV4KCk7XG4gIHRoaXMuY3R4LnN0cm9rZSgpO1xuICB0aGlzLmN0eC5maWxsKCk7XG4gIHRoaXMuY3R4LnJlc3RvcmUoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FudmFzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lzb21lci9qcy9jYW52YXMuanNcbi8vIG1vZHVsZSBpZCA9IDE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval("/**\n * A color instantiated with RGB between 0-255\n *\n * Also holds HSL values\n */\nfunction Color(r, g, b, a) {\n  this.r = parseInt(r || 0);\n  this.g = parseInt(g || 0);\n  this.b = parseInt(b || 0);\n  this.a = parseFloat((Math.round(a * 100) / 100 || 1));\n\n  this.loadHSL();\n};\n\nColor.prototype.toHex = function() {\n  // Pad with 0s\n  var hex = (this.r * 256 * 256 + this.g * 256 + this.b).toString(16);\n\n  if (hex.length < 6) {\n    hex = new Array(6 - hex.length + 1).join('0') + hex;\n  }\n\n  return '#' + hex;\n};\n\n\n/**\n * Returns a lightened color based on a given percentage and an optional\n * light color\n */\nColor.prototype.lighten = function(percentage, lightColor) {\n  lightColor = lightColor || new Color(255, 255, 255);\n\n  var newColor = new Color(\n    (lightColor.r / 255) * this.r,\n    (lightColor.g / 255) * this.g,\n    (lightColor.b / 255) * this.b,\n    this.a\n  );\n\n  newColor.l = Math.min(newColor.l + percentage, 1);\n\n  newColor.loadRGB();\n  return newColor;\n};\n\n\n/**\n * Loads HSL values using the current RGB values\n * Converted from:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n */\nColor.prototype.loadHSL = function() {\n  var r = this.r / 255;\n  var g = this.g / 255;\n  var b = this.b / 255;\n\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n\n  var h, s, l = (max + min) / 2;\n\n  if (max === min) {\n    h = s = 0;  // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n      case g: h = (b - r) / d + 2; break;\n      case b: h = (r - g) / d + 4; break;\n    }\n\n    h /= 6;\n  }\n\n  this.h = h;\n  this.s = s;\n  this.l = l;\n};\n\n\n/**\n * Reloads RGB using HSL values\n * Converted from:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n */\nColor.prototype.loadRGB = function() {\n  var r, g, b;\n  var h = this.h;\n  var s = this.s;\n  var l = this.l;\n\n  if (s === 0) {\n    r = g = b = l;  // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = this._hue2rgb(p, q, h + 1 / 3);\n    g = this._hue2rgb(p, q, h);\n    b = this._hue2rgb(p, q, h - 1 / 3);\n  }\n\n  this.r = parseInt(r * 255);\n  this.g = parseInt(g * 255);\n  this.b = parseInt(b * 255);\n};\n\n\n/**\n * Helper function to convert hue to rgb\n * Taken from:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n */\nColor.prototype._hue2rgb = function(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n};\n\nmodule.exports = Color;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lzb21lci9qcy9jb2xvci5qcz8yODMzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxjQUFjO0FBQ2QsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsa0NBQWtDO0FBQ2xDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCO0FBQ2xCLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIGNvbG9yIGluc3RhbnRpYXRlZCB3aXRoIFJHQiBiZXR3ZWVuIDAtMjU1XG4gKlxuICogQWxzbyBob2xkcyBIU0wgdmFsdWVzXG4gKi9cbmZ1bmN0aW9uIENvbG9yKHIsIGcsIGIsIGEpIHtcbiAgdGhpcy5yID0gcGFyc2VJbnQociB8fCAwKTtcbiAgdGhpcy5nID0gcGFyc2VJbnQoZyB8fCAwKTtcbiAgdGhpcy5iID0gcGFyc2VJbnQoYiB8fCAwKTtcbiAgdGhpcy5hID0gcGFyc2VGbG9hdCgoTWF0aC5yb3VuZChhICogMTAwKSAvIDEwMCB8fCAxKSk7XG5cbiAgdGhpcy5sb2FkSFNMKCk7XG59O1xuXG5Db2xvci5wcm90b3R5cGUudG9IZXggPSBmdW5jdGlvbigpIHtcbiAgLy8gUGFkIHdpdGggMHNcbiAgdmFyIGhleCA9ICh0aGlzLnIgKiAyNTYgKiAyNTYgKyB0aGlzLmcgKiAyNTYgKyB0aGlzLmIpLnRvU3RyaW5nKDE2KTtcblxuICBpZiAoaGV4Lmxlbmd0aCA8IDYpIHtcbiAgICBoZXggPSBuZXcgQXJyYXkoNiAtIGhleC5sZW5ndGggKyAxKS5qb2luKCcwJykgKyBoZXg7XG4gIH1cblxuICByZXR1cm4gJyMnICsgaGV4O1xufTtcblxuXG4vKipcbiAqIFJldHVybnMgYSBsaWdodGVuZWQgY29sb3IgYmFzZWQgb24gYSBnaXZlbiBwZXJjZW50YWdlIGFuZCBhbiBvcHRpb25hbFxuICogbGlnaHQgY29sb3JcbiAqL1xuQ29sb3IucHJvdG90eXBlLmxpZ2h0ZW4gPSBmdW5jdGlvbihwZXJjZW50YWdlLCBsaWdodENvbG9yKSB7XG4gIGxpZ2h0Q29sb3IgPSBsaWdodENvbG9yIHx8IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1KTtcblxuICB2YXIgbmV3Q29sb3IgPSBuZXcgQ29sb3IoXG4gICAgKGxpZ2h0Q29sb3IuciAvIDI1NSkgKiB0aGlzLnIsXG4gICAgKGxpZ2h0Q29sb3IuZyAvIDI1NSkgKiB0aGlzLmcsXG4gICAgKGxpZ2h0Q29sb3IuYiAvIDI1NSkgKiB0aGlzLmIsXG4gICAgdGhpcy5hXG4gICk7XG5cbiAgbmV3Q29sb3IubCA9IE1hdGgubWluKG5ld0NvbG9yLmwgKyBwZXJjZW50YWdlLCAxKTtcblxuICBuZXdDb2xvci5sb2FkUkdCKCk7XG4gIHJldHVybiBuZXdDb2xvcjtcbn07XG5cblxuLyoqXG4gKiBMb2FkcyBIU0wgdmFsdWVzIHVzaW5nIHRoZSBjdXJyZW50IFJHQiB2YWx1ZXNcbiAqIENvbnZlcnRlZCBmcm9tOlxuICogaHR0cDovL2F4b25mbHV4LmNvbS9oYW5keS1yZ2ItdG8taHNsLWFuZC1yZ2ItdG8taHN2LWNvbG9yLW1vZGVsLWNcbiAqL1xuQ29sb3IucHJvdG90eXBlLmxvYWRIU0wgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHIgPSB0aGlzLnIgLyAyNTU7XG4gIHZhciBnID0gdGhpcy5nIC8gMjU1O1xuICB2YXIgYiA9IHRoaXMuYiAvIDI1NTtcblxuICB2YXIgbWF4ID0gTWF0aC5tYXgociwgZywgYik7XG4gIHZhciBtaW4gPSBNYXRoLm1pbihyLCBnLCBiKTtcblxuICB2YXIgaCwgcywgbCA9IChtYXggKyBtaW4pIC8gMjtcblxuICBpZiAobWF4ID09PSBtaW4pIHtcbiAgICBoID0gcyA9IDA7ICAvLyBhY2hyb21hdGljXG4gIH0gZWxzZSB7XG4gICAgdmFyIGQgPSBtYXggLSBtaW47XG4gICAgcyA9IGwgPiAwLjUgPyBkIC8gKDIgLSBtYXggLSBtaW4pIDogZCAvIChtYXggKyBtaW4pO1xuICAgIHN3aXRjaCAobWF4KSB7XG4gICAgICBjYXNlIHI6IGggPSAoZyAtIGIpIC8gZCArIChnIDwgYiA/IDYgOiAwKTsgYnJlYWs7XG4gICAgICBjYXNlIGc6IGggPSAoYiAtIHIpIC8gZCArIDI7IGJyZWFrO1xuICAgICAgY2FzZSBiOiBoID0gKHIgLSBnKSAvIGQgKyA0OyBicmVhaztcbiAgICB9XG5cbiAgICBoIC89IDY7XG4gIH1cblxuICB0aGlzLmggPSBoO1xuICB0aGlzLnMgPSBzO1xuICB0aGlzLmwgPSBsO1xufTtcblxuXG4vKipcbiAqIFJlbG9hZHMgUkdCIHVzaW5nIEhTTCB2YWx1ZXNcbiAqIENvbnZlcnRlZCBmcm9tOlxuICogaHR0cDovL2F4b25mbHV4LmNvbS9oYW5keS1yZ2ItdG8taHNsLWFuZC1yZ2ItdG8taHN2LWNvbG9yLW1vZGVsLWNcbiAqL1xuQ29sb3IucHJvdG90eXBlLmxvYWRSR0IgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHIsIGcsIGI7XG4gIHZhciBoID0gdGhpcy5oO1xuICB2YXIgcyA9IHRoaXMucztcbiAgdmFyIGwgPSB0aGlzLmw7XG5cbiAgaWYgKHMgPT09IDApIHtcbiAgICByID0gZyA9IGIgPSBsOyAgLy8gYWNocm9tYXRpY1xuICB9IGVsc2Uge1xuICAgIHZhciBxID0gbCA8IDAuNSA/IGwgKiAoMSArIHMpIDogbCArIHMgLSBsICogcztcbiAgICB2YXIgcCA9IDIgKiBsIC0gcTtcbiAgICByID0gdGhpcy5faHVlMnJnYihwLCBxLCBoICsgMSAvIDMpO1xuICAgIGcgPSB0aGlzLl9odWUycmdiKHAsIHEsIGgpO1xuICAgIGIgPSB0aGlzLl9odWUycmdiKHAsIHEsIGggLSAxIC8gMyk7XG4gIH1cblxuICB0aGlzLnIgPSBwYXJzZUludChyICogMjU1KTtcbiAgdGhpcy5nID0gcGFyc2VJbnQoZyAqIDI1NSk7XG4gIHRoaXMuYiA9IHBhcnNlSW50KGIgKiAyNTUpO1xufTtcblxuXG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0byBjb252ZXJ0IGh1ZSB0byByZ2JcbiAqIFRha2VuIGZyb206XG4gKiBodHRwOi8vYXhvbmZsdXguY29tL2hhbmR5LXJnYi10by1oc2wtYW5kLXJnYi10by1oc3YtY29sb3ItbW9kZWwtY1xuICovXG5Db2xvci5wcm90b3R5cGUuX2h1ZTJyZ2IgPSBmdW5jdGlvbihwLCBxLCB0KSB7XG4gIGlmICh0IDwgMCkgdCArPSAxO1xuICBpZiAodCA+IDEpIHQgLT0gMTtcbiAgaWYgKHQgPCAxIC8gNikgcmV0dXJuIHAgKyAocSAtIHApICogNiAqIHQ7XG4gIGlmICh0IDwgMSAvIDIpIHJldHVybiBxO1xuICBpZiAodCA8IDIgLyAzKSByZXR1cm4gcCArIChxIC0gcCkgKiAoMiAvIDMgLSB0KSAqIDY7XG4gIHJldHVybiBwO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb2xvcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9pc29tZXIvanMvY29sb3IuanNcbi8vIG1vZHVsZSBpZCA9IDE2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=");
},function(module,exports,__webpack_require__){eval("var Canvas = __webpack_require__(15);\nvar Color = __webpack_require__(16);\nvar Path = __webpack_require__(3);\nvar Point = __webpack_require__(2);\nvar Shape = __webpack_require__(18);\nvar Vector = __webpack_require__(19);\n\n\n/**\n * The Isomer class\n *\n * This file contains the Isomer base definition\n */\nfunction Isomer(canvasId, options) {\n  options = options || {};\n\n  this.canvas = new Canvas(canvasId);\n  this.angle = Math.PI / 6;\n\n  this.scale = options.scale || 70;\n\n  this._calculateTransformation();\n\n  this.originX = options.originX || this.canvas.width / 2;\n  this.originY = options.originY || this.canvas.height * 0.9;\n\n  /**\n   * Light source as defined as the angle from\n   * the object to the source.\n   *\n   * We'll define somewhat arbitrarily for now.\n   */\n  this.lightPosition = options.lightPosition || new Vector(2, -1, 3);\n  this.lightAngle = this.lightPosition.normalize();\n\n  /**\n   * The maximum color difference from shading\n   */\n  this.colorDifference = 0.20;\n  this.lightColor = options.lightColor || new Color(255, 255, 255);\n}\n\n/**\n * Sets the light position for drawing.\n */\nIsomer.prototype.setLightPosition = function(x, y, z) {\n  this.lightPosition = new Vector(x, y, z);\n  this.lightAngle = this.lightPosition.normalize();\n};\n\nIsomer.prototype._translatePoint = function(point) {\n  /**\n   * X rides along the angle extended from the origin\n   * Y rides perpendicular to this angle (in isometric view: PI - angle)\n   * Z affects the y coordinate of the drawn point\n   */\n  var xMap = new Point(point.x * this.transformation[0][0],\n                       point.x * this.transformation[0][1]);\n\n  var yMap = new Point(point.y * this.transformation[1][0],\n                       point.y * this.transformation[1][1]);\n\n  var x = this.originX + xMap.x + yMap.x;\n  var y = this.originY - xMap.y - yMap.y - (point.z * this.scale);\n  return new Point(x, y);\n};\n\n\n/**\n * Adds a shape or path to the scene\n *\n * This method also accepts arrays\n */\nIsomer.prototype.add = function(item, baseColor) {\n  if (Object.prototype.toString.call(item) == '[object Array]') {\n    for (var i = 0; i < item.length; i++) {\n      this.add(item[i], baseColor);\n    }\n  } else if (item instanceof Path) {\n    this._addPath(item, baseColor);\n  } else if (item instanceof Shape) {\n    /* Fetch paths ordered by distance to prevent overlaps */\n    var paths = item.orderedPaths();\n\n    for (var j = 0; j < paths.length; j++) {\n      this._addPath(paths[j], baseColor);\n    }\n  }\n};\n\n\n/**\n * Adds a path to the scene\n */\nIsomer.prototype._addPath = function(path, baseColor) {\n  /* Default baseColor */\n  baseColor = baseColor || new Color(120, 120, 120);\n\n  /* Compute color */\n  var v1 = Vector.fromTwoPoints(path.points[1], path.points[0]);\n  var v2 = Vector.fromTwoPoints(path.points[2], path.points[1]);\n\n  var normal = Vector.crossProduct(v1, v2).normalize();\n\n  /**\n   * Brightness is between -1 and 1 and is computed based\n   * on the dot product between the light source vector and normal.\n   */\n  var brightness = Vector.dotProduct(normal, this.lightAngle);\n  var color = baseColor.lighten(brightness * this.colorDifference, this.lightColor);\n\n  this.canvas.path(path.points.map(this._translatePoint.bind(this)), color);\n};\n\n/**\n * Precalculates transformation values based on the current angle and scale\n * which in theory reduces costly cos and sin calls\n */\nIsomer.prototype._calculateTransformation = function() {\n  this.transformation = [\n    [\n      this.scale * Math.cos(this.angle),\n      this.scale * Math.sin(this.angle)\n    ],\n    [\n      this.scale * Math.cos(Math.PI - this.angle),\n      this.scale * Math.sin(Math.PI - this.angle)\n    ]\n  ];\n};\n\n/* Namespace our primitives */\nIsomer.Canvas = Canvas;\nIsomer.Color = Color;\nIsomer.Path = Path;\nIsomer.Point = Point;\nIsomer.Shape = Shape;\nIsomer.Vector = Vector;\n\n/* Expose Isomer API */\nmodule.exports = Isomer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lzb21lci9qcy9pc29tZXIuanM/NzVhOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGlCQUFpQjtBQUNwQztBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEsbUJBQW1CLGtCQUFrQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIENhbnZhcyA9IHJlcXVpcmUoJy4vY2FudmFzJyk7XG52YXIgQ29sb3IgPSByZXF1aXJlKCcuL2NvbG9yJyk7XG52YXIgUGF0aCA9IHJlcXVpcmUoJy4vcGF0aCcpO1xudmFyIFBvaW50ID0gcmVxdWlyZSgnLi9wb2ludCcpO1xudmFyIFNoYXBlID0gcmVxdWlyZSgnLi9zaGFwZScpO1xudmFyIFZlY3RvciA9IHJlcXVpcmUoJy4vdmVjdG9yJyk7XG5cblxuLyoqXG4gKiBUaGUgSXNvbWVyIGNsYXNzXG4gKlxuICogVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBJc29tZXIgYmFzZSBkZWZpbml0aW9uXG4gKi9cbmZ1bmN0aW9uIElzb21lcihjYW52YXNJZCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB0aGlzLmNhbnZhcyA9IG5ldyBDYW52YXMoY2FudmFzSWQpO1xuICB0aGlzLmFuZ2xlID0gTWF0aC5QSSAvIDY7XG5cbiAgdGhpcy5zY2FsZSA9IG9wdGlvbnMuc2NhbGUgfHwgNzA7XG5cbiAgdGhpcy5fY2FsY3VsYXRlVHJhbnNmb3JtYXRpb24oKTtcblxuICB0aGlzLm9yaWdpblggPSBvcHRpb25zLm9yaWdpblggfHwgdGhpcy5jYW52YXMud2lkdGggLyAyO1xuICB0aGlzLm9yaWdpblkgPSBvcHRpb25zLm9yaWdpblkgfHwgdGhpcy5jYW52YXMuaGVpZ2h0ICogMC45O1xuXG4gIC8qKlxuICAgKiBMaWdodCBzb3VyY2UgYXMgZGVmaW5lZCBhcyB0aGUgYW5nbGUgZnJvbVxuICAgKiB0aGUgb2JqZWN0IHRvIHRoZSBzb3VyY2UuXG4gICAqXG4gICAqIFdlJ2xsIGRlZmluZSBzb21ld2hhdCBhcmJpdHJhcmlseSBmb3Igbm93LlxuICAgKi9cbiAgdGhpcy5saWdodFBvc2l0aW9uID0gb3B0aW9ucy5saWdodFBvc2l0aW9uIHx8IG5ldyBWZWN0b3IoMiwgLTEsIDMpO1xuICB0aGlzLmxpZ2h0QW5nbGUgPSB0aGlzLmxpZ2h0UG9zaXRpb24ubm9ybWFsaXplKCk7XG5cbiAgLyoqXG4gICAqIFRoZSBtYXhpbXVtIGNvbG9yIGRpZmZlcmVuY2UgZnJvbSBzaGFkaW5nXG4gICAqL1xuICB0aGlzLmNvbG9yRGlmZmVyZW5jZSA9IDAuMjA7XG4gIHRoaXMubGlnaHRDb2xvciA9IG9wdGlvbnMubGlnaHRDb2xvciB8fCBuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSk7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgbGlnaHQgcG9zaXRpb24gZm9yIGRyYXdpbmcuXG4gKi9cbklzb21lci5wcm90b3R5cGUuc2V0TGlnaHRQb3NpdGlvbiA9IGZ1bmN0aW9uKHgsIHksIHopIHtcbiAgdGhpcy5saWdodFBvc2l0aW9uID0gbmV3IFZlY3Rvcih4LCB5LCB6KTtcbiAgdGhpcy5saWdodEFuZ2xlID0gdGhpcy5saWdodFBvc2l0aW9uLm5vcm1hbGl6ZSgpO1xufTtcblxuSXNvbWVyLnByb3RvdHlwZS5fdHJhbnNsYXRlUG9pbnQgPSBmdW5jdGlvbihwb2ludCkge1xuICAvKipcbiAgICogWCByaWRlcyBhbG9uZyB0aGUgYW5nbGUgZXh0ZW5kZWQgZnJvbSB0aGUgb3JpZ2luXG4gICAqIFkgcmlkZXMgcGVycGVuZGljdWxhciB0byB0aGlzIGFuZ2xlIChpbiBpc29tZXRyaWMgdmlldzogUEkgLSBhbmdsZSlcbiAgICogWiBhZmZlY3RzIHRoZSB5IGNvb3JkaW5hdGUgb2YgdGhlIGRyYXduIHBvaW50XG4gICAqL1xuICB2YXIgeE1hcCA9IG5ldyBQb2ludChwb2ludC54ICogdGhpcy50cmFuc2Zvcm1hdGlvblswXVswXSxcbiAgICAgICAgICAgICAgICAgICAgICAgcG9pbnQueCAqIHRoaXMudHJhbnNmb3JtYXRpb25bMF1bMV0pO1xuXG4gIHZhciB5TWFwID0gbmV3IFBvaW50KHBvaW50LnkgKiB0aGlzLnRyYW5zZm9ybWF0aW9uWzFdWzBdLFxuICAgICAgICAgICAgICAgICAgICAgICBwb2ludC55ICogdGhpcy50cmFuc2Zvcm1hdGlvblsxXVsxXSk7XG5cbiAgdmFyIHggPSB0aGlzLm9yaWdpblggKyB4TWFwLnggKyB5TWFwLng7XG4gIHZhciB5ID0gdGhpcy5vcmlnaW5ZIC0geE1hcC55IC0geU1hcC55IC0gKHBvaW50LnogKiB0aGlzLnNjYWxlKTtcbiAgcmV0dXJuIG5ldyBQb2ludCh4LCB5KTtcbn07XG5cblxuLyoqXG4gKiBBZGRzIGEgc2hhcGUgb3IgcGF0aCB0byB0aGUgc2NlbmVcbiAqXG4gKiBUaGlzIG1ldGhvZCBhbHNvIGFjY2VwdHMgYXJyYXlzXG4gKi9cbklzb21lci5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24oaXRlbSwgYmFzZUNvbG9yKSB7XG4gIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlbSkgPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbS5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5hZGQoaXRlbVtpXSwgYmFzZUNvbG9yKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoaXRlbSBpbnN0YW5jZW9mIFBhdGgpIHtcbiAgICB0aGlzLl9hZGRQYXRoKGl0ZW0sIGJhc2VDb2xvcik7XG4gIH0gZWxzZSBpZiAoaXRlbSBpbnN0YW5jZW9mIFNoYXBlKSB7XG4gICAgLyogRmV0Y2ggcGF0aHMgb3JkZXJlZCBieSBkaXN0YW5jZSB0byBwcmV2ZW50IG92ZXJsYXBzICovXG4gICAgdmFyIHBhdGhzID0gaXRlbS5vcmRlcmVkUGF0aHMoKTtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgcGF0aHMubGVuZ3RoOyBqKyspIHtcbiAgICAgIHRoaXMuX2FkZFBhdGgocGF0aHNbal0sIGJhc2VDb2xvcik7XG4gICAgfVxuICB9XG59O1xuXG5cbi8qKlxuICogQWRkcyBhIHBhdGggdG8gdGhlIHNjZW5lXG4gKi9cbklzb21lci5wcm90b3R5cGUuX2FkZFBhdGggPSBmdW5jdGlvbihwYXRoLCBiYXNlQ29sb3IpIHtcbiAgLyogRGVmYXVsdCBiYXNlQ29sb3IgKi9cbiAgYmFzZUNvbG9yID0gYmFzZUNvbG9yIHx8IG5ldyBDb2xvcigxMjAsIDEyMCwgMTIwKTtcblxuICAvKiBDb21wdXRlIGNvbG9yICovXG4gIHZhciB2MSA9IFZlY3Rvci5mcm9tVHdvUG9pbnRzKHBhdGgucG9pbnRzWzFdLCBwYXRoLnBvaW50c1swXSk7XG4gIHZhciB2MiA9IFZlY3Rvci5mcm9tVHdvUG9pbnRzKHBhdGgucG9pbnRzWzJdLCBwYXRoLnBvaW50c1sxXSk7XG5cbiAgdmFyIG5vcm1hbCA9IFZlY3Rvci5jcm9zc1Byb2R1Y3QodjEsIHYyKS5ub3JtYWxpemUoKTtcblxuICAvKipcbiAgICogQnJpZ2h0bmVzcyBpcyBiZXR3ZWVuIC0xIGFuZCAxIGFuZCBpcyBjb21wdXRlZCBiYXNlZFxuICAgKiBvbiB0aGUgZG90IHByb2R1Y3QgYmV0d2VlbiB0aGUgbGlnaHQgc291cmNlIHZlY3RvciBhbmQgbm9ybWFsLlxuICAgKi9cbiAgdmFyIGJyaWdodG5lc3MgPSBWZWN0b3IuZG90UHJvZHVjdChub3JtYWwsIHRoaXMubGlnaHRBbmdsZSk7XG4gIHZhciBjb2xvciA9IGJhc2VDb2xvci5saWdodGVuKGJyaWdodG5lc3MgKiB0aGlzLmNvbG9yRGlmZmVyZW5jZSwgdGhpcy5saWdodENvbG9yKTtcblxuICB0aGlzLmNhbnZhcy5wYXRoKHBhdGgucG9pbnRzLm1hcCh0aGlzLl90cmFuc2xhdGVQb2ludC5iaW5kKHRoaXMpKSwgY29sb3IpO1xufTtcblxuLyoqXG4gKiBQcmVjYWxjdWxhdGVzIHRyYW5zZm9ybWF0aW9uIHZhbHVlcyBiYXNlZCBvbiB0aGUgY3VycmVudCBhbmdsZSBhbmQgc2NhbGVcbiAqIHdoaWNoIGluIHRoZW9yeSByZWR1Y2VzIGNvc3RseSBjb3MgYW5kIHNpbiBjYWxsc1xuICovXG5Jc29tZXIucHJvdG90eXBlLl9jYWxjdWxhdGVUcmFuc2Zvcm1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnRyYW5zZm9ybWF0aW9uID0gW1xuICAgIFtcbiAgICAgIHRoaXMuc2NhbGUgKiBNYXRoLmNvcyh0aGlzLmFuZ2xlKSxcbiAgICAgIHRoaXMuc2NhbGUgKiBNYXRoLnNpbih0aGlzLmFuZ2xlKVxuICAgIF0sXG4gICAgW1xuICAgICAgdGhpcy5zY2FsZSAqIE1hdGguY29zKE1hdGguUEkgLSB0aGlzLmFuZ2xlKSxcbiAgICAgIHRoaXMuc2NhbGUgKiBNYXRoLnNpbihNYXRoLlBJIC0gdGhpcy5hbmdsZSlcbiAgICBdXG4gIF07XG59O1xuXG4vKiBOYW1lc3BhY2Ugb3VyIHByaW1pdGl2ZXMgKi9cbklzb21lci5DYW52YXMgPSBDYW52YXM7XG5Jc29tZXIuQ29sb3IgPSBDb2xvcjtcbklzb21lci5QYXRoID0gUGF0aDtcbklzb21lci5Qb2ludCA9IFBvaW50O1xuSXNvbWVyLlNoYXBlID0gU2hhcGU7XG5Jc29tZXIuVmVjdG9yID0gVmVjdG9yO1xuXG4vKiBFeHBvc2UgSXNvbWVyIEFQSSAqL1xubW9kdWxlLmV4cG9ydHMgPSBJc29tZXI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vaXNvbWVyL2pzL2lzb21lci5qc1xuLy8gbW9kdWxlIGlkID0gMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("var Path = __webpack_require__(3);\nvar Point = __webpack_require__(2);\n\n/**\n * Shape utility class\n *\n * An Isomer.Shape consists of a list of Isomer.Path's\n */\nfunction Shape(paths) {\n  if (Object.prototype.toString.call(paths) === '[object Array]') {\n    this.paths = paths;\n  } else {\n    this.paths = Array.prototype.slice.call(arguments);\n  }\n}\n\n\n/**\n * Pushes a path onto the end of the Shape\n */\nShape.prototype.push = function(path) {\n  this.paths.push(path);\n};\n\n\n/**\n * Translates a given shape\n *\n * Simply a forward to Path#translate\n */\nShape.prototype.translate = function() {\n  var args = arguments;\n\n  return new Shape(this.paths.map(function(path) {\n    return path.translate.apply(path, args);\n  }));\n};\n\n/**\n * Rotates a given shape along the X axis around a given origin\n *\n * Simply a forward to Path#rotateX\n */\nShape.prototype.rotateX = function() {\n  var args = arguments;\n\n  return new Shape(this.paths.map(function(path) {\n    return path.rotateX.apply(path, args);\n  }));\n};\n\n/**\n * Rotates a given shape along the Y axis around a given origin\n *\n * Simply a forward to Path#rotateY\n */\nShape.prototype.rotateY = function() {\n  var args = arguments;\n\n  return new Shape(this.paths.map(function(path) {\n    return path.rotateY.apply(path, args);\n  }));\n};\n\n/**\n * Rotates a given shape along the Z axis around a given origin\n *\n * Simply a forward to Path#rotateZ\n */\nShape.prototype.rotateZ = function() {\n  var args = arguments;\n\n  return new Shape(this.paths.map(function(path) {\n    return path.rotateZ.apply(path, args);\n  }));\n};\n\n/**\n * Scales a path about a given origin\n *\n * Simply a forward to Point#scale\n */\nShape.prototype.scale = function() {\n  var args = arguments;\n\n  return new Shape(this.paths.map(function(path) {\n    return path.scale.apply(path, args);\n  }));\n};\n\n\n/**\n * Produces a list of the shape's paths ordered by distance to\n * prevent overlaps when drawing\n */\nShape.prototype.orderedPaths = function() {\n  var paths = this.paths.slice();\n\n  /**\n   * Sort the list of faces by distance then map the entries, returning\n   * only the path and not the added \"further point\" from earlier.\n   */\n  return paths.sort(function(pathA, pathB) {\n    return pathB.depth() - pathA.depth();\n  });\n};\n\n\n/**\n * Utility function to create a 3D object by raising a 2D path\n * along the z-axis\n */\nShape.extrude = function(path, height) {\n  height = (typeof height === 'number') ? height : 1;\n\n  var i, topPath = path.translate(0, 0, height);\n  var shape = new Shape();\n\n  /* Push the top and bottom faces, top face must be oriented correctly */\n  shape.push(path.reverse());\n  shape.push(topPath);\n\n  /* Push each side face */\n  for (i = 0; i < path.points.length; i++) {\n    shape.push(new Path([\n      topPath.points[i],\n      path.points[i],\n      path.points[(i + 1) % path.points.length],\n      topPath.points[(i + 1) % topPath.points.length]\n    ]));\n  }\n\n  return shape;\n};\n\n\n/**\n * Some shapes to play with\n */\n\n/**\n * A prism located at origin with dimensions dx, dy, dz\n */\nShape.Prism = function(origin, dx, dy, dz) {\n  dx = (typeof dx === 'number') ? dx : 1;\n  dy = (typeof dy === 'number') ? dy : 1;\n  dz = (typeof dz === 'number') ? dz : 1;\n\n  /* The shape we will return */\n  var prism = new Shape();\n\n  /* Squares parallel to the x-axis */\n  var face1 = new Path([\n    origin,\n    new Point(origin.x + dx, origin.y, origin.z),\n    new Point(origin.x + dx, origin.y, origin.z + dz),\n    new Point(origin.x, origin.y, origin.z + dz)\n  ]);\n\n  /* Push this face and its opposite */\n  prism.push(face1);\n  prism.push(face1.reverse().translate(0, dy, 0));\n\n  /* Square parallel to the y-axis */\n  var face2 = new Path([\n    origin,\n    new Point(origin.x, origin.y, origin.z + dz),\n    new Point(origin.x, origin.y + dy, origin.z + dz),\n    new Point(origin.x, origin.y + dy, origin.z)\n  ]);\n  prism.push(face2);\n  prism.push(face2.reverse().translate(dx, 0, 0));\n\n  /* Square parallel to the xy-plane */\n  var face3 = new Path([\n    origin,\n    new Point(origin.x + dx, origin.y, origin.z),\n    new Point(origin.x + dx, origin.y + dy, origin.z),\n    new Point(origin.x, origin.y + dy, origin.z)\n  ]);\n  /* This surface is oriented backwards, so we need to reverse the points */\n  prism.push(face3.reverse());\n  prism.push(face3.translate(0, 0, dz));\n\n  return prism;\n};\n\n\nShape.Pyramid = function(origin, dx, dy, dz) {\n  dx = (typeof dx === 'number') ? dx : 1;\n  dy = (typeof dy === 'number') ? dy : 1;\n  dz = (typeof dz === 'number') ? dz : 1;\n\n  var pyramid = new Shape();\n\n  /* Path parallel to the x-axis */\n  var face1 = new Path([\n    origin,\n    new Point(origin.x + dx, origin.y, origin.z),\n    new Point(origin.x + dx / 2, origin.y + dy / 2, origin.z + dz)\n  ]);\n  /* Push the face, and its opposite face, by rotating around the Z-axis */\n  pyramid.push(face1);\n  pyramid.push(face1.rotateZ(origin.translate(dx / 2, dy / 2), Math.PI));\n\n  /* Path parallel to the y-axis */\n  var face2 = new Path([\n    origin,\n    new Point(origin.x + dx / 2, origin.y + dy / 2, origin.z + dz),\n    new Point(origin.x, origin.y + dy, origin.z)\n  ]);\n  pyramid.push(face2);\n  pyramid.push(face2.rotateZ(origin.translate(dx / 2, dy / 2), Math.PI));\n\n  return pyramid;\n};\n\n\nShape.Cylinder = function(origin, radius, vertices, height) {\n  radius = (typeof radius === 'number') ? radius : 1;\n\n  var circle = Path.Circle(origin, radius, vertices);\n  var cylinder = Shape.extrude(circle, height);\n\n  return cylinder;\n};\n\n\nmodule.exports = Shape;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports){eval("function Vector (i, j, k) {\n  this.i = (typeof i === 'number') ? i : 0;\n  this.j = (typeof j === 'number') ? j : 0;\n  this.k = (typeof k === 'number') ? k : 0;\n}\n\n/**\n * Alternate constructor\n */\nVector.fromTwoPoints = function(p1, p2) {\n  return new Vector(p2.x - p1.x, p2.y - p1.y, p2.z - p1.z);\n};\n\nVector.crossProduct = function(v1, v2) {\n  var i = v1.j * v2.k - v2.j * v1.k;\n  var j = -1 * (v1.i * v2.k - v2.i * v1.k);\n  var k = v1.i * v2.j - v2.i * v1.j;\n\n  return new Vector(i, j, k);\n};\n\nVector.dotProduct = function(v1, v2) {\n  return v1.i * v2.i + v1.j * v2.j + v1.k * v2.k;\n};\n\nVector.prototype.magnitude = function() {\n  return Math.sqrt(this.i * this.i + this.j * this.j + this.k * this.k);\n};\n\nVector.prototype.normalize = function() {\n  var magnitude = this.magnitude();\n  /**\n   * If the magnitude is 0 then return the zero vector instead of dividing by 0\n   */\n  if (magnitude === 0) {\n    return new Vector(0, 0, 0);\n  }\n  return new Vector(this.i / magnitude, this.j / magnitude, this.k / magnitude);\n};\n\nmodule.exports = Vector;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lzb21lci9qcy92ZWN0b3IuanM/YTAxMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBWZWN0b3IgKGksIGosIGspIHtcbiAgdGhpcy5pID0gKHR5cGVvZiBpID09PSAnbnVtYmVyJykgPyBpIDogMDtcbiAgdGhpcy5qID0gKHR5cGVvZiBqID09PSAnbnVtYmVyJykgPyBqIDogMDtcbiAgdGhpcy5rID0gKHR5cGVvZiBrID09PSAnbnVtYmVyJykgPyBrIDogMDtcbn1cblxuLyoqXG4gKiBBbHRlcm5hdGUgY29uc3RydWN0b3JcbiAqL1xuVmVjdG9yLmZyb21Ud29Qb2ludHMgPSBmdW5jdGlvbihwMSwgcDIpIHtcbiAgcmV0dXJuIG5ldyBWZWN0b3IocDIueCAtIHAxLngsIHAyLnkgLSBwMS55LCBwMi56IC0gcDEueik7XG59O1xuXG5WZWN0b3IuY3Jvc3NQcm9kdWN0ID0gZnVuY3Rpb24odjEsIHYyKSB7XG4gIHZhciBpID0gdjEuaiAqIHYyLmsgLSB2Mi5qICogdjEuaztcbiAgdmFyIGogPSAtMSAqICh2MS5pICogdjIuayAtIHYyLmkgKiB2MS5rKTtcbiAgdmFyIGsgPSB2MS5pICogdjIuaiAtIHYyLmkgKiB2MS5qO1xuXG4gIHJldHVybiBuZXcgVmVjdG9yKGksIGosIGspO1xufTtcblxuVmVjdG9yLmRvdFByb2R1Y3QgPSBmdW5jdGlvbih2MSwgdjIpIHtcbiAgcmV0dXJuIHYxLmkgKiB2Mi5pICsgdjEuaiAqIHYyLmogKyB2MS5rICogdjIuaztcbn07XG5cblZlY3Rvci5wcm90b3R5cGUubWFnbml0dWRlID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBNYXRoLnNxcnQodGhpcy5pICogdGhpcy5pICsgdGhpcy5qICogdGhpcy5qICsgdGhpcy5rICogdGhpcy5rKTtcbn07XG5cblZlY3Rvci5wcm90b3R5cGUubm9ybWFsaXplID0gZnVuY3Rpb24oKSB7XG4gIHZhciBtYWduaXR1ZGUgPSB0aGlzLm1hZ25pdHVkZSgpO1xuICAvKipcbiAgICogSWYgdGhlIG1hZ25pdHVkZSBpcyAwIHRoZW4gcmV0dXJuIHRoZSB6ZXJvIHZlY3RvciBpbnN0ZWFkIG9mIGRpdmlkaW5nIGJ5IDBcbiAgICovXG4gIGlmIChtYWduaXR1ZGUgPT09IDApIHtcbiAgICByZXR1cm4gbmV3IFZlY3RvcigwLCAwLCAwKTtcbiAgfVxuICByZXR1cm4gbmV3IFZlY3Rvcih0aGlzLmkgLyBtYWduaXR1ZGUsIHRoaXMuaiAvIG1hZ25pdHVkZSwgdGhpcy5rIC8gbWFnbml0dWRlKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gVmVjdG9yO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lzb21lci9qcy92ZWN0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval('(function(exports){\n"use strict";\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are multiplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket("/ws", {params: {userToken: "123"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here\'s an example chat room example where `"new_msg"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel("room:123", {token: roomToken})\n//     channel.on("new_msg", msg => console.log("Got message", msg) )\n//     $input.onEnter( e => {\n//       channel.push("new_msg", {body: e.target.val}, 10000)\n//        .receive("ok", (msg) => console.log("created message", msg) )\n//        .receive("error", (reasons) => console.log("create failed", reasons) )\n//        .receive("timeout", () => console.log("Networking issue...") )\n//     })\n//     channel.join()\n//       .receive("ok", ({messages}) => console.log("catching up", messages) )\n//       .receive("error", ({reason}) => console.log("failed join", reason) )\n//       .receive("timeout", () => console.log("Networking issue. Still waiting...") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an "ok" status, while unsuccessful joins\n// receive "error".\n//\n// ## Duplicate Join Subscriptions\n//\n// While the client may join any number of topics on any number of channels,\n// the client may only hold a single subscription for each unique topic at any\n// given time. When attempting to create a duplicate subscription,\n// the server will close the existing channel, log a warning, and\n// spawn a new channel for the topic. The client will have their\n// `channel.onClose` callbacks fired for the existing channel, and the new\n// channel join will have its receive hooks processed as normal.\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive("timeout", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log("there was an error with the connection!") )\n//     socket.onClose( () => console.log("the connection dropped") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log("there was an error!") )\n//     channel.onClose( () => console.log("the channel has gone away gracefully") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attempted\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n//\n// ## Presence\n//\n// The `Presence` object provides features for syncing presence information\n// from the server with the client and handling presences joining and leaving.\n//\n// ### Syncing initial state from the server\n//\n// `Presence.syncState` is used to sync the list of presences on the server\n// with the client\'s state. An optional `onJoin` and `onLeave` callback can\n// be provided to react to changes in the client\'s local presences across\n// disconnects and reconnects with the server.\n//\n// `Presence.syncDiff` is used to sync a diff of presence join and leave\n// events from the server, as they happen. Like `syncState`, `syncDiff`\n// accepts optional `onJoin` and `onLeave` callbacks to react to a user\n// joining or leaving from a device.\n//\n// ### Listing Presences\n//\n// `Presence.list` is used to return a list of presence information\n// based on the local state of metadata. By default, all presence\n// metadata is returned, but a `listBy` function can be supplied to\n// allow the client to select which metadata to use for a given presence.\n// For example, you may have a user online from different devices with a\n// a metadata status of "online", but they have set themselves to "away"\n// on another device. In this case, they app may choose to use the "away"\n// status for what appears on the UI. The example below defines a `listBy`\n// function which prioritizes the first metadata which was registered for\n// each user. This could be the first tab they opened, or the first device\n// they came online from:\n//\n//     let state = {}\n//     state = Presence.syncState(state, stateFromServer)\n//     let listBy = (id, {metas: [first, ...rest]}) => {\n//       first.count = rest.length + 1 // count of this user\'s presences\n//       first.id = id\n//       return first\n//     }\n//     let onlineUsers = Presence.list(state, listBy)\n//\n//\n// ### Example Usage\n//\n//     // detect if user has joined for the 1st time or from another tab/device\n//     let onJoin = (id, current, newPres) => {\n//       if(!current){\n//         console.log("user has entered for the first time", newPres)\n//       } else {\n//         console.log("user additional presence", newPres)\n//       }\n//     }\n//     // detect if user has left from all tabs/devices, or is still present\n//     let onLeave = (id, current, leftPres) => {\n//       if(current.metas.length === 0){\n//         console.log("user has left from all devices", leftPres)\n//       } else {\n//         console.log("user left from a device", leftPres)\n//       }\n//     }\n//     let presences = {} // client\'s initial empty presence state\n//     // receive initial presence data from server, sent after join\n//     myChannel.on("presences", state => {\n//       presences = Presence.syncState(presences, state, onJoin, onLeave)\n//       displayUsers(Presence.list(presences))\n//     })\n//     // receive "presence_diff" from server, containing join/leave events\n//     myChannel.on("presence_diff", diff => {\n//       presences = Presence.syncDiff(presences, diff, onJoin, onLeave)\n//       this.setState({users: Presence.list(room.presences, listBy)})\n//     })\n//\nvar VSN = "1.0.0";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar CHANNEL_STATES = {\n  closed: "closed",\n  errored: "errored",\n  joined: "joined",\n  joining: "joining",\n  leaving: "leaving"\n};\nvar CHANNEL_EVENTS = {\n  close: "phx_close",\n  error: "phx_error",\n  join: "phx_join",\n  reply: "phx_reply",\n  leave: "phx_leave"\n};\nvar TRANSPORTS = {\n  longpoll: "longpoll",\n  websocket: "websocket"\n};\n\nvar Push = function () {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `"phx_join"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n\n  _createClass(Push, [{\n    key: "resend",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n      this.send();\n    }\n  }, {\n    key: "send",\n    value: function send() {\n      if (this.hasReceived("timeout")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref\n      });\n    }\n  }, {\n    key: "receive",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n\n      this.recHooks.push({ status: status, callback: callback });\n      return this;\n    }\n\n    // private\n\n  }, {\n    key: "matchReceive",\n    value: function matchReceive(_ref) {\n      var status = _ref.status;\n      var response = _ref.response;\n      var ref = _ref.ref;\n\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: "cancelRefEvent",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: "cancelTimeout",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: "startTimeout",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        return;\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger("timeout", {});\n      }, this.timeout);\n    }\n  }, {\n    key: "hasReceived",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: "trigger",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, { status: status, response: response });\n    }\n  }]);\n\n  return Push;\n}();\n\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n\n    _classCallCheck(this, Channel);\n\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive("ok", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.rejoinTimer.reset();\n      _this2.socket.log("channel", "close " + _this2.topic + " " + _this2.joinRef());\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      if (_this2.isLeaving() || _this2.isClosed()) {\n        return;\n      }\n      _this2.socket.log("channel", "error " + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive("timeout", function () {\n      if (!_this2.isJoining()) {\n        return;\n      }\n      _this2.socket.log("channel", "timeout " + _this2.topic, _this2.joinPush.timeout);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(Channel, [{\n    key: "rejoinUntilConnected",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: "join",\n    value: function join() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      if (this.joinedOnce) {\n        throw "tried to join multiple times. \'join\' can only be called a single time per channel instance";\n      } else {\n        this.joinedOnce = true;\n        this.rejoin(timeout);\n        return this.joinPush;\n      }\n    }\n  }, {\n    key: "onClose",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: "onError",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: "on",\n    value: function on(event, callback) {\n      this.bindings.push({ event: event, callback: callback });\n    }\n  }, {\n    key: "off",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: "canPush",\n    value: function canPush() {\n      return this.socket.isConnected() && this.isJoined();\n    }\n  }, {\n    key: "push",\n    value: function push(event, payload) {\n      var timeout = arguments.length <= 2 || arguments[2] === undefined ? this.timeout : arguments[2];\n\n      if (!this.joinedOnce) {\n        throw "tried to push \'" + event + "\' to \'" + this.topic + "\' before joining. Use channel.join() before pushing events";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n\n    // Leaves the channel\n    //\n    // Unsubscribes from server events, and\n    // instructs channel to terminate on server\n    //\n    // Triggers onClose() hooks\n    //\n    // To receive leave acknowledgements, use the a `receive`\n    // hook to bind to the server ack, ie:\n    //\n    //     channel.leave().receive("ok", () => alert("left!") )\n    //\n\n  }, {\n    key: "leave",\n    value: function leave() {\n      var _this3 = this;\n\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      this.state = CHANNEL_STATES.leaving;\n      var onClose = function onClose() {\n        _this3.socket.log("channel", "leave " + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, "leave", _this3.joinRef());\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive("ok", function () {\n        return onClose();\n      }).receive("timeout", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger("ok", {});\n      }\n\n      return leavePush;\n    }\n\n    // Overridable message hook\n    //\n    // Receives all events for specialized message handling\n    // before dispatching to the channel callbacks.\n    //\n    // Must return the payload, modified or unmodified\n\n  }, {\n    key: "onMessage",\n    value: function onMessage(event, payload, ref) {\n      return payload;\n    }\n\n    // private\n\n  }, {\n    key: "isMember",\n    value: function isMember(topic) {\n      return this.topic === topic;\n    }\n  }, {\n    key: "joinRef",\n    value: function joinRef() {\n      return this.joinPush.ref;\n    }\n  }, {\n    key: "sendJoin",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: "rejoin",\n    value: function rejoin() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n      if (this.isLeaving()) {\n        return;\n      }\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: "trigger",\n    value: function trigger(event, payload, ref) {\n      var close = CHANNEL_EVENTS.close;\n      var error = CHANNEL_EVENTS.error;\n      var leave = CHANNEL_EVENTS.leave;\n      var join = CHANNEL_EVENTS.join;\n\n      if (ref && [close, error, leave, join].indexOf(event) >= 0 && ref !== this.joinRef()) {\n        return;\n      }\n      var handledPayload = this.onMessage(event, payload, ref);\n      if (payload && !handledPayload) {\n        throw "channel onMessage callbacks must return the payload, modified or unmodified";\n      }\n\n      this.bindings.filter(function (bind) {\n        return bind.event === event;\n      }).map(function (bind) {\n        return bind.callback(handledPayload, ref);\n      });\n    }\n  }, {\n    key: "replyEventName",\n    value: function replyEventName(ref) {\n      return "chan_reply_" + ref;\n    }\n  }, {\n    key: "isClosed",\n    value: function isClosed() {\n      return this.state === CHANNEL_STATES.closed;\n    }\n  }, {\n    key: "isErrored",\n    value: function isErrored() {\n      return this.state === CHANNEL_STATES.errored;\n    }\n  }, {\n    key: "isJoined",\n    value: function isJoined() {\n      return this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: "isJoining",\n    value: function isJoining() {\n      return this.state === CHANNEL_STATES.joining;\n    }\n  }, {\n    key: "isLeaving",\n    value: function isLeaving() {\n      return this.state === CHANNEL_STATES.leaving;\n    }\n  }]);\n\n  return Channel;\n}();\n\nvar Socket = exports.Socket = function () {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, "ws://example.com/ws",\n  //                                               "wss://example.com"\n  //                                               "/ws" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n\n  function Socket(endPoint) {\n    var _this4 = this;\n\n    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, Socket);\n\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + "/" + TRANSPORTS.websocket;\n    this.reconnectTimer = new Timer(function () {\n      _this4.disconnect(function () {\n        return _this4.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n\n  _createClass(Socket, [{\n    key: "protocol",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? "wss" : "ws";\n    }\n  }, {\n    key: "endPointURL",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n      if (uri.charAt(0) !== "/") {\n        return uri;\n      }\n      if (uri.charAt(1) === "/") {\n        return this.protocol() + ":" + uri;\n      }\n\n      return this.protocol() + "://" + location.host + uri;\n    }\n  }, {\n    key: "disconnect",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || "");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    // params - The params to send when connecting, for example `{user_id: userToken}`\n\n  }, {\n    key: "connect",\n    value: function connect(params) {\n      var _this5 = this;\n\n      if (params) {\n        console && console.log("passing params to connect is deprecated. Instead pass :params to the Socket constructor");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this5.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this5.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this5.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this5.onConnClose(event);\n      };\n    }\n\n    // Logs the message. Override `this.logger` for specialized logging. noops by default\n\n  }, {\n    key: "log",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert("An error occurred") })\n    //\n\n  }, {\n    key: "onOpen",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: "onClose",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: "onError",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: "onMessage",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: "onConnOpen",\n    value: function onConnOpen() {\n      var _this6 = this;\n\n      this.log("transport", "connected to " + this.endPointURL(), this.transport.prototype);\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this6.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: "onConnClose",\n    value: function onConnClose(event) {\n      this.log("transport", "close", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: "onConnError",\n    value: function onConnError(error) {\n      this.log("transport", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: "triggerChanError",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: "connectionState",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return "connecting";\n        case SOCKET_STATES.open:\n          return "open";\n        case SOCKET_STATES.closing:\n          return "closing";\n        default:\n          return "closed";\n      }\n    }\n  }, {\n    key: "isConnected",\n    value: function isConnected() {\n      return this.connectionState() === "open";\n    }\n  }, {\n    key: "remove",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return c.joinRef() !== channel.joinRef();\n      });\n    }\n  }, {\n    key: "channel",\n    value: function channel(topic) {\n      var chanParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: "push",\n    value: function push(data) {\n      var _this7 = this;\n\n      var topic = data.topic;\n      var event = data.event;\n      var payload = data.payload;\n      var ref = data.ref;\n\n      var callback = function callback() {\n        return _this7.conn.send(JSON.stringify(data));\n      };\n      this.log("push", topic + " " + event + " (" + ref + ")", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    // Return the next message ref, accounting for overflows\n\n  }, {\n    key: "makeRef",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n  }, {\n    key: "sendHeartbeat",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      this.push({ topic: "phoenix", event: "heartbeat", payload: {}, ref: this.makeRef() });\n    }\n  }, {\n    key: "flushSendBuffer",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: "onConnMessage",\n    value: function onConnMessage(rawMessage) {\n      var msg = JSON.parse(rawMessage.data);\n      var topic = msg.topic;\n      var event = msg.event;\n      var payload = msg.payload;\n      var ref = msg.ref;\n\n      this.log("receive", (payload.status || "") + " " + topic + " " + event + " " + (ref && "(" + ref + ")" || ""), payload);\n      this.channels.filter(function (channel) {\n        return channel.isMember(topic);\n      }).forEach(function (channel) {\n        return channel.trigger(event, payload, ref);\n      });\n      this.stateChangeCallbacks.message.forEach(function (callback) {\n        return callback(msg);\n      });\n    }\n  }]);\n\n  return Socket;\n}();\n\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n\n    this.poll();\n  }\n\n  _createClass(LongPoll, [{\n    key: "normalizeEndpoint",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace("ws://", "http://").replace("wss://", "https://").replace(new RegExp("(.*)\\/" + TRANSPORTS.websocket), "$1/" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: "endpointURL",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n    }\n  }, {\n    key: "closeAndRetry",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: "ontimeout",\n    value: function ontimeout() {\n      this.onerror("timeout");\n      this.closeAndRetry();\n    }\n  }, {\n    key: "poll",\n    value: function poll() {\n      var _this8 = this;\n\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n\n      Ajax.request("GET", this.endpointURL(), "application/json", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status;\n          var token = resp.token;\n          var messages = resp.messages;\n\n          _this8.token = token;\n        } else {\n          var status = 0;\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this8.onmessage({ data: JSON.stringify(msg) });\n            });\n            _this8.poll();\n            break;\n          case 204:\n            _this8.poll();\n            break;\n          case 410:\n            _this8.readyState = SOCKET_STATES.open;\n            _this8.onopen();\n            _this8.poll();\n            break;\n          case 0:\n          case 500:\n            _this8.onerror();\n            _this8.closeAndRetry();\n            break;\n          default:\n            throw "unhandled poll status " + status;\n        }\n      });\n    }\n  }, {\n    key: "send",\n    value: function send(body) {\n      var _this9 = this;\n\n      Ajax.request("POST", this.endpointURL(), "application/json", body, this.timeout, this.onerror.bind(this, "timeout"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this9.onerror(status);\n          _this9.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: "close",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n\n  return LongPoll;\n}();\n\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n\n  _createClass(Ajax, null, [{\n    key: "request",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var req = window.XMLHttpRequest ? new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject("Microsoft.XMLHTTP"); // IE6, IE5\n        this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: "xdomainRequest",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this10 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this10.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n\n      req.send(body);\n    }\n  }, {\n    key: "xhrRequest",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this11 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint, true);\n      req.setRequestHeader("Content-Type", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this11.states.complete && callback) {\n          var response = _this11.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      req.send(body);\n    }\n  }, {\n    key: "parseJSON",\n    value: function parseJSON(resp) {\n      return resp && resp !== "" ? JSON.parse(resp) : null;\n    }\n  }, {\n    key: "serialize",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + "[" + key + "]" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === "undefined" ? "undefined" : _typeof(paramVal)) === "object") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + "=" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join("&");\n    }\n  }, {\n    key: "appendParams",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? "&" : "?";\n      return "" + url + prefix + this.serialize(params);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.states = { complete: 4 };\n\nvar Presence = exports.Presence = {\n  syncState: function syncState(currentState, newState, onJoin, onLeave) {\n    var _this12 = this;\n\n    var state = this.clone(currentState);\n    var joins = {};\n    var leaves = {};\n\n    this.map(state, function (key, presence) {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, function (key, newPresence) {\n      var currentPresence = state[key];\n      if (currentPresence) {\n        (function () {\n          var newRefs = newPresence.metas.map(function (m) {\n            return m.phx_ref;\n          });\n          var curRefs = currentPresence.metas.map(function (m) {\n            return m.phx_ref;\n          });\n          var joinedMetas = newPresence.metas.filter(function (m) {\n            return curRefs.indexOf(m.phx_ref) < 0;\n          });\n          var leftMetas = currentPresence.metas.filter(function (m) {\n            return newRefs.indexOf(m.phx_ref) < 0;\n          });\n          if (joinedMetas.length > 0) {\n            joins[key] = newPresence;\n            joins[key].metas = joinedMetas;\n          }\n          if (leftMetas.length > 0) {\n            leaves[key] = _this12.clone(currentPresence);\n            leaves[key].metas = leftMetas;\n          }\n        })();\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, { joins: joins, leaves: leaves }, onJoin, onLeave);\n  },\n  syncDiff: function syncDiff(currentState, _ref2, onJoin, onLeave) {\n    var joins = _ref2.joins;\n    var leaves = _ref2.leaves;\n\n    var state = this.clone(currentState);\n    if (!onJoin) {\n      onJoin = function onJoin() {};\n    }\n    if (!onLeave) {\n      onLeave = function onLeave() {};\n    }\n\n    this.map(joins, function (key, newPresence) {\n      var currentPresence = state[key];\n      state[key] = newPresence;\n      if (currentPresence) {\n        var _state$key$metas;\n\n        (_state$key$metas = state[key].metas).unshift.apply(_state$key$metas, _toConsumableArray(currentPresence.metas));\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, function (key, leftPresence) {\n      var currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      var refsToRemove = leftPresence.metas.map(function (m) {\n        return m.phx_ref;\n      });\n      currentPresence.metas = currentPresence.metas.filter(function (p) {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  },\n  list: function list(presences, chooser) {\n    if (!chooser) {\n      chooser = function chooser(key, pres) {\n        return pres;\n      };\n    }\n\n    return this.map(presences, function (key, presence) {\n      return chooser(key, presence);\n    });\n  },\n\n  // private\n\n  map: function map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map(function (key) {\n      return func(key, obj[key]);\n    });\n  },\n  clone: function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n\n  _createClass(Timer, [{\n    key: "reset",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    // Cancels any previous scheduleTimeout and schedules callback\n\n  }, {\n    key: "scheduleTimeout",\n    value: function scheduleTimeout() {\n      var _this13 = this;\n\n      clearTimeout(this.timer);\n\n      this.timer = setTimeout(function () {\n        _this13.tries = _this13.tries + 1;\n        _this13.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n\n  return Timer;\n}();\n\n})( false ? window.Phoenix = window.Phoenix || {} : exports);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},function(module,exports,__webpack_require__){eval("var EventEmitter = __webpack_require__(13);\r\nmodule.exports = new EventEmitter();\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9lbWl0dGVyLmpzPzgyNGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsImZpbGUiOiIyMS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2hvdC9lbWl0dGVyLmpzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval('/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(updatedModules, renewedModules) {\r\n\tvar unacceptedModules = updatedModules.filter(function(moduleId) {\r\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\r\n\t});\r\n\r\n\tif(unacceptedModules.length > 0) {\r\n\t\tconsole.warn("[HMR] The following modules couldn\'t be hot updated: (They would need a full reload!)");\r\n\t\tunacceptedModules.forEach(function(moduleId) {\r\n\t\t\tconsole.warn("[HMR]  - " + moduleId);\r\n\t\t});\r\n\t}\r\n\r\n\tif(!renewedModules || renewedModules.length === 0) {\r\n\t\tconsole.log("[HMR] Nothing hot updated.");\r\n\t} else {\r\n\t\tconsole.log("[HMR] Updated modules:");\r\n\t\trenewedModules.forEach(function(moduleId) {\r\n\t\t\tconsole.log("[HMR]  - " + moduleId);\r\n\t\t});\r\n\t}\r\n};\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9sb2ctYXBwbHktcmVzdWx0LmpzP2Q3NjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVwZGF0ZWRNb2R1bGVzLCByZW5ld2VkTW9kdWxlcykge1xyXG5cdHZhciB1bmFjY2VwdGVkTW9kdWxlcyA9IHVwZGF0ZWRNb2R1bGVzLmZpbHRlcihmdW5jdGlvbihtb2R1bGVJZCkge1xyXG5cdFx0cmV0dXJuIHJlbmV3ZWRNb2R1bGVzICYmIHJlbmV3ZWRNb2R1bGVzLmluZGV4T2YobW9kdWxlSWQpIDwgMDtcclxuXHR9KTtcclxuXHJcblx0aWYodW5hY2NlcHRlZE1vZHVsZXMubGVuZ3RoID4gMCkge1xyXG5cdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gVGhlIGZvbGxvd2luZyBtb2R1bGVzIGNvdWxkbid0IGJlIGhvdCB1cGRhdGVkOiAoVGhleSB3b3VsZCBuZWVkIGEgZnVsbCByZWxvYWQhKVwiKTtcclxuXHRcdHVuYWNjZXB0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24obW9kdWxlSWQpIHtcclxuXHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gIC0gXCIgKyBtb2R1bGVJZCk7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdGlmKCFyZW5ld2VkTW9kdWxlcyB8fCByZW5ld2VkTW9kdWxlcy5sZW5ndGggPT09IDApIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW0hNUl0gTm90aGluZyBob3QgdXBkYXRlZC5cIik7XHJcblx0fSBlbHNlIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW0hNUl0gVXBkYXRlZCBtb2R1bGVzOlwiKTtcclxuXHRcdHJlbmV3ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24obW9kdWxlSWQpIHtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJbSE1SXSAgLSBcIiArIG1vZHVsZUlkKTtcclxuXHRcdH0pO1xyXG5cdH1cclxufTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2hvdC9sb2ctYXBwbHktcmVzdWx0LmpzXG4vLyBtb2R1bGUgaWQgPSAyMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9')},function(n,t,B){B(7),B(4),B(5),n.exports=B(6)}]);